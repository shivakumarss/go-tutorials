// Code generated by protoc-gen-go. DO NOT EDIT.
// source: realtime-bidding.proto

package realtime_bidding

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reasons for constrained usage treatment of user data (google_user_id,
// hosted_match_data, IDFA, etc).
type BidRequest_UserDataTreatment int32

const (
	// The current request should be treated as child-directed for purposes of
	// the Children's Online Privacy Protection Act. See
	// https://support.google.com/adxseller/answer/4442399 for more information.
	BidRequest_TAG_FOR_CHILD_DIRECTED_TREATMENT BidRequest_UserDataTreatment = 0
)

var BidRequest_UserDataTreatment_name = map[int32]string{
	0: "TAG_FOR_CHILD_DIRECTED_TREATMENT",
}

var BidRequest_UserDataTreatment_value = map[string]int32{
	"TAG_FOR_CHILD_DIRECTED_TREATMENT": 0,
}

func (x BidRequest_UserDataTreatment) Enum() *BidRequest_UserDataTreatment {
	p := new(BidRequest_UserDataTreatment)
	*p = x
	return p
}

func (x BidRequest_UserDataTreatment) String() string {
	return proto.EnumName(BidRequest_UserDataTreatment_name, int32(x))
}

func (x *BidRequest_UserDataTreatment) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_UserDataTreatment_value, data, "BidRequest_UserDataTreatment")
	if err != nil {
		return err
	}
	*x = BidRequest_UserDataTreatment(value)
	return nil
}

func (BidRequest_UserDataTreatment) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 0}
}

// The type of auction that will be run for this query.
type BidRequest_AuctionType int32

const (
	BidRequest_UNKNOWN_AUCTION_TYPE BidRequest_AuctionType = 0
	BidRequest_FIRST_PRICE          BidRequest_AuctionType = 1
	BidRequest_SECOND_PRICE         BidRequest_AuctionType = 2
	BidRequest_FIXED_PRICE          BidRequest_AuctionType = 3
)

var BidRequest_AuctionType_name = map[int32]string{
	0: "UNKNOWN_AUCTION_TYPE",
	1: "FIRST_PRICE",
	2: "SECOND_PRICE",
	3: "FIXED_PRICE",
}

var BidRequest_AuctionType_value = map[string]int32{
	"UNKNOWN_AUCTION_TYPE": 0,
	"FIRST_PRICE":          1,
	"SECOND_PRICE":         2,
	"FIXED_PRICE":          3,
}

func (x BidRequest_AuctionType) Enum() *BidRequest_AuctionType {
	p := new(BidRequest_AuctionType)
	*p = x
	return p
}

func (x BidRequest_AuctionType) String() string {
	return proto.EnumName(BidRequest_AuctionType_name, int32(x))
}

func (x *BidRequest_AuctionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AuctionType_value, data, "BidRequest_AuctionType")
	if err != nil {
		return err
	}
	*x = BidRequest_AuctionType(value)
	return nil
}

func (BidRequest_AuctionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 1}
}

// Publisher type of the inventory where the ad will be shown. For an AdX
// publisher, its inventory can be either owned and operated (O&O),
// represented by the publisher, or of unknown status. AdSense and AdMob
// inventory is represented by Google.
type BidRequest_PublisherType int32

const (
	BidRequest_UNKNOWN_PUBLISHER_TYPE           BidRequest_PublisherType = 0
	BidRequest_ADX_PUBLISHER_OWNED_AND_OPERATED BidRequest_PublisherType = 1
	BidRequest_ADX_PUBLISHER_REPRESENTED        BidRequest_PublisherType = 2
	BidRequest_GOOGLE_REPRESENTED               BidRequest_PublisherType = 3
)

var BidRequest_PublisherType_name = map[int32]string{
	0: "UNKNOWN_PUBLISHER_TYPE",
	1: "ADX_PUBLISHER_OWNED_AND_OPERATED",
	2: "ADX_PUBLISHER_REPRESENTED",
	3: "GOOGLE_REPRESENTED",
}

var BidRequest_PublisherType_value = map[string]int32{
	"UNKNOWN_PUBLISHER_TYPE":           0,
	"ADX_PUBLISHER_OWNED_AND_OPERATED": 1,
	"ADX_PUBLISHER_REPRESENTED":        2,
	"GOOGLE_REPRESENTED":               3,
}

func (x BidRequest_PublisherType) Enum() *BidRequest_PublisherType {
	p := new(BidRequest_PublisherType)
	*p = x
	return p
}

func (x BidRequest_PublisherType) String() string {
	return proto.EnumName(BidRequest_PublisherType_name, int32(x))
}

func (x *BidRequest_PublisherType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_PublisherType_value, data, "BidRequest_PublisherType")
	if err != nil {
		return err
	}
	*x = BidRequest_PublisherType(value)
	return nil
}

func (BidRequest_PublisherType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 2}
}

// The type of device on which the ad will be shown.
type BidRequest_Device_DeviceType int32

const (
	BidRequest_Device_UNKNOWN_DEVICE BidRequest_Device_DeviceType = 0
	BidRequest_Device_HIGHEND_PHONE  BidRequest_Device_DeviceType = 1
	BidRequest_Device_TABLET         BidRequest_Device_DeviceType = 2
	// Desktop or laptop devices.
	BidRequest_Device_PERSONAL_COMPUTER BidRequest_Device_DeviceType = 3
	// Both connected TVs (that is, smart TVs) and connected devices
	// (such as Roku and Apple TV).
	BidRequest_Device_CONNECTED_TV BidRequest_Device_DeviceType = 4
	BidRequest_Device_GAME_CONSOLE BidRequest_Device_DeviceType = 5
	BidRequest_Device_SET_TOP_BOX  BidRequest_Device_DeviceType = 6
)

var BidRequest_Device_DeviceType_name = map[int32]string{
	0: "UNKNOWN_DEVICE",
	1: "HIGHEND_PHONE",
	2: "TABLET",
	3: "PERSONAL_COMPUTER",
	4: "CONNECTED_TV",
	5: "GAME_CONSOLE",
	6: "SET_TOP_BOX",
}

var BidRequest_Device_DeviceType_value = map[string]int32{
	"UNKNOWN_DEVICE":    0,
	"HIGHEND_PHONE":     1,
	"TABLET":            2,
	"PERSONAL_COMPUTER": 3,
	"CONNECTED_TV":      4,
	"GAME_CONSOLE":      5,
	"SET_TOP_BOX":       6,
}

func (x BidRequest_Device_DeviceType) Enum() *BidRequest_Device_DeviceType {
	p := new(BidRequest_Device_DeviceType)
	*p = x
	return p
}

func (x BidRequest_Device_DeviceType) String() string {
	return proto.EnumName(BidRequest_Device_DeviceType_name, int32(x))
}

func (x *BidRequest_Device_DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Device_DeviceType_value, data, "BidRequest_Device_DeviceType")
	if err != nil {
		return err
	}
	*x = BidRequest_Device_DeviceType(value)
	return nil
}

func (BidRequest_Device_DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 4, 0}
}

type BidRequest_Device_ScreenOrientation int32

const (
	BidRequest_Device_UNKNOWN_ORIENTATION BidRequest_Device_ScreenOrientation = 0
	BidRequest_Device_PORTRAIT            BidRequest_Device_ScreenOrientation = 1
	BidRequest_Device_LANDSCAPE           BidRequest_Device_ScreenOrientation = 2
)

var BidRequest_Device_ScreenOrientation_name = map[int32]string{
	0: "UNKNOWN_ORIENTATION",
	1: "PORTRAIT",
	2: "LANDSCAPE",
}

var BidRequest_Device_ScreenOrientation_value = map[string]int32{
	"UNKNOWN_ORIENTATION": 0,
	"PORTRAIT":            1,
	"LANDSCAPE":           2,
}

func (x BidRequest_Device_ScreenOrientation) Enum() *BidRequest_Device_ScreenOrientation {
	p := new(BidRequest_Device_ScreenOrientation)
	*p = x
	return p
}

func (x BidRequest_Device_ScreenOrientation) String() string {
	return proto.EnumName(BidRequest_Device_ScreenOrientation_name, int32(x))
}

func (x *BidRequest_Device_ScreenOrientation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Device_ScreenOrientation_value, data, "BidRequest_Device_ScreenOrientation")
	if err != nil {
		return err
	}
	*x = BidRequest_Device_ScreenOrientation(value)
	return nil
}

func (BidRequest_Device_ScreenOrientation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 4, 1}
}

// Describes where the video ad will play.
type BidRequest_Video_Placement int32

const (
	BidRequest_Video_UNKNOWN_PLACEMENT BidRequest_Video_Placement = 0
	// Instream means the ad plays before, during, or after other video
	// content. This is similar to a traditional TV commercial. The video
	// content the user is watching does not play while the ad is playing.
	BidRequest_Video_INSTREAM BidRequest_Video_Placement = 1
	// Interstitial means the video ad plays in front of non-video content,
	// (e.g., a news article or video game). The ad covers all or nearly all
	// of the space on the screen occupied by the content and the user is not
	// able to proceed to the content until the ad has finished or been
	// skipped.
	BidRequest_Video_INTERSTITIAL BidRequest_Video_Placement = 2
	// The in-feed video format is a video creative that shows within a feed
	// of content, typically a social app feed, a list of editorial content
	// items, etc, as the user is scrolling. It renders centered and not to
	// the side.
	BidRequest_Video_IN_FEED BidRequest_Video_Placement = 3
	// Audio is a request for an ad that is an audio stream.  It is distinct
	// from INSTREAM above as that is exclusive to video requests.
	BidRequest_Video_AUDIO BidRequest_Video_Placement = 4
	// The in-article video format is a video creative that loads and plays
	// between paragraphs of editorial content as a standalone video player.
	BidRequest_Video_IN_ARTICLE BidRequest_Video_Placement = 5
)

var BidRequest_Video_Placement_name = map[int32]string{
	0: "UNKNOWN_PLACEMENT",
	1: "INSTREAM",
	2: "INTERSTITIAL",
	3: "IN_FEED",
	4: "AUDIO",
	5: "IN_ARTICLE",
}

var BidRequest_Video_Placement_value = map[string]int32{
	"UNKNOWN_PLACEMENT": 0,
	"INSTREAM":          1,
	"INTERSTITIAL":      2,
	"IN_FEED":           3,
	"AUDIO":             4,
	"IN_ARTICLE":        5,
}

func (x BidRequest_Video_Placement) Enum() *BidRequest_Video_Placement {
	p := new(BidRequest_Video_Placement)
	*p = x
	return p
}

func (x BidRequest_Video_Placement) String() string {
	return proto.EnumName(BidRequest_Video_Placement_name, int32(x))
}

func (x *BidRequest_Video_Placement) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_Placement_value, data, "BidRequest_Video_Placement")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_Placement(value)
	return nil
}

func (BidRequest_Video_Placement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 0}
}

// Describes how the video ad will be played. The playback method is
// determined to be auto-play, click-to-play or mouse-over based on the best
// measurement available. This includes things like how recently the user
// interacted with a web page. For auto-play, ads can start playing with the
// sound on or off. Some ads (e.g. in-feed ads) are muted until the user
// interacts with the ad. Alternatively, if an ad would normally play with
// the sound on but the device is muted then the value will be set to sound
// off. For devices where it is not possible to determine if the device is
// muted (e.g. desktop), we assume that sound is on.
type BidRequest_Video_VideoPlaybackMethod int32

const (
	BidRequest_Video_METHOD_UNKNOWN                          BidRequest_Video_VideoPlaybackMethod = 0
	BidRequest_Video_AUTO_PLAY_SOUND_ON                      BidRequest_Video_VideoPlaybackMethod = 1
	BidRequest_Video_AUTO_PLAY_SOUND_OFF                     BidRequest_Video_VideoPlaybackMethod = 2
	BidRequest_Video_CLICK_TO_PLAY                           BidRequest_Video_VideoPlaybackMethod = 3
	BidRequest_Video_MOUSE_OVER                              BidRequest_Video_VideoPlaybackMethod = 4
	BidRequest_Video_INITIATE_ON_ENTERING_VIEWPORT_SOUND_ON  BidRequest_Video_VideoPlaybackMethod = 5
	BidRequest_Video_INITIATE_ON_ENTERING_VIEWPORT_SOUND_OFF BidRequest_Video_VideoPlaybackMethod = 6
)

var BidRequest_Video_VideoPlaybackMethod_name = map[int32]string{
	0: "METHOD_UNKNOWN",
	1: "AUTO_PLAY_SOUND_ON",
	2: "AUTO_PLAY_SOUND_OFF",
	3: "CLICK_TO_PLAY",
	4: "MOUSE_OVER",
	5: "INITIATE_ON_ENTERING_VIEWPORT_SOUND_ON",
	6: "INITIATE_ON_ENTERING_VIEWPORT_SOUND_OFF",
}

var BidRequest_Video_VideoPlaybackMethod_value = map[string]int32{
	"METHOD_UNKNOWN":                          0,
	"AUTO_PLAY_SOUND_ON":                      1,
	"AUTO_PLAY_SOUND_OFF":                     2,
	"CLICK_TO_PLAY":                           3,
	"MOUSE_OVER":                              4,
	"INITIATE_ON_ENTERING_VIEWPORT_SOUND_ON":  5,
	"INITIATE_ON_ENTERING_VIEWPORT_SOUND_OFF": 6,
}

func (x BidRequest_Video_VideoPlaybackMethod) Enum() *BidRequest_Video_VideoPlaybackMethod {
	p := new(BidRequest_Video_VideoPlaybackMethod)
	*p = x
	return p
}

func (x BidRequest_Video_VideoPlaybackMethod) String() string {
	return proto.EnumName(BidRequest_Video_VideoPlaybackMethod_name, int32(x))
}

func (x *BidRequest_Video_VideoPlaybackMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_VideoPlaybackMethod_value, data, "BidRequest_Video_VideoPlaybackMethod")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_VideoPlaybackMethod(value)
	return nil
}

func (BidRequest_Video_VideoPlaybackMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 1}
}

// Does the publisher allow/require/block skippable video ads?
type BidRequest_Video_SkippableBidRequestType int32

const (
	BidRequest_Video_ALLOW_SKIPPABLE   BidRequest_Video_SkippableBidRequestType = 0
	BidRequest_Video_REQUIRE_SKIPPABLE BidRequest_Video_SkippableBidRequestType = 1
	BidRequest_Video_BLOCK_SKIPPABLE   BidRequest_Video_SkippableBidRequestType = 2
)

var BidRequest_Video_SkippableBidRequestType_name = map[int32]string{
	0: "ALLOW_SKIPPABLE",
	1: "REQUIRE_SKIPPABLE",
	2: "BLOCK_SKIPPABLE",
}

var BidRequest_Video_SkippableBidRequestType_value = map[string]int32{
	"ALLOW_SKIPPABLE":   0,
	"REQUIRE_SKIPPABLE": 1,
	"BLOCK_SKIPPABLE":   2,
}

func (x BidRequest_Video_SkippableBidRequestType) Enum() *BidRequest_Video_SkippableBidRequestType {
	p := new(BidRequest_Video_SkippableBidRequestType)
	*p = x
	return p
}

func (x BidRequest_Video_SkippableBidRequestType) String() string {
	return proto.EnumName(BidRequest_Video_SkippableBidRequestType_name, int32(x))
}

func (x *BidRequest_Video_SkippableBidRequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_SkippableBidRequestType_value, data, "BidRequest_Video_SkippableBidRequestType")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_SkippableBidRequestType(value)
	return nil
}

func (BidRequest_Video_SkippableBidRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 2}
}

// Supported video protocols.
type BidRequest_Video_VideoProtocol int32

const (
	BidRequest_Video_UNKNOWN_VIDEO_PROTOCOL BidRequest_Video_VideoProtocol = 0
	BidRequest_Video_VAST_1_0               BidRequest_Video_VideoProtocol = 1
	BidRequest_Video_VAST_2_0               BidRequest_Video_VideoProtocol = 2
	BidRequest_Video_VAST_3_0               BidRequest_Video_VideoProtocol = 3
	BidRequest_Video_VAST_1_0_WRAPPER       BidRequest_Video_VideoProtocol = 4
	BidRequest_Video_VAST_2_0_WRAPPER       BidRequest_Video_VideoProtocol = 5
	BidRequest_Video_VAST_3_0_WRAPPER       BidRequest_Video_VideoProtocol = 6
	BidRequest_Video_VAST_4_0               BidRequest_Video_VideoProtocol = 7
	BidRequest_Video_VAST_4_0_WRAPPER       BidRequest_Video_VideoProtocol = 8
	BidRequest_Video_DAAST_1_0              BidRequest_Video_VideoProtocol = 9
	BidRequest_Video_DAAST_1_0_WRAPPER      BidRequest_Video_VideoProtocol = 10
)

var BidRequest_Video_VideoProtocol_name = map[int32]string{
	0:  "UNKNOWN_VIDEO_PROTOCOL",
	1:  "VAST_1_0",
	2:  "VAST_2_0",
	3:  "VAST_3_0",
	4:  "VAST_1_0_WRAPPER",
	5:  "VAST_2_0_WRAPPER",
	6:  "VAST_3_0_WRAPPER",
	7:  "VAST_4_0",
	8:  "VAST_4_0_WRAPPER",
	9:  "DAAST_1_0",
	10: "DAAST_1_0_WRAPPER",
}

var BidRequest_Video_VideoProtocol_value = map[string]int32{
	"UNKNOWN_VIDEO_PROTOCOL": 0,
	"VAST_1_0":               1,
	"VAST_2_0":               2,
	"VAST_3_0":               3,
	"VAST_1_0_WRAPPER":       4,
	"VAST_2_0_WRAPPER":       5,
	"VAST_3_0_WRAPPER":       6,
	"VAST_4_0":               7,
	"VAST_4_0_WRAPPER":       8,
	"DAAST_1_0":              9,
	"DAAST_1_0_WRAPPER":      10,
}

func (x BidRequest_Video_VideoProtocol) Enum() *BidRequest_Video_VideoProtocol {
	p := new(BidRequest_Video_VideoProtocol)
	*p = x
	return p
}

func (x BidRequest_Video_VideoProtocol) String() string {
	return proto.EnumName(BidRequest_Video_VideoProtocol_name, int32(x))
}

func (x *BidRequest_Video_VideoProtocol) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_VideoProtocol_value, data, "BidRequest_Video_VideoProtocol")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_VideoProtocol(value)
	return nil
}

func (BidRequest_Video_VideoProtocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 3}
}

// The video file formats that are allowed for this request. The response
// should support at least one of them.
type BidRequest_Video_VideoFormat int32

const (
	BidRequest_Video_UNKNOWN_VIDEO_FORMAT BidRequest_Video_VideoFormat = -1
	BidRequest_Video_VIDEO_FLV            BidRequest_Video_VideoFormat = 0
	BidRequest_Video_VIDEO_MP4            BidRequest_Video_VideoFormat = 1
	BidRequest_Video_YT_HOSTED            BidRequest_Video_VideoFormat = 2
	// on youtube.com.
	BidRequest_Video_VPAID_FLASH   BidRequest_Video_VideoFormat = 3
	BidRequest_Video_VPAID_JS      BidRequest_Video_VideoFormat = 4
	BidRequest_Video_AUDIO_MP3     BidRequest_Video_VideoFormat = 5
	BidRequest_Video_AUDIO_OGG     BidRequest_Video_VideoFormat = 6
	BidRequest_Video_AUDIO_MP3_OGG BidRequest_Video_VideoFormat = 7
	// which codecs are installed on the player.
	BidRequest_Video_VIDEO_WEBM BidRequest_Video_VideoFormat = 8
	BidRequest_Video_VIDEO_MOV  BidRequest_Video_VideoFormat = 9
	BidRequest_Video_VIDEO_3GPP BidRequest_Video_VideoFormat = 10
	BidRequest_Video_VIDEO_HLS  BidRequest_Video_VideoFormat = 11
	BidRequest_Video_VIDEO_DASH BidRequest_Video_VideoFormat = 12
	BidRequest_Video_AUDIO_MP4A BidRequest_Video_VideoFormat = 13
)

var BidRequest_Video_VideoFormat_name = map[int32]string{
	-1: "UNKNOWN_VIDEO_FORMAT",
	0:  "VIDEO_FLV",
	1:  "VIDEO_MP4",
	2:  "YT_HOSTED",
	3:  "VPAID_FLASH",
	4:  "VPAID_JS",
	5:  "AUDIO_MP3",
	6:  "AUDIO_OGG",
	7:  "AUDIO_MP3_OGG",
	8:  "VIDEO_WEBM",
	9:  "VIDEO_MOV",
	10: "VIDEO_3GPP",
	11: "VIDEO_HLS",
	12: "VIDEO_DASH",
	13: "AUDIO_MP4A",
}

var BidRequest_Video_VideoFormat_value = map[string]int32{
	"UNKNOWN_VIDEO_FORMAT": -1,
	"VIDEO_FLV":            0,
	"VIDEO_MP4":            1,
	"YT_HOSTED":            2,
	"VPAID_FLASH":          3,
	"VPAID_JS":             4,
	"AUDIO_MP3":            5,
	"AUDIO_OGG":            6,
	"AUDIO_MP3_OGG":        7,
	"VIDEO_WEBM":           8,
	"VIDEO_MOV":            9,
	"VIDEO_3GPP":           10,
	"VIDEO_HLS":            11,
	"VIDEO_DASH":           12,
	"AUDIO_MP4A":           13,
}

func (x BidRequest_Video_VideoFormat) Enum() *BidRequest_Video_VideoFormat {
	p := new(BidRequest_Video_VideoFormat)
	*p = x
	return p
}

func (x BidRequest_Video_VideoFormat) String() string {
	return proto.EnumName(BidRequest_Video_VideoFormat_name, int32(x))
}

func (x *BidRequest_Video_VideoFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_VideoFormat_value, data, "BidRequest_Video_VideoFormat")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_VideoFormat(value)
	return nil
}

func (BidRequest_Video_VideoFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 4}
}

// End cap support. When enabled, the companion ad can be picked to be
// rendered as an end cap (info card) in the video slot after the video
// ad finishes playing. If multiple companion ads are returned, IMA SDK
// chooses one which best matches the device screen size. End cap is
// supported only on mobile video interstitial inventory.
type BidRequest_Video_EndCapSupport int32

const (
	BidRequest_Video_END_CAP_NOT_ENABLED BidRequest_Video_EndCapSupport = 0
	BidRequest_Video_END_CAP_OPTIONAL    BidRequest_Video_EndCapSupport = 1
	// Not used at this time.
	BidRequest_Video_END_CAP_FORBIDDEN BidRequest_Video_EndCapSupport = 2
	// Not used at this time.
	BidRequest_Video_END_CAP_REQUIRED BidRequest_Video_EndCapSupport = 3
)

var BidRequest_Video_EndCapSupport_name = map[int32]string{
	0: "END_CAP_NOT_ENABLED",
	1: "END_CAP_OPTIONAL",
	2: "END_CAP_FORBIDDEN",
	3: "END_CAP_REQUIRED",
}

var BidRequest_Video_EndCapSupport_value = map[string]int32{
	"END_CAP_NOT_ENABLED": 0,
	"END_CAP_OPTIONAL":    1,
	"END_CAP_FORBIDDEN":   2,
	"END_CAP_REQUIRED":    3,
}

func (x BidRequest_Video_EndCapSupport) Enum() *BidRequest_Video_EndCapSupport {
	p := new(BidRequest_Video_EndCapSupport)
	*p = x
	return p
}

func (x BidRequest_Video_EndCapSupport) String() string {
	return proto.EnumName(BidRequest_Video_EndCapSupport_name, int32(x))
}

func (x *BidRequest_Video_EndCapSupport) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_EndCapSupport_value, data, "BidRequest_Video_EndCapSupport")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_EndCapSupport(value)
	return nil
}

func (BidRequest_Video_EndCapSupport) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 5}
}

// The type of inventory from which request is sent.
// Deprecated but will continue to be filled in until January 2017.
// Use the placement field to determine if inventory is interstitial or
// instream. Use Device.device_type to determine if the request comes from
// a mobile device and Mobile.is_app to determine if the request comes from
// an app.
// WEB_VIDEO is INSTREAM placements from web browsers.
// GAMES consists of INTERSTITIAL placements from both apps and web
// browsers.
// MOBILE_INTERSTITIAL is INTERSTITIAL placements from apps only.
// This inventory also allows display ads. You can tell if an adslot allows
// display ads if adslot->excluded_attributes does not contain 21
// (CreativeType: Html)
// MOBILE_APP_VIDEO is INSTREAM placement from apps only.
type BidRequest_Video_InventoryType int32

const (
	BidRequest_Video_WEB_VIDEO           BidRequest_Video_InventoryType = 0
	BidRequest_Video_GAMES               BidRequest_Video_InventoryType = 1
	BidRequest_Video_MOBILE_INTERSTITIAL BidRequest_Video_InventoryType = 2
	BidRequest_Video_MOBILE_APP_VIDEO    BidRequest_Video_InventoryType = 3
)

var BidRequest_Video_InventoryType_name = map[int32]string{
	0: "WEB_VIDEO",
	1: "GAMES",
	2: "MOBILE_INTERSTITIAL",
	3: "MOBILE_APP_VIDEO",
}

var BidRequest_Video_InventoryType_value = map[string]int32{
	"WEB_VIDEO":           0,
	"GAMES":               1,
	"MOBILE_INTERSTITIAL": 2,
	"MOBILE_APP_VIDEO":    3,
}

func (x BidRequest_Video_InventoryType) Enum() *BidRequest_Video_InventoryType {
	p := new(BidRequest_Video_InventoryType)
	*p = x
	return p
}

func (x BidRequest_Video_InventoryType) String() string {
	return proto.EnumName(BidRequest_Video_InventoryType_name, int32(x))
}

func (x *BidRequest_Video_InventoryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_InventoryType_value, data, "BidRequest_Video_InventoryType")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_InventoryType(value)
	return nil
}

func (BidRequest_Video_InventoryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 6}
}

// These are the formats of the creatives allowed in this companion ad
// slot.
type BidRequest_Video_CompanionSlot_CreativeFormat int32

const (
	BidRequest_Video_CompanionSlot_UNKNOWN_CREATIVE_FORMAT BidRequest_Video_CompanionSlot_CreativeFormat = -1
	BidRequest_Video_CompanionSlot_IMAGE_CREATIVE          BidRequest_Video_CompanionSlot_CreativeFormat = 0
	BidRequest_Video_CompanionSlot_FLASH_CREATIVE          BidRequest_Video_CompanionSlot_CreativeFormat = 1
	BidRequest_Video_CompanionSlot_HTML_CREATIVE           BidRequest_Video_CompanionSlot_CreativeFormat = 2
)

var BidRequest_Video_CompanionSlot_CreativeFormat_name = map[int32]string{
	-1: "UNKNOWN_CREATIVE_FORMAT",
	0:  "IMAGE_CREATIVE",
	1:  "FLASH_CREATIVE",
	2:  "HTML_CREATIVE",
}

var BidRequest_Video_CompanionSlot_CreativeFormat_value = map[string]int32{
	"UNKNOWN_CREATIVE_FORMAT": -1,
	"IMAGE_CREATIVE":          0,
	"FLASH_CREATIVE":          1,
	"HTML_CREATIVE":           2,
}

func (x BidRequest_Video_CompanionSlot_CreativeFormat) Enum() *BidRequest_Video_CompanionSlot_CreativeFormat {
	p := new(BidRequest_Video_CompanionSlot_CreativeFormat)
	*p = x
	return p
}

func (x BidRequest_Video_CompanionSlot_CreativeFormat) String() string {
	return proto.EnumName(BidRequest_Video_CompanionSlot_CreativeFormat_name, int32(x))
}

func (x *BidRequest_Video_CompanionSlot_CreativeFormat) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_Video_CompanionSlot_CreativeFormat_value, data, "BidRequest_Video_CompanionSlot_CreativeFormat")
	if err != nil {
		return err
	}
	*x = BidRequest_Video_CompanionSlot_CreativeFormat(value)
	return nil
}

func (BidRequest_Video_CompanionSlot_CreativeFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 0, 0}
}

// Visibility information for the slot.
type BidRequest_AdSlot_SlotVisibility int32

const (
	BidRequest_AdSlot_NO_DETECTION   BidRequest_AdSlot_SlotVisibility = 0
	BidRequest_AdSlot_ABOVE_THE_FOLD BidRequest_AdSlot_SlotVisibility = 1
	BidRequest_AdSlot_BELOW_THE_FOLD BidRequest_AdSlot_SlotVisibility = 2
)

var BidRequest_AdSlot_SlotVisibility_name = map[int32]string{
	0: "NO_DETECTION",
	1: "ABOVE_THE_FOLD",
	2: "BELOW_THE_FOLD",
}

var BidRequest_AdSlot_SlotVisibility_value = map[string]int32{
	"NO_DETECTION":   0,
	"ABOVE_THE_FOLD": 1,
	"BELOW_THE_FOLD": 2,
}

func (x BidRequest_AdSlot_SlotVisibility) Enum() *BidRequest_AdSlot_SlotVisibility {
	p := new(BidRequest_AdSlot_SlotVisibility)
	*p = x
	return p
}

func (x BidRequest_AdSlot_SlotVisibility) String() string {
	return proto.EnumName(BidRequest_AdSlot_SlotVisibility_name, int32(x))
}

func (x *BidRequest_AdSlot_SlotVisibility) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_SlotVisibility_value, data, "BidRequest_AdSlot_SlotVisibility")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_SlotVisibility(value)
	return nil
}

func (BidRequest_AdSlot_SlotVisibility) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 0}
}

// iFraming state of the ad slot on the webpage where it is present.
type BidRequest_AdSlot_IFramingState int32

const (
	BidRequest_AdSlot_UNKNOWN_IFRAME_STATE BidRequest_AdSlot_IFramingState = 0
	BidRequest_AdSlot_NO_IFRAME            BidRequest_AdSlot_IFramingState = 1
	BidRequest_AdSlot_SAME_DOMAIN_IFRAME   BidRequest_AdSlot_IFramingState = 2
	BidRequest_AdSlot_CROSS_DOMAIN_IFRAME  BidRequest_AdSlot_IFramingState = 3
)

var BidRequest_AdSlot_IFramingState_name = map[int32]string{
	0: "UNKNOWN_IFRAME_STATE",
	1: "NO_IFRAME",
	2: "SAME_DOMAIN_IFRAME",
	3: "CROSS_DOMAIN_IFRAME",
}

var BidRequest_AdSlot_IFramingState_value = map[string]int32{
	"UNKNOWN_IFRAME_STATE": 0,
	"NO_IFRAME":            1,
	"SAME_DOMAIN_IFRAME":   2,
	"CROSS_DOMAIN_IFRAME":  3,
}

func (x BidRequest_AdSlot_IFramingState) Enum() *BidRequest_AdSlot_IFramingState {
	p := new(BidRequest_AdSlot_IFramingState)
	*p = x
	return p
}

func (x BidRequest_AdSlot_IFramingState) String() string {
	return proto.EnumName(BidRequest_AdSlot_IFramingState_name, int32(x))
}

func (x *BidRequest_AdSlot_IFramingState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_IFramingState_value, data, "BidRequest_AdSlot_IFramingState")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_IFramingState(value)
	return nil
}

func (BidRequest_AdSlot_IFramingState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 1}
}

// iFrame depth of the ad slot on the webpage where it is present.
// Currently only set for video ad requests.
type BidRequest_AdSlot_IFramingDepth int32

const (
	BidRequest_AdSlot_UNKNOWN_IFRAME_DEPTH BidRequest_AdSlot_IFramingDepth = 0
	BidRequest_AdSlot_NOT_IN_IFRAME        BidRequest_AdSlot_IFramingDepth = 1
	BidRequest_AdSlot_ONE_IFRAME           BidRequest_AdSlot_IFramingDepth = 2
	BidRequest_AdSlot_MULTIPLE_IFRAME      BidRequest_AdSlot_IFramingDepth = 3
)

var BidRequest_AdSlot_IFramingDepth_name = map[int32]string{
	0: "UNKNOWN_IFRAME_DEPTH",
	1: "NOT_IN_IFRAME",
	2: "ONE_IFRAME",
	3: "MULTIPLE_IFRAME",
}

var BidRequest_AdSlot_IFramingDepth_value = map[string]int32{
	"UNKNOWN_IFRAME_DEPTH": 0,
	"NOT_IN_IFRAME":        1,
	"ONE_IFRAME":           2,
	"MULTIPLE_IFRAME":      3,
}

func (x BidRequest_AdSlot_IFramingDepth) Enum() *BidRequest_AdSlot_IFramingDepth {
	p := new(BidRequest_AdSlot_IFramingDepth)
	*p = x
	return p
}

func (x BidRequest_AdSlot_IFramingDepth) String() string {
	return proto.EnumName(BidRequest_AdSlot_IFramingDepth_name, int32(x))
}

func (x *BidRequest_AdSlot_IFramingDepth) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_IFramingDepth_value, data, "BidRequest_AdSlot_IFramingDepth")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_IFramingDepth(value)
	return nil
}

func (BidRequest_AdSlot_IFramingDepth) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 2}
}

// NativePlacementType describes placement of native ad slot with respect to
// surrounding context.
type BidRequest_AdSlot_NativePlacementType int32

const (
	BidRequest_AdSlot_PLACEMENT_UNKNOWN BidRequest_AdSlot_NativePlacementType = 0
	// In the feed of content - for example as an item inside the organic
	// feed/grid/listing/carousel.
	BidRequest_AdSlot_PLACEMENT_IN_FEED BidRequest_AdSlot_NativePlacementType = 1
	// In the atomic unit of the content - i.e., in the article page or single
	// image page.
	BidRequest_AdSlot_PLACEMENT_ATOMIC_UNIT BidRequest_AdSlot_NativePlacementType = 2
	// Outside the core content - for example in the ads section on the right
	// rail, as a banner-style placement near the content, etc.
	BidRequest_AdSlot_PLACEMENT_OUTSIDE BidRequest_AdSlot_NativePlacementType = 3
	// Recommendation widget, most commonly presented below the article
	// content.
	BidRequest_AdSlot_PLACEMENT_RECOMMENDATION BidRequest_AdSlot_NativePlacementType = 4
)

var BidRequest_AdSlot_NativePlacementType_name = map[int32]string{
	0: "PLACEMENT_UNKNOWN",
	1: "PLACEMENT_IN_FEED",
	2: "PLACEMENT_ATOMIC_UNIT",
	3: "PLACEMENT_OUTSIDE",
	4: "PLACEMENT_RECOMMENDATION",
}

var BidRequest_AdSlot_NativePlacementType_value = map[string]int32{
	"PLACEMENT_UNKNOWN":        0,
	"PLACEMENT_IN_FEED":        1,
	"PLACEMENT_ATOMIC_UNIT":    2,
	"PLACEMENT_OUTSIDE":        3,
	"PLACEMENT_RECOMMENDATION": 4,
}

func (x BidRequest_AdSlot_NativePlacementType) Enum() *BidRequest_AdSlot_NativePlacementType {
	p := new(BidRequest_AdSlot_NativePlacementType)
	*p = x
	return p
}

func (x BidRequest_AdSlot_NativePlacementType) String() string {
	return proto.EnumName(BidRequest_AdSlot_NativePlacementType_name, int32(x))
}

func (x *BidRequest_AdSlot_NativePlacementType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_NativePlacementType_value, data, "BidRequest_AdSlot_NativePlacementType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_NativePlacementType(value)
	return nil
}

func (BidRequest_AdSlot_NativePlacementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 3}
}

// Whether the ad request has been determined to come directly from the
// publisher.
type BidRequest_AdSlot_MediationStatus int32

const (
	BidRequest_AdSlot_UNKNOWN        BidRequest_AdSlot_MediationStatus = 0
	BidRequest_AdSlot_DIRECT_REQUEST BidRequest_AdSlot_MediationStatus = 1
)

var BidRequest_AdSlot_MediationStatus_name = map[int32]string{
	0: "UNKNOWN",
	1: "DIRECT_REQUEST",
}

var BidRequest_AdSlot_MediationStatus_value = map[string]int32{
	"UNKNOWN":        0,
	"DIRECT_REQUEST": 1,
}

func (x BidRequest_AdSlot_MediationStatus) Enum() *BidRequest_AdSlot_MediationStatus {
	p := new(BidRequest_AdSlot_MediationStatus)
	*p = x
	return p
}

func (x BidRequest_AdSlot_MediationStatus) String() string {
	return proto.EnumName(BidRequest_AdSlot_MediationStatus_name, int32(x))
}

func (x *BidRequest_AdSlot_MediationStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_MediationStatus_value, data, "BidRequest_AdSlot_MediationStatus")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_MediationStatus(value)
	return nil
}

func (BidRequest_AdSlot_MediationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 4}
}

// Sources for non-browser inventory.
type BidRequest_AdSlot_NonBrowserSource int32

const (
	BidRequest_AdSlot_UNDECLARED_SOURCE BidRequest_AdSlot_NonBrowserSource = 0
	BidRequest_AdSlot_DESKTOP_APP       BidRequest_AdSlot_NonBrowserSource = 1
)

var BidRequest_AdSlot_NonBrowserSource_name = map[int32]string{
	0: "UNDECLARED_SOURCE",
	1: "DESKTOP_APP",
}

var BidRequest_AdSlot_NonBrowserSource_value = map[string]int32{
	"UNDECLARED_SOURCE": 0,
	"DESKTOP_APP":       1,
}

func (x BidRequest_AdSlot_NonBrowserSource) Enum() *BidRequest_AdSlot_NonBrowserSource {
	p := new(BidRequest_AdSlot_NonBrowserSource)
	*p = x
	return p
}

func (x BidRequest_AdSlot_NonBrowserSource) String() string {
	return proto.EnumName(BidRequest_AdSlot_NonBrowserSource_name, int32(x))
}

func (x *BidRequest_AdSlot_NonBrowserSource) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_NonBrowserSource_value, data, "BidRequest_AdSlot_NonBrowserSource")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_NonBrowserSource(value)
	return nil
}

func (BidRequest_AdSlot_NonBrowserSource) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 5}
}

// Defines who controls the environment that made the ad request and will
// render the ad. On platforms where code written by Google will handle
// the ad this field is set to GOOGLE. When this field is PUBLISHER the
// publisher has placed their own code on the device to handle playback of
// the ad. There is no technical difference in how these request are
// handled. You may use this field to differentiate between different
// environments for non-technical reasons. This field is only set for
// requests that allow VAST video ads.
type BidRequest_AdSlot_Renderer int32

const (
	BidRequest_AdSlot_UNKNOWN_RENDERER BidRequest_AdSlot_Renderer = 0
	BidRequest_AdSlot_GOOGLE           BidRequest_AdSlot_Renderer = 1
	BidRequest_AdSlot_PUBLISHER        BidRequest_AdSlot_Renderer = 2
)

var BidRequest_AdSlot_Renderer_name = map[int32]string{
	0: "UNKNOWN_RENDERER",
	1: "GOOGLE",
	2: "PUBLISHER",
}

var BidRequest_AdSlot_Renderer_value = map[string]int32{
	"UNKNOWN_RENDERER": 0,
	"GOOGLE":           1,
	"PUBLISHER":        2,
}

func (x BidRequest_AdSlot_Renderer) Enum() *BidRequest_AdSlot_Renderer {
	p := new(BidRequest_AdSlot_Renderer)
	*p = x
	return p
}

func (x BidRequest_AdSlot_Renderer) String() string {
	return proto.EnumName(BidRequest_AdSlot_Renderer_name, int32(x))
}

func (x *BidRequest_AdSlot_Renderer) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_Renderer_value, data, "BidRequest_AdSlot_Renderer")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_Renderer(value)
	return nil
}

func (BidRequest_AdSlot_Renderer) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 6}
}

// Whether this request is for an Accelerated Mobile Page (AMP). AMP HTML
// pages load faster, by restricting parts of HTML, CSS and Javascript. For
// more information on how AMP ads render, refer to the AMP ads README:
// https://github.com/ampproject/amphtml/blob/master/ads/README.md
type BidRequest_AdSlot_AmpAdRequestType int32

const (
	// AMP status unknown. Request may or may not be from an AMP page.
	BidRequest_AdSlot_UNKNOWN_AMP BidRequest_AdSlot_AmpAdRequestType = 0
	// Not an AMP page. Could be regular HTML, VAST video, etc.
	BidRequest_AdSlot_NON_AMP_PAGE BidRequest_AdSlot_AmpAdRequestType = 1
	// Late-loading request from an AMP HTML page. Ad will render with a
	// slight delay so it will not negatively impact page render performance.
	BidRequest_AdSlot_AMP_PAGE_LATE_REQUEST BidRequest_AdSlot_AmpAdRequestType = 2
)

var BidRequest_AdSlot_AmpAdRequestType_name = map[int32]string{
	0: "UNKNOWN_AMP",
	1: "NON_AMP_PAGE",
	2: "AMP_PAGE_LATE_REQUEST",
}

var BidRequest_AdSlot_AmpAdRequestType_value = map[string]int32{
	"UNKNOWN_AMP":           0,
	"NON_AMP_PAGE":          1,
	"AMP_PAGE_LATE_REQUEST": 2,
}

func (x BidRequest_AdSlot_AmpAdRequestType) Enum() *BidRequest_AdSlot_AmpAdRequestType {
	p := new(BidRequest_AdSlot_AmpAdRequestType)
	*p = x
	return p
}

func (x BidRequest_AdSlot_AmpAdRequestType) String() string {
	return proto.EnumName(BidRequest_AdSlot_AmpAdRequestType_name, int32(x))
}

func (x *BidRequest_AdSlot_AmpAdRequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_AmpAdRequestType_value, data, "BidRequest_AdSlot_AmpAdRequestType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_AmpAdRequestType(value)
	return nil
}

func (BidRequest_AdSlot_AmpAdRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 7}
}

// Whether this is an AMP page or not.
type BidRequest_AdSlot_AmpPage int32

const (
	// AMP page status unknown.
	BidRequest_AdSlot_UNKNOWN_AMP_PAGE BidRequest_AdSlot_AmpPage = 0
	// This is not an AMP page.
	BidRequest_AdSlot_DIALECT_HTML BidRequest_AdSlot_AmpPage = 1
	// This is an Amp page.
	BidRequest_AdSlot_DIALECT_HTML_AMP BidRequest_AdSlot_AmpPage = 2
)

var BidRequest_AdSlot_AmpPage_name = map[int32]string{
	0: "UNKNOWN_AMP_PAGE",
	1: "DIALECT_HTML",
	2: "DIALECT_HTML_AMP",
}

var BidRequest_AdSlot_AmpPage_value = map[string]int32{
	"UNKNOWN_AMP_PAGE": 0,
	"DIALECT_HTML":     1,
	"DIALECT_HTML_AMP": 2,
}

func (x BidRequest_AdSlot_AmpPage) Enum() *BidRequest_AdSlot_AmpPage {
	p := new(BidRequest_AdSlot_AmpPage)
	*p = x
	return p
}

func (x BidRequest_AdSlot_AmpPage) String() string {
	return proto.EnumName(BidRequest_AdSlot_AmpPage_name, int32(x))
}

func (x *BidRequest_AdSlot_AmpPage) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_AmpPage_value, data, "BidRequest_AdSlot_AmpPage")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_AmpPage(value)
	return nil
}

func (BidRequest_AdSlot_AmpPage) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 8}
}

// Possible requirement types for AMP ads.
type BidRequest_AdSlot_AmpAdRequirementType int32

const (
	// AMP ad requirements unknown.
	BidRequest_AdSlot_UNKNOWN_AMP_AD_REQUIREMENT_TYPE BidRequest_AdSlot_AmpAdRequirementType = 0
	// AMP ads are not allowed.
	BidRequest_AdSlot_AMP_AD_NOT_ALLOWED BidRequest_AdSlot_AmpAdRequirementType = 1
	// Either AMP ads or non-AMP ads are allowed;
	// AMP ads are not early rendered.
	BidRequest_AdSlot_AMP_AD_ALLOWED_AND_NOT_EARLY_RENDERED BidRequest_AdSlot_AmpAdRequirementType = 2
	// Either AMP ads or non-AMP ads are allowed;
	// AMP ads are early rendered.
	BidRequest_AdSlot_AMP_AD_ALLOWED_AND_EARLY_RENDERED BidRequest_AdSlot_AmpAdRequirementType = 3
	// AMP ads are required.
	// Ads that are non-AMP may be rejected by the publisher.
	BidRequest_AdSlot_AMP_AD_REQUIRED BidRequest_AdSlot_AmpAdRequirementType = 4
)

var BidRequest_AdSlot_AmpAdRequirementType_name = map[int32]string{
	0: "UNKNOWN_AMP_AD_REQUIREMENT_TYPE",
	1: "AMP_AD_NOT_ALLOWED",
	2: "AMP_AD_ALLOWED_AND_NOT_EARLY_RENDERED",
	3: "AMP_AD_ALLOWED_AND_EARLY_RENDERED",
	4: "AMP_AD_REQUIRED",
}

var BidRequest_AdSlot_AmpAdRequirementType_value = map[string]int32{
	"UNKNOWN_AMP_AD_REQUIREMENT_TYPE":       0,
	"AMP_AD_NOT_ALLOWED":                    1,
	"AMP_AD_ALLOWED_AND_NOT_EARLY_RENDERED": 2,
	"AMP_AD_ALLOWED_AND_EARLY_RENDERED":     3,
	"AMP_AD_REQUIRED":                       4,
}

func (x BidRequest_AdSlot_AmpAdRequirementType) Enum() *BidRequest_AdSlot_AmpAdRequirementType {
	p := new(BidRequest_AdSlot_AmpAdRequirementType)
	*p = x
	return p
}

func (x BidRequest_AdSlot_AmpAdRequirementType) String() string {
	return proto.EnumName(BidRequest_AdSlot_AmpAdRequirementType_name, int32(x))
}

func (x *BidRequest_AdSlot_AmpAdRequirementType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_AmpAdRequirementType_value, data, "BidRequest_AdSlot_AmpAdRequirementType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_AmpAdRequirementType(value)
	return nil
}

func (BidRequest_AdSlot_AmpAdRequirementType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 9}
}

// Possible ad types that are allowed in the bid response. allowed_ad_types
// always contains one or more values. Interstitial slots may also support
// banner ads. An ad slot with ALLOWED_AD_TYPE_NATIVE may or may not support
// native video, regardless of whether ALLOWED_AD_TYPE_VIDEO is set.
// Likewise, an ad slot without ALLOWED_AD_TYPE_NATIVE does not support
// native video, regardless of whether ALLOWED_AD_TYPE_VIDEO is set.
type BidRequest_AdSlot_AllowedAdType int32

const (
	BidRequest_AdSlot_UNKNOWN_ALLOWED_AD_TYPE BidRequest_AdSlot_AllowedAdType = -1
	BidRequest_AdSlot_ALLOWED_AD_TYPE_BANNER  BidRequest_AdSlot_AllowedAdType = 0
	BidRequest_AdSlot_ALLOWED_AD_TYPE_NATIVE  BidRequest_AdSlot_AllowedAdType = 1
	BidRequest_AdSlot_ALLOWED_AD_TYPE_VIDEO   BidRequest_AdSlot_AllowedAdType = 2
	BidRequest_AdSlot_ALLOWED_AD_TYPE_AUDIO   BidRequest_AdSlot_AllowedAdType = 3
)

var BidRequest_AdSlot_AllowedAdType_name = map[int32]string{
	-1: "UNKNOWN_ALLOWED_AD_TYPE",
	0:  "ALLOWED_AD_TYPE_BANNER",
	1:  "ALLOWED_AD_TYPE_NATIVE",
	2:  "ALLOWED_AD_TYPE_VIDEO",
	3:  "ALLOWED_AD_TYPE_AUDIO",
}

var BidRequest_AdSlot_AllowedAdType_value = map[string]int32{
	"UNKNOWN_ALLOWED_AD_TYPE": -1,
	"ALLOWED_AD_TYPE_BANNER":  0,
	"ALLOWED_AD_TYPE_NATIVE":  1,
	"ALLOWED_AD_TYPE_VIDEO":   2,
	"ALLOWED_AD_TYPE_AUDIO":   3,
}

func (x BidRequest_AdSlot_AllowedAdType) Enum() *BidRequest_AdSlot_AllowedAdType {
	p := new(BidRequest_AdSlot_AllowedAdType)
	*p = x
	return p
}

func (x BidRequest_AdSlot_AllowedAdType) String() string {
	return proto.EnumName(BidRequest_AdSlot_AllowedAdType_name, int32(x))
}

func (x *BidRequest_AdSlot_AllowedAdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_AllowedAdType_value, data, "BidRequest_AdSlot_AllowedAdType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_AllowedAdType(value)
	return nil
}

func (BidRequest_AdSlot_AllowedAdType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 10}
}

// The type of the deal.
type BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType int32

const (
	BidRequest_AdSlot_MatchingAdData_DirectDeal_UNKNOWN_DEAL_TYPE BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = 0
	BidRequest_AdSlot_MatchingAdData_DirectDeal_PREFERRED_DEAL    BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = 1
	BidRequest_AdSlot_MatchingAdData_DirectDeal_PRIVATE_AUCTION   BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = 2
	// See https://support.google.com/adxbuyer/answer/7174589
	BidRequest_AdSlot_MatchingAdData_DirectDeal_PROGRAMMATIC_GUARANTEED BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = 3
	// See https://support.google.com/adxbuyer/answer/7516884
	BidRequest_AdSlot_MatchingAdData_DirectDeal_AUCTION_PACKAGE BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = 4
)

var BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_name = map[int32]string{
	0: "UNKNOWN_DEAL_TYPE",
	1: "PREFERRED_DEAL",
	2: "PRIVATE_AUCTION",
	3: "PROGRAMMATIC_GUARANTEED",
	4: "AUCTION_PACKAGE",
}

var BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_value = map[string]int32{
	"UNKNOWN_DEAL_TYPE":       0,
	"PREFERRED_DEAL":          1,
	"PRIVATE_AUCTION":         2,
	"PROGRAMMATIC_GUARANTEED": 3,
	"AUCTION_PACKAGE":         4,
}

func (x BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType) Enum() *BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType {
	p := new(BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType)
	*p = x
	return p
}

func (x BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType) String() string {
	return proto.EnumName(BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_name, int32(x))
}

func (x *BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_value, data, "BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType(value)
	return nil
}

func (BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 2, 1, 0}
}

// Defines the bits used in required_fields and recommended_fields. There
// is one bit for each of the fields in BidResponse.Ad.NativeAd
type BidRequest_AdSlot_NativeAdTemplate_Fields int32

const (
	BidRequest_AdSlot_NativeAdTemplate_NO_FIELDS        BidRequest_AdSlot_NativeAdTemplate_Fields = 0
	BidRequest_AdSlot_NativeAdTemplate_HEADLINE         BidRequest_AdSlot_NativeAdTemplate_Fields = 1
	BidRequest_AdSlot_NativeAdTemplate_BODY             BidRequest_AdSlot_NativeAdTemplate_Fields = 2
	BidRequest_AdSlot_NativeAdTemplate_CALL_TO_ACTION   BidRequest_AdSlot_NativeAdTemplate_Fields = 4
	BidRequest_AdSlot_NativeAdTemplate_ADVERTISER       BidRequest_AdSlot_NativeAdTemplate_Fields = 8
	BidRequest_AdSlot_NativeAdTemplate_IMAGE            BidRequest_AdSlot_NativeAdTemplate_Fields = 16
	BidRequest_AdSlot_NativeAdTemplate_LOGO             BidRequest_AdSlot_NativeAdTemplate_Fields = 32
	BidRequest_AdSlot_NativeAdTemplate_APP_ICON         BidRequest_AdSlot_NativeAdTemplate_Fields = 64
	BidRequest_AdSlot_NativeAdTemplate_STAR_RATING      BidRequest_AdSlot_NativeAdTemplate_Fields = 128
	BidRequest_AdSlot_NativeAdTemplate_PRICE            BidRequest_AdSlot_NativeAdTemplate_Fields = 256
	BidRequest_AdSlot_NativeAdTemplate_DEPRECATED_STORE BidRequest_AdSlot_NativeAdTemplate_Fields = 512
	BidRequest_AdSlot_NativeAdTemplate_VIDEO            BidRequest_AdSlot_NativeAdTemplate_Fields = 1024
)

var BidRequest_AdSlot_NativeAdTemplate_Fields_name = map[int32]string{
	0:    "NO_FIELDS",
	1:    "HEADLINE",
	2:    "BODY",
	4:    "CALL_TO_ACTION",
	8:    "ADVERTISER",
	16:   "IMAGE",
	32:   "LOGO",
	64:   "APP_ICON",
	128:  "STAR_RATING",
	256:  "PRICE",
	512:  "DEPRECATED_STORE",
	1024: "VIDEO",
}

var BidRequest_AdSlot_NativeAdTemplate_Fields_value = map[string]int32{
	"NO_FIELDS":        0,
	"HEADLINE":         1,
	"BODY":             2,
	"CALL_TO_ACTION":   4,
	"ADVERTISER":       8,
	"IMAGE":            16,
	"LOGO":             32,
	"APP_ICON":         64,
	"STAR_RATING":      128,
	"PRICE":            256,
	"DEPRECATED_STORE": 512,
	"VIDEO":            1024,
}

func (x BidRequest_AdSlot_NativeAdTemplate_Fields) Enum() *BidRequest_AdSlot_NativeAdTemplate_Fields {
	p := new(BidRequest_AdSlot_NativeAdTemplate_Fields)
	*p = x
	return p
}

func (x BidRequest_AdSlot_NativeAdTemplate_Fields) String() string {
	return proto.EnumName(BidRequest_AdSlot_NativeAdTemplate_Fields_name, int32(x))
}

func (x *BidRequest_AdSlot_NativeAdTemplate_Fields) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_NativeAdTemplate_Fields_value, data, "BidRequest_AdSlot_NativeAdTemplate_Fields")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_NativeAdTemplate_Fields(value)
	return nil
}

func (BidRequest_AdSlot_NativeAdTemplate_Fields) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 4, 0}
}

// Type of style layout for each native ad template.
type BidRequest_AdSlot_NativeAdTemplate_LayoutType int32

const (
	BidRequest_AdSlot_NativeAdTemplate_PIXEL BidRequest_AdSlot_NativeAdTemplate_LayoutType = 0
	BidRequest_AdSlot_NativeAdTemplate_FLUID BidRequest_AdSlot_NativeAdTemplate_LayoutType = 1
)

var BidRequest_AdSlot_NativeAdTemplate_LayoutType_name = map[int32]string{
	0: "PIXEL",
	1: "FLUID",
}

var BidRequest_AdSlot_NativeAdTemplate_LayoutType_value = map[string]int32{
	"PIXEL": 0,
	"FLUID": 1,
}

func (x BidRequest_AdSlot_NativeAdTemplate_LayoutType) Enum() *BidRequest_AdSlot_NativeAdTemplate_LayoutType {
	p := new(BidRequest_AdSlot_NativeAdTemplate_LayoutType)
	*p = x
	return p
}

func (x BidRequest_AdSlot_NativeAdTemplate_LayoutType) String() string {
	return proto.EnumName(BidRequest_AdSlot_NativeAdTemplate_LayoutType_name, int32(x))
}

func (x *BidRequest_AdSlot_NativeAdTemplate_LayoutType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_NativeAdTemplate_LayoutType_value, data, "BidRequest_AdSlot_NativeAdTemplate_LayoutType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_NativeAdTemplate_LayoutType(value)
	return nil
}

func (BidRequest_AdSlot_NativeAdTemplate_LayoutType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 4, 1}
}

type BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType int32

const (
	BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_UNKNOWN_AUTO_REFRESH_TYPE BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = 0
	BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_USER_ACTION               BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = 1
	// as scrolling.
	BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_EVENT BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = 2
	// when the football game score changes on the page.
	BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_TIME BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = 3
)

var BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_name = map[int32]string{
	0: "UNKNOWN_AUTO_REFRESH_TYPE",
	1: "USER_ACTION",
	2: "EVENT",
	3: "TIME",
}

var BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_value = map[string]int32{
	"UNKNOWN_AUTO_REFRESH_TYPE": 0,
	"USER_ACTION":               1,
	"EVENT":                     2,
	"TIME":                      3,
}

func (x BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType) Enum() *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType {
	p := new(BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType)
	*p = x
	return p
}

func (x BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType) String() string {
	return proto.EnumName(BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_name, int32(x))
}

func (x *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_value, data, "BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType(value)
	return nil
}

func (BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 5, 0, 0}
}

// Specifies the allowable sticky settings values.
type BidRequest_AdSlot_StickySettings_Stickiness int32

const (
	BidRequest_AdSlot_StickySettings_UNKNOWN_STICKINESS BidRequest_AdSlot_StickySettings_Stickiness = 0
	BidRequest_AdSlot_StickySettings_IS_STICKY          BidRequest_AdSlot_StickySettings_Stickiness = 1
)

var BidRequest_AdSlot_StickySettings_Stickiness_name = map[int32]string{
	0: "UNKNOWN_STICKINESS",
	1: "IS_STICKY",
}

var BidRequest_AdSlot_StickySettings_Stickiness_value = map[string]int32{
	"UNKNOWN_STICKINESS": 0,
	"IS_STICKY":          1,
}

func (x BidRequest_AdSlot_StickySettings_Stickiness) Enum() *BidRequest_AdSlot_StickySettings_Stickiness {
	p := new(BidRequest_AdSlot_StickySettings_Stickiness)
	*p = x
	return p
}

func (x BidRequest_AdSlot_StickySettings_Stickiness) String() string {
	return proto.EnumName(BidRequest_AdSlot_StickySettings_Stickiness_name, int32(x))
}

func (x *BidRequest_AdSlot_StickySettings_Stickiness) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidRequest_AdSlot_StickySettings_Stickiness_value, data, "BidRequest_AdSlot_StickySettings_Stickiness")
	if err != nil {
		return err
	}
	*x = BidRequest_AdSlot_StickySettings_Stickiness(value)
	return nil
}

func (BidRequest_AdSlot_StickySettings_Stickiness) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 6, 0}
}

// When exchange_deal_id is set, the type of deal.  This is reported to
// publishers and affects how the deal is treated in the auction.
type BidResponse_Ad_AdSlot_ExchangeDealType int32

const (
	BidResponse_Ad_AdSlot_OPEN_AUCTION             BidResponse_Ad_AdSlot_ExchangeDealType = 0
	BidResponse_Ad_AdSlot_PRIVATE_AUCTION          BidResponse_Ad_AdSlot_ExchangeDealType = 1
	BidResponse_Ad_AdSlot_PREFERRED_DEAL           BidResponse_Ad_AdSlot_ExchangeDealType = 2
	BidResponse_Ad_AdSlot_EXCHANGE_AUCTION_PACKAGE BidResponse_Ad_AdSlot_ExchangeDealType = 3
)

var BidResponse_Ad_AdSlot_ExchangeDealType_name = map[int32]string{
	0: "OPEN_AUCTION",
	1: "PRIVATE_AUCTION",
	2: "PREFERRED_DEAL",
	3: "EXCHANGE_AUCTION_PACKAGE",
}

var BidResponse_Ad_AdSlot_ExchangeDealType_value = map[string]int32{
	"OPEN_AUCTION":             0,
	"PRIVATE_AUCTION":          1,
	"PREFERRED_DEAL":           2,
	"EXCHANGE_AUCTION_PACKAGE": 3,
}

func (x BidResponse_Ad_AdSlot_ExchangeDealType) Enum() *BidResponse_Ad_AdSlot_ExchangeDealType {
	p := new(BidResponse_Ad_AdSlot_ExchangeDealType)
	*p = x
	return p
}

func (x BidResponse_Ad_AdSlot_ExchangeDealType) String() string {
	return proto.EnumName(BidResponse_Ad_AdSlot_ExchangeDealType_name, int32(x))
}

func (x *BidResponse_Ad_AdSlot_ExchangeDealType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidResponse_Ad_AdSlot_ExchangeDealType_value, data, "BidResponse_Ad_AdSlot_ExchangeDealType")
	if err != nil {
		return err
	}
	*x = BidResponse_Ad_AdSlot_ExchangeDealType(value)
	return nil
}

func (BidResponse_Ad_AdSlot_ExchangeDealType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1, 0, 1, 0}
}

// Additional context provided for rendering.
type BidResponse_Ad_ImpressionTrackingResource_Context int32

const (
	BidResponse_Ad_ImpressionTrackingResource_UNKNOWN_CONTEXT BidResponse_Ad_ImpressionTrackingResource_Context = 0
	BidResponse_Ad_ImpressionTrackingResource_OMID            BidResponse_Ad_ImpressionTrackingResource_Context = 1
)

var BidResponse_Ad_ImpressionTrackingResource_Context_name = map[int32]string{
	0: "UNKNOWN_CONTEXT",
	1: "OMID",
}

var BidResponse_Ad_ImpressionTrackingResource_Context_value = map[string]int32{
	"UNKNOWN_CONTEXT": 0,
	"OMID":            1,
}

func (x BidResponse_Ad_ImpressionTrackingResource_Context) Enum() *BidResponse_Ad_ImpressionTrackingResource_Context {
	p := new(BidResponse_Ad_ImpressionTrackingResource_Context)
	*p = x
	return p
}

func (x BidResponse_Ad_ImpressionTrackingResource_Context) String() string {
	return proto.EnumName(BidResponse_Ad_ImpressionTrackingResource_Context_name, int32(x))
}

func (x *BidResponse_Ad_ImpressionTrackingResource_Context) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BidResponse_Ad_ImpressionTrackingResource_Context_value, data, "BidResponse_Ad_ImpressionTrackingResource_Context")
	if err != nil {
		return err
	}
	*x = BidResponse_Ad_ImpressionTrackingResource_Context(value)
	return nil
}

func (BidResponse_Ad_ImpressionTrackingResource_Context) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1, 0, 2, 0}
}

// This is the message that Google uses to request bids. A BidRequest
// includes the ad slot from a single impression.
//
type BidRequest struct {
	// Unique request id generated by Google. This is 16 bytes long.
	Id []byte `protobuf:"bytes,2,req,name=id" json:"id,omitempty"`
	// The first 3 bytes of the IP address in network byte order for IPv4, or the
	// first 6 bytes for IPv6. Note that the number and position of the bytes
	// included from IPv6 addresses may change later.
	Ip []byte `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	// When set, the user's cookie/id data allows only restricted usage and is not
	// available in the usual fields. Instead the data may be accessed through
	// the constrained usage fields and stricter usage policies apply. There may
	// be multiple restrictions applicable at the same time. You must only use
	// the data for use cases allowed by all restrictions.
	// You will receive the user_data_treatment value in BidRequests if there are
	// any applicable restrictions. However, you must be whitelisted in order to
	// receive the constrained usage user data fields. See
	// https://developers.google.com/authorized-buyers/rtb/user_data_treatments
	// for more information.
	// The impacted fields are:
	//  * google_user_id: use constrained_usage_google_user_id
	//  * hosted_match_data: use constrained_usage_hosted_match_data
	//  * mobile.encrypted_advertising_id: use
	//    mobile.constrained_usage_encrypted_advertising_id
	//  * mobile.encrypted_hashed_idfa: use
	//    mobile.constrained_usage_encrypted_hashed_idfa
	UserDataTreatment []BidRequest_UserDataTreatment `protobuf:"varint,49,rep,name=user_data_treatment,json=userDataTreatment,enum=BidRequest_UserDataTreatment" json:"user_data_treatment,omitempty"`
	// The Google ID for the user as described in the documentation for the cookie
	// matching service. This field is the unpadded web-safe base64 encoded
	// version of a binary cookie id. See the "Base 64 Encoding with URL and
	// Filename Safe Alphabet" section in RFC 3548 for encoding details. This
	// field is the same as the Google ID returned by the cookie matching service.
	// Not set if there is one or more user_data_treatment value, see
	// constrained_usage_google_user_id instead.
	GoogleUserId *string `protobuf:"bytes,21,opt,name=google_user_id,json=googleUserId" json:"google_user_id,omitempty"`
	// Only set if there is one or more user_data_treatment value. If
	// constrained_usage_google_user_id is set, then google_user_id is not set.
	// You must be whitelisted for all user_data_treatments in this request in
	// order to receive this field.
	ConstrainedUsageGoogleUserId *string `protobuf:"bytes,47,opt,name=constrained_usage_google_user_id,json=constrainedUsageGoogleUserId" json:"constrained_usage_google_user_id,omitempty"`
	// The version number of the google_user_id. We may sometimes change the
	// mapping from cookie to google_user_id. In this case the version will be
	// incremented.
	CookieVersion *uint32 `protobuf:"varint,20,opt,name=cookie_version,json=cookieVersion" json:"cookie_version,omitempty"`
	// The time in seconds since the google_user_id was created.
	// This number may be quantized.
	CookieAgeSeconds *int32 `protobuf:"varint,31,opt,name=cookie_age_seconds,json=cookieAgeSeconds" json:"cookie_age_seconds,omitempty"`
	// Match data stored for this google_user_id through the cookie matching
	// service. If a match exists, then this field holds the decoded data that
	// was passed in the google_hm parameter.
	// Not set if there is one or more user_data_treatment value, see
	// constrained_usage_hosted_match_data instead.
	HostedMatchData []byte `protobuf:"bytes,37,opt,name=hosted_match_data,json=hostedMatchData" json:"hosted_match_data,omitempty"`
	// Only set if there is one or more user_data_treatment value. If
	// constrained_usage_hosted_match_data is set, then hosted_match_data is not
	// set. You must be whitelisted for all user_data_treatments in this request
	// in order to receive this field.
	ConstrainedUsageHostedMatchData []byte `protobuf:"bytes,48,opt,name=constrained_usage_hosted_match_data,json=constrainedUsageHostedMatchData" json:"constrained_usage_hosted_match_data,omitempty"`
	// A string that identifies the browser and type of device that sent the
	// request. Certain data may be redacted or replaced.
	UserAgent *string `protobuf:"bytes,6,opt,name=user_agent,json=userAgent" json:"user_agent,omitempty"`
	// The billing address country of the publisher. This may be different from
	// the detected country of the user in geo_criteria_id or the hosting country
	// of the website. For a complete list of country codes, please refer to
	// https://developers.google.com/adwords/api/docs/appendix/codes-formats#country-codes
	PublisherCountry *string `protobuf:"bytes,55,opt,name=publisher_country,json=publisherCountry" json:"publisher_country,omitempty"`
	// Location of the end user. Uses a subset of the codes used in the AdWords
	// API. See the geo-table.csv table in the technical documentation for a list
	// of ids. The geo_criteria_id field replaces the deprecated country, region,
	// city, and metro fields.
	GeoCriteriaId *int32 `protobuf:"varint,39,opt,name=geo_criteria_id,json=geoCriteriaId" json:"geo_criteria_id,omitempty"`
	// Detected postal code of the appropriate type for the country of the end
	// user (e.g. zip code if the country is "US"). The postal_code_prefix field
	// is set when accuracy is too low to imply a full code, otherwise the
	// postal_code field is set.
	PostalCode       *string `protobuf:"bytes,33,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	PostalCodePrefix *string `protobuf:"bytes,34,opt,name=postal_code_prefix,json=postalCodePrefix" json:"postal_code_prefix,omitempty"`
	// Hyperlocal targeting signal when available, encrypted as described at
	// https://developers.google.com/authorized-buyers/rtb/response-guide/decrypt-hyperlocal
	EncryptedHyperlocalSet []byte `protobuf:"bytes,40,opt,name=encrypted_hyperlocal_set,json=encryptedHyperlocalSet" json:"encrypted_hyperlocal_set,omitempty"`
	// Unencrypted version of encrypted_hyperlocal_set. This field is only set
	// when using an SSL connection.
	HyperlocalSet *BidRequest_HyperlocalSet `protobuf:"bytes,53,opt,name=hyperlocal_set,json=hyperlocalSet" json:"hyperlocal_set,omitempty"`
	// The offset of the user's time from GMT in minutes. For example, GMT+10 is
	// timezone_offset = 600.
	TimezoneOffset *int32 `protobuf:"varint,25,opt,name=timezone_offset,json=timezoneOffset" json:"timezone_offset,omitempty"`
	// List of detected user verticals. Currently unused.
	UserVertical []int32                `protobuf:"varint,30,rep,packed,name=user_vertical,json=userVertical" json:"user_vertical,omitempty"`
	UserList     []*BidRequest_UserList `protobuf:"bytes,32,rep,name=user_list,json=userList" json:"user_list,omitempty"`
	// The publisher ID as defined by the publisher code suffix of
	// the web property code. For instance, "pub-123" is the publisher code of web
	// property code "ca-pub-123" (ca- is the product specific prefix of the web
	// property).
	PublisherId *string `protobuf:"bytes,56,opt,name=publisher_id,json=publisherId" json:"publisher_id,omitempty"`
	// The seller network id. See seller-network-ids.txt file in the technical
	// documentation for a list of ids. This is only set if the site is not
	// anonymous and the publisher allows site targeting.
	SellerNetworkId *int32 `protobuf:"varint,41,opt,name=seller_network_id,json=sellerNetworkId" json:"seller_network_id,omitempty"`
	// Id for the partner that provides this inventory. This is only set when
	// seller_network_id is also set and further partner information beyond the
	// seller_network_id is also available. The value of the partner_id is not
	// meaningful beyond providing a stable identifier.
	PartnerId *uint64 `protobuf:"fixed64,52,opt,name=partner_id,json=partnerId" json:"partner_id,omitempty"`
	// The URL of the page with parameters removed. This is only set if the site
	// is not anonymous and the publisher allows site targeting. You can use
	// anonymous_id for targeting if the inventory is anonymous. Otherwise, use
	// detected_vertical's. Only one of url or anonymous_id is ever set in the
	// same request. This always starts with a protocol (either http or https).
	Url *string `protobuf:"bytes,11,opt,name=url" json:"url,omitempty"`
	// An id for the domain of the page. This is set when the inventory is
	// anonymous. Only one of url or anonymous_id is ever set in the same
	// request.
	AnonymousId *string `protobuf:"bytes,19,opt,name=anonymous_id,json=anonymousId" json:"anonymous_id,omitempty"`
	// Detected user languages, based on the language of the web page, the browser
	// settings, and other signals. The order is arbitrary. The codes are 2 or 5
	// characters and are documented at
	// https://developers.google.com/adwords/api/docs/appendix/languagecodes
	DetectedLanguage []string `protobuf:"bytes,12,rep,name=detected_language,json=detectedLanguage" json:"detected_language,omitempty"`
	// Unordered list of detected content verticals. See the
	// publisher-verticals.txt file in the technical documentation for a list of
	// ids.
	DetectedVertical []*BidRequest_Vertical `protobuf:"bytes,13,rep,name=detected_vertical,json=detectedVertical" json:"detected_vertical,omitempty"`
	// List of detected content labels. See content-labels.txt file in the
	// technical documentation for a list of ids.
	DetectedContentLabel []int32 `protobuf:"varint,26,rep,packed,name=detected_content_label,json=detectedContentLabel" json:"detected_content_label,omitempty"`
	// This represents a unique ID for the overall query.  In the event
	// that there are multiple callouts for a query, all callout requests for that
	// query will contain the same google_query_id.
	GoogleQueryId *string                 `protobuf:"bytes,59,opt,name=google_query_id,json=googleQueryId" json:"google_query_id,omitempty"`
	AuctionType   *BidRequest_AuctionType `protobuf:"varint,60,opt,name=auction_type,json=auctionType,enum=BidRequest_AuctionType,def=2" json:"auction_type,omitempty"`
	Device        *BidRequest_Device      `protobuf:"bytes,54,opt,name=device" json:"device,omitempty"`
	KeyValue      []*BidRequest_KeyValue  `protobuf:"bytes,38,rep,name=key_value,json=keyValue" json:"key_value,omitempty"`
	Mobile        *BidRequest_Mobile      `protobuf:"bytes,28,opt,name=mobile" json:"mobile,omitempty"`
	Video         *BidRequest_Video       `protobuf:"bytes,29,opt,name=video" json:"video,omitempty"`
	// The publisher settings list id that applies to this page.
	// See the RTB Publisher Settings guide at
	// https://developers.google.com/authorized-buyers/rtb/pub-settings-guide
	// for details.
	PublisherSettingsListId *uint64                           `protobuf:"fixed64,42,opt,name=publisher_settings_list_id,json=publisherSettingsListId" json:"publisher_settings_list_id,omitempty"`
	PublisherType           *BidRequest_PublisherType         `protobuf:"varint,51,opt,name=publisher_type,json=publisherType,enum=BidRequest_PublisherType,def=0" json:"publisher_type,omitempty"`
	Adslot                  []*BidRequest_AdSlot              `protobuf:"bytes,14,rep,name=adslot" json:"adslot,omitempty"`
	BidResponseFeedback     []*BidRequest_BidResponseFeedback `protobuf:"bytes,44,rep,name=bid_response_feedback,json=bidResponseFeedback" json:"bid_response_feedback,omitempty"`
	// How many milliseconds Google will wait for a response before ignoring it.
	ResponseDeadlineMs *int32 `protobuf:"varint,57,opt,name=response_deadline_ms,json=responseDeadlineMs" json:"response_deadline_ms,omitempty"`
	// If true, then this is a test request. Results will not be displayed to
	// users and you will not be billed for a response even if it wins the
	// auction. You should still do regular processing since the request may be
	// used to evaluate latencies or for other testing. During your initial
	// testing with Google traffic any response that you make will be filtered
	// out of the auction whether this flag has a value of true or false.
	IsTest *bool `protobuf:"varint,15,opt,name=is_test,json=isTest,def=0" json:"is_test,omitempty"`
	// If true, then this request is intended to measure network latency. Please
	// return an empty BidResponse with only processing_time_ms set as quickly as
	// possible without executing any bidding logic.
	IsPing *bool `protobuf:"varint,17,opt,name=is_ping,json=isPing,def=0" json:"is_ping,omitempty"`
	// If true, then the selective callout model predicted that you will not bid
	// on this request. We send a sampled percentage of such requests so that we
	// can automatically update the model when bidding patterns change.
	IsPredictedToBeIgnored *bool    `protobuf:"varint,45,opt,name=is_predicted_to_be_ignored,json=isPredictedToBeIgnored,def=0" json:"is_predicted_to_be_ignored,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *BidRequest) Reset()         { *m = BidRequest{} }
func (m *BidRequest) String() string { return proto.CompactTextString(m) }
func (*BidRequest) ProtoMessage()    {}
func (*BidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0}
}

func (m *BidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest.Unmarshal(m, b)
}
func (m *BidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest.Marshal(b, m, deterministic)
}
func (m *BidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest.Merge(m, src)
}
func (m *BidRequest) XXX_Size() int {
	return xxx_messageInfo_BidRequest.Size(m)
}
func (m *BidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest proto.InternalMessageInfo

const Default_BidRequest_AuctionType BidRequest_AuctionType = BidRequest_SECOND_PRICE
const Default_BidRequest_PublisherType BidRequest_PublisherType = BidRequest_UNKNOWN_PUBLISHER_TYPE
const Default_BidRequest_IsTest bool = false
const Default_BidRequest_IsPing bool = false
const Default_BidRequest_IsPredictedToBeIgnored bool = false

func (m *BidRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *BidRequest) GetIp() []byte {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *BidRequest) GetUserDataTreatment() []BidRequest_UserDataTreatment {
	if m != nil {
		return m.UserDataTreatment
	}
	return nil
}

func (m *BidRequest) GetGoogleUserId() string {
	if m != nil && m.GoogleUserId != nil {
		return *m.GoogleUserId
	}
	return ""
}

func (m *BidRequest) GetConstrainedUsageGoogleUserId() string {
	if m != nil && m.ConstrainedUsageGoogleUserId != nil {
		return *m.ConstrainedUsageGoogleUserId
	}
	return ""
}

func (m *BidRequest) GetCookieVersion() uint32 {
	if m != nil && m.CookieVersion != nil {
		return *m.CookieVersion
	}
	return 0
}

func (m *BidRequest) GetCookieAgeSeconds() int32 {
	if m != nil && m.CookieAgeSeconds != nil {
		return *m.CookieAgeSeconds
	}
	return 0
}

func (m *BidRequest) GetHostedMatchData() []byte {
	if m != nil {
		return m.HostedMatchData
	}
	return nil
}

func (m *BidRequest) GetConstrainedUsageHostedMatchData() []byte {
	if m != nil {
		return m.ConstrainedUsageHostedMatchData
	}
	return nil
}

func (m *BidRequest) GetUserAgent() string {
	if m != nil && m.UserAgent != nil {
		return *m.UserAgent
	}
	return ""
}

func (m *BidRequest) GetPublisherCountry() string {
	if m != nil && m.PublisherCountry != nil {
		return *m.PublisherCountry
	}
	return ""
}

func (m *BidRequest) GetGeoCriteriaId() int32 {
	if m != nil && m.GeoCriteriaId != nil {
		return *m.GeoCriteriaId
	}
	return 0
}

func (m *BidRequest) GetPostalCode() string {
	if m != nil && m.PostalCode != nil {
		return *m.PostalCode
	}
	return ""
}

func (m *BidRequest) GetPostalCodePrefix() string {
	if m != nil && m.PostalCodePrefix != nil {
		return *m.PostalCodePrefix
	}
	return ""
}

func (m *BidRequest) GetEncryptedHyperlocalSet() []byte {
	if m != nil {
		return m.EncryptedHyperlocalSet
	}
	return nil
}

func (m *BidRequest) GetHyperlocalSet() *BidRequest_HyperlocalSet {
	if m != nil {
		return m.HyperlocalSet
	}
	return nil
}

func (m *BidRequest) GetTimezoneOffset() int32 {
	if m != nil && m.TimezoneOffset != nil {
		return *m.TimezoneOffset
	}
	return 0
}

func (m *BidRequest) GetUserVertical() []int32 {
	if m != nil {
		return m.UserVertical
	}
	return nil
}

func (m *BidRequest) GetUserList() []*BidRequest_UserList {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *BidRequest) GetPublisherId() string {
	if m != nil && m.PublisherId != nil {
		return *m.PublisherId
	}
	return ""
}

func (m *BidRequest) GetSellerNetworkId() int32 {
	if m != nil && m.SellerNetworkId != nil {
		return *m.SellerNetworkId
	}
	return 0
}

func (m *BidRequest) GetPartnerId() uint64 {
	if m != nil && m.PartnerId != nil {
		return *m.PartnerId
	}
	return 0
}

func (m *BidRequest) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidRequest) GetAnonymousId() string {
	if m != nil && m.AnonymousId != nil {
		return *m.AnonymousId
	}
	return ""
}

func (m *BidRequest) GetDetectedLanguage() []string {
	if m != nil {
		return m.DetectedLanguage
	}
	return nil
}

func (m *BidRequest) GetDetectedVertical() []*BidRequest_Vertical {
	if m != nil {
		return m.DetectedVertical
	}
	return nil
}

func (m *BidRequest) GetDetectedContentLabel() []int32 {
	if m != nil {
		return m.DetectedContentLabel
	}
	return nil
}

func (m *BidRequest) GetGoogleQueryId() string {
	if m != nil && m.GoogleQueryId != nil {
		return *m.GoogleQueryId
	}
	return ""
}

func (m *BidRequest) GetAuctionType() BidRequest_AuctionType {
	if m != nil && m.AuctionType != nil {
		return *m.AuctionType
	}
	return Default_BidRequest_AuctionType
}

func (m *BidRequest) GetDevice() *BidRequest_Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *BidRequest) GetKeyValue() []*BidRequest_KeyValue {
	if m != nil {
		return m.KeyValue
	}
	return nil
}

func (m *BidRequest) GetMobile() *BidRequest_Mobile {
	if m != nil {
		return m.Mobile
	}
	return nil
}

func (m *BidRequest) GetVideo() *BidRequest_Video {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *BidRequest) GetPublisherSettingsListId() uint64 {
	if m != nil && m.PublisherSettingsListId != nil {
		return *m.PublisherSettingsListId
	}
	return 0
}

func (m *BidRequest) GetPublisherType() BidRequest_PublisherType {
	if m != nil && m.PublisherType != nil {
		return *m.PublisherType
	}
	return Default_BidRequest_PublisherType
}

func (m *BidRequest) GetAdslot() []*BidRequest_AdSlot {
	if m != nil {
		return m.Adslot
	}
	return nil
}

func (m *BidRequest) GetBidResponseFeedback() []*BidRequest_BidResponseFeedback {
	if m != nil {
		return m.BidResponseFeedback
	}
	return nil
}

func (m *BidRequest) GetResponseDeadlineMs() int32 {
	if m != nil && m.ResponseDeadlineMs != nil {
		return *m.ResponseDeadlineMs
	}
	return 0
}

func (m *BidRequest) GetIsTest() bool {
	if m != nil && m.IsTest != nil {
		return *m.IsTest
	}
	return Default_BidRequest_IsTest
}

func (m *BidRequest) GetIsPing() bool {
	if m != nil && m.IsPing != nil {
		return *m.IsPing
	}
	return Default_BidRequest_IsPing
}

func (m *BidRequest) GetIsPredictedToBeIgnored() bool {
	if m != nil && m.IsPredictedToBeIgnored != nil {
		return *m.IsPredictedToBeIgnored
	}
	return Default_BidRequest_IsPredictedToBeIgnored
}

// A hyperlocal targeting location when available.
//
type BidRequest_Hyperlocal struct {
	// The mobile device can be at any point inside the geofence polygon defined
	// by a list of corners. Currently, the polygon is always a parallelogram
	// with 4 corners.
	Corners              []*BidRequest_Hyperlocal_Point `protobuf:"bytes,1,rep,name=corners" json:"corners,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *BidRequest_Hyperlocal) Reset()         { *m = BidRequest_Hyperlocal{} }
func (m *BidRequest_Hyperlocal) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Hyperlocal) ProtoMessage()    {}
func (*BidRequest_Hyperlocal) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 0}
}

func (m *BidRequest_Hyperlocal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Hyperlocal.Unmarshal(m, b)
}
func (m *BidRequest_Hyperlocal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Hyperlocal.Marshal(b, m, deterministic)
}
func (m *BidRequest_Hyperlocal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Hyperlocal.Merge(m, src)
}
func (m *BidRequest_Hyperlocal) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Hyperlocal.Size(m)
}
func (m *BidRequest_Hyperlocal) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Hyperlocal.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Hyperlocal proto.InternalMessageInfo

func (m *BidRequest_Hyperlocal) GetCorners() []*BidRequest_Hyperlocal_Point {
	if m != nil {
		return m.Corners
	}
	return nil
}

// A location on the Earth's surface.
//
type BidRequest_Hyperlocal_Point struct {
	Latitude             *float32 `protobuf:"fixed32,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude            *float32 `protobuf:"fixed32,2,opt,name=longitude" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Hyperlocal_Point) Reset()         { *m = BidRequest_Hyperlocal_Point{} }
func (m *BidRequest_Hyperlocal_Point) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Hyperlocal_Point) ProtoMessage()    {}
func (*BidRequest_Hyperlocal_Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 0, 0}
}

func (m *BidRequest_Hyperlocal_Point) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Hyperlocal_Point.Unmarshal(m, b)
}
func (m *BidRequest_Hyperlocal_Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Hyperlocal_Point.Marshal(b, m, deterministic)
}
func (m *BidRequest_Hyperlocal_Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Hyperlocal_Point.Merge(m, src)
}
func (m *BidRequest_Hyperlocal_Point) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Hyperlocal_Point.Size(m)
}
func (m *BidRequest_Hyperlocal_Point) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Hyperlocal_Point.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Hyperlocal_Point proto.InternalMessageInfo

func (m *BidRequest_Hyperlocal_Point) GetLatitude() float32 {
	if m != nil && m.Latitude != nil {
		return *m.Latitude
	}
	return 0
}

func (m *BidRequest_Hyperlocal_Point) GetLongitude() float32 {
	if m != nil && m.Longitude != nil {
		return *m.Longitude
	}
	return 0
}

type BidRequest_HyperlocalSet struct {
	// This field currently contains at most one hyperlocal polygon.
	Hyperlocal []*BidRequest_Hyperlocal `protobuf:"bytes,1,rep,name=hyperlocal" json:"hyperlocal,omitempty"`
	// The approximate geometric center of the geofence area. It is calculated
	// exclusively based on the geometric shape of the geofence area and in no
	// way indicates the mobile device's actual location within the geofence
	// area. If multiple hyperlocal polygons are specified above then
	// center_point is the geometric center of all hyperlocal polygons.
	CenterPoint          *BidRequest_Hyperlocal_Point `protobuf:"bytes,2,opt,name=center_point,json=centerPoint" json:"center_point,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BidRequest_HyperlocalSet) Reset()         { *m = BidRequest_HyperlocalSet{} }
func (m *BidRequest_HyperlocalSet) String() string { return proto.CompactTextString(m) }
func (*BidRequest_HyperlocalSet) ProtoMessage()    {}
func (*BidRequest_HyperlocalSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 1}
}

func (m *BidRequest_HyperlocalSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_HyperlocalSet.Unmarshal(m, b)
}
func (m *BidRequest_HyperlocalSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_HyperlocalSet.Marshal(b, m, deterministic)
}
func (m *BidRequest_HyperlocalSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_HyperlocalSet.Merge(m, src)
}
func (m *BidRequest_HyperlocalSet) XXX_Size() int {
	return xxx_messageInfo_BidRequest_HyperlocalSet.Size(m)
}
func (m *BidRequest_HyperlocalSet) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_HyperlocalSet.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_HyperlocalSet proto.InternalMessageInfo

func (m *BidRequest_HyperlocalSet) GetHyperlocal() []*BidRequest_Hyperlocal {
	if m != nil {
		return m.Hyperlocal
	}
	return nil
}

func (m *BidRequest_HyperlocalSet) GetCenterPoint() *BidRequest_Hyperlocal_Point {
	if m != nil {
		return m.CenterPoint
	}
	return nil
}

// This field is not populated by default. We recommend that bidders instead
// store and look up list ids using either google_user_id or hosted_match_data
// as keys.
//
type BidRequest_UserList struct {
	// The user list id.
	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// The time in seconds since the user was added to the list.
	AgeSeconds           *int32   `protobuf:"varint,2,opt,name=age_seconds,json=ageSeconds" json:"age_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_UserList) Reset()         { *m = BidRequest_UserList{} }
func (m *BidRequest_UserList) String() string { return proto.CompactTextString(m) }
func (*BidRequest_UserList) ProtoMessage()    {}
func (*BidRequest_UserList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 2}
}

func (m *BidRequest_UserList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_UserList.Unmarshal(m, b)
}
func (m *BidRequest_UserList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_UserList.Marshal(b, m, deterministic)
}
func (m *BidRequest_UserList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_UserList.Merge(m, src)
}
func (m *BidRequest_UserList) XXX_Size() int {
	return xxx_messageInfo_BidRequest_UserList.Size(m)
}
func (m *BidRequest_UserList) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_UserList.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_UserList proto.InternalMessageInfo

func (m *BidRequest_UserList) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_UserList) GetAgeSeconds() int32 {
	if m != nil && m.AgeSeconds != nil {
		return *m.AgeSeconds
	}
	return 0
}

// One or more detected verticals for the page as determined by Google.
//
type BidRequest_Vertical struct {
	// The vertical id. See the publisher-verticals.txt file in the technical
	// documentation for a list of ids.
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// Weight for this vertical, in the (0.0, 1.0] range. More relevant
	// verticals have higher weights.
	Weight               *float32 `protobuf:"fixed32,2,req,name=weight" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Vertical) Reset()         { *m = BidRequest_Vertical{} }
func (m *BidRequest_Vertical) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Vertical) ProtoMessage()    {}
func (*BidRequest_Vertical) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 3}
}

func (m *BidRequest_Vertical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Vertical.Unmarshal(m, b)
}
func (m *BidRequest_Vertical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Vertical.Marshal(b, m, deterministic)
}
func (m *BidRequest_Vertical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Vertical.Merge(m, src)
}
func (m *BidRequest_Vertical) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Vertical.Size(m)
}
func (m *BidRequest_Vertical) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Vertical.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Vertical proto.InternalMessageInfo

func (m *BidRequest_Vertical) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_Vertical) GetWeight() float32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

// Information about the device.
type BidRequest_Device struct {
	DeviceType *BidRequest_Device_DeviceType `protobuf:"varint,1,opt,name=device_type,json=deviceType,enum=BidRequest_Device_DeviceType,def=0" json:"device_type,omitempty"`
	// The platform of the device. Examples: android, iphone, palm
	Platform *string `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
	// The brand of the device, e.g. Nokia, Samsung.
	Brand *string `protobuf:"bytes,3,opt,name=brand,def=" json:"brand,omitempty"`
	// The model of the device, e.g. N70, Galaxy.
	Model *string `protobuf:"bytes,4,opt,name=model,def=" json:"model,omitempty"`
	// The OS version; e.g. 2 for Android 2.1, or 3.3 for iOS 3.3.1.
	OsVersion *BidRequest_Device_OsVersion `protobuf:"bytes,5,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	// Unique identifier for the mobile carrier if the device is connected to
	// the internet via a carrier (as opposed to via WiFi). To look up carrier
	// name and country from carrier ID, please refer to:
	// https://developers.google.com/adwords/api/docs/appendix/mobilecarriers.
	CarrierId *int64 `protobuf:"varint,6,opt,name=carrier_id,json=carrierId" json:"carrier_id,omitempty"`
	// The width of the device screen in pixels.
	ScreenWidth *int32 `protobuf:"varint,7,opt,name=screen_width,json=screenWidth,def=0" json:"screen_width,omitempty"`
	// The height of the device screen in pixels.
	ScreenHeight *int32 `protobuf:"varint,8,opt,name=screen_height,json=screenHeight,def=0" json:"screen_height,omitempty"`
	// Used for high-density devices (e.g. iOS retina displays). A non-default
	// value indicates that the nominal screen size (with pixels as the unit)
	// does not describe the actual number of pixels in the screen. For example,
	// nominal width and height may be 320x640 for a screen that actually has
	// 640x1080 pixels, in which case screen_width=320, screen_height=640, and
	// screen_pixel_ratio_millis=2000, since each axis has twice as many pixels
	// as its dimensions would indicate.
	ScreenPixelRatioMillis *int32 `protobuf:"varint,9,opt,name=screen_pixel_ratio_millis,json=screenPixelRatioMillis,def=0" json:"screen_pixel_ratio_millis,omitempty"`
	// The screen orientation of the device when the ad request is sent.
	ScreenOrientation *BidRequest_Device_ScreenOrientation `protobuf:"varint,10,opt,name=screen_orientation,json=screenOrientation,enum=BidRequest_Device_ScreenOrientation,def=0" json:"screen_orientation,omitempty"`
	// Apple iOS device model, e.g., "iphone 5s", "iphone 6+", "ipad 4".
	HardwareVersion      *string  `protobuf:"bytes,11,opt,name=hardware_version,json=hardwareVersion" json:"hardware_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Device) Reset()         { *m = BidRequest_Device{} }
func (m *BidRequest_Device) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Device) ProtoMessage()    {}
func (*BidRequest_Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 4}
}

func (m *BidRequest_Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Device.Unmarshal(m, b)
}
func (m *BidRequest_Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Device.Marshal(b, m, deterministic)
}
func (m *BidRequest_Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Device.Merge(m, src)
}
func (m *BidRequest_Device) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Device.Size(m)
}
func (m *BidRequest_Device) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Device.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Device proto.InternalMessageInfo

const Default_BidRequest_Device_DeviceType BidRequest_Device_DeviceType = BidRequest_Device_UNKNOWN_DEVICE
const Default_BidRequest_Device_ScreenWidth int32 = 0
const Default_BidRequest_Device_ScreenHeight int32 = 0
const Default_BidRequest_Device_ScreenPixelRatioMillis int32 = 0
const Default_BidRequest_Device_ScreenOrientation BidRequest_Device_ScreenOrientation = BidRequest_Device_UNKNOWN_ORIENTATION

func (m *BidRequest_Device) GetDeviceType() BidRequest_Device_DeviceType {
	if m != nil && m.DeviceType != nil {
		return *m.DeviceType
	}
	return Default_BidRequest_Device_DeviceType
}

func (m *BidRequest_Device) GetPlatform() string {
	if m != nil && m.Platform != nil {
		return *m.Platform
	}
	return ""
}

func (m *BidRequest_Device) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *BidRequest_Device) GetModel() string {
	if m != nil && m.Model != nil {
		return *m.Model
	}
	return ""
}

func (m *BidRequest_Device) GetOsVersion() *BidRequest_Device_OsVersion {
	if m != nil {
		return m.OsVersion
	}
	return nil
}

func (m *BidRequest_Device) GetCarrierId() int64 {
	if m != nil && m.CarrierId != nil {
		return *m.CarrierId
	}
	return 0
}

func (m *BidRequest_Device) GetScreenWidth() int32 {
	if m != nil && m.ScreenWidth != nil {
		return *m.ScreenWidth
	}
	return Default_BidRequest_Device_ScreenWidth
}

func (m *BidRequest_Device) GetScreenHeight() int32 {
	if m != nil && m.ScreenHeight != nil {
		return *m.ScreenHeight
	}
	return Default_BidRequest_Device_ScreenHeight
}

func (m *BidRequest_Device) GetScreenPixelRatioMillis() int32 {
	if m != nil && m.ScreenPixelRatioMillis != nil {
		return *m.ScreenPixelRatioMillis
	}
	return Default_BidRequest_Device_ScreenPixelRatioMillis
}

func (m *BidRequest_Device) GetScreenOrientation() BidRequest_Device_ScreenOrientation {
	if m != nil && m.ScreenOrientation != nil {
		return *m.ScreenOrientation
	}
	return Default_BidRequest_Device_ScreenOrientation
}

func (m *BidRequest_Device) GetHardwareVersion() string {
	if m != nil && m.HardwareVersion != nil {
		return *m.HardwareVersion
	}
	return ""
}

// Contains the OS version of the platform. For instance, for Android 2,
// major=2, minor=0. For iPhone 3.3.1, major=3 and minor=3.
type BidRequest_Device_OsVersion struct {
	Major                *int32   `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Minor                *int32   `protobuf:"varint,2,opt,name=minor" json:"minor,omitempty"`
	Micro                *int32   `protobuf:"varint,3,opt,name=micro" json:"micro,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Device_OsVersion) Reset()         { *m = BidRequest_Device_OsVersion{} }
func (m *BidRequest_Device_OsVersion) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Device_OsVersion) ProtoMessage()    {}
func (*BidRequest_Device_OsVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 4, 0}
}

func (m *BidRequest_Device_OsVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Device_OsVersion.Unmarshal(m, b)
}
func (m *BidRequest_Device_OsVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Device_OsVersion.Marshal(b, m, deterministic)
}
func (m *BidRequest_Device_OsVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Device_OsVersion.Merge(m, src)
}
func (m *BidRequest_Device_OsVersion) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Device_OsVersion.Size(m)
}
func (m *BidRequest_Device_OsVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Device_OsVersion.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Device_OsVersion proto.InternalMessageInfo

func (m *BidRequest_Device_OsVersion) GetMajor() int32 {
	if m != nil && m.Major != nil {
		return *m.Major
	}
	return 0
}

func (m *BidRequest_Device_OsVersion) GetMinor() int32 {
	if m != nil && m.Minor != nil {
		return *m.Minor
	}
	return 0
}

func (m *BidRequest_Device_OsVersion) GetMicro() int32 {
	if m != nil && m.Micro != nil {
		return *m.Micro
	}
	return 0
}

// Additional key-value attributes. Currently unused.
type BidRequest_KeyValue struct {
	Key                  *string  `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value                *string  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_KeyValue) Reset()         { *m = BidRequest_KeyValue{} }
func (m *BidRequest_KeyValue) String() string { return proto.CompactTextString(m) }
func (*BidRequest_KeyValue) ProtoMessage()    {}
func (*BidRequest_KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 5}
}

func (m *BidRequest_KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_KeyValue.Unmarshal(m, b)
}
func (m *BidRequest_KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_KeyValue.Marshal(b, m, deterministic)
}
func (m *BidRequest_KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_KeyValue.Merge(m, src)
}
func (m *BidRequest_KeyValue) XXX_Size() int {
	return xxx_messageInfo_BidRequest_KeyValue.Size(m)
}
func (m *BidRequest_KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_KeyValue proto.InternalMessageInfo

func (m *BidRequest_KeyValue) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *BidRequest_KeyValue) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// Information for ad queries coming from mobile devices. A mobile device is
// either a smartphone or a tablet. This is present for ad queries both from
// mobile devices browsing the web and from mobile apps.
type BidRequest_Mobile struct {
	// If true, then this request is from a mobile application. For branded
	// requests, app_id will also be filled in. If the request is from a mobile
	// web page contained inside an app, is_app will still be false, but app_id
	// could be filled in with the app identifier. is_app may also be true for
	// anonymous inventory, in which case anonymous_id will be set. For SDK-less
	// requests (mostly from connected TVs), this will be true if an app ID is
	// provided directly in the request.
	IsApp *bool `protobuf:"varint,7,opt,name=is_app,json=isApp,def=0" json:"is_app,omitempty"`
	// The identifier of the mobile app when this ad query comes from a mobile
	// app, or from a mobile web page contained inside an app. If the app was
	// downloaded from the Apple iTunes app store, then this is the app-store
	// id, e.g., 343200656. For Android devices, this is the fully qualified
	// package name, e.g., com.rovio.angrybirds. For Windows devices it's the
	// App ID, e.g., f15abcde-f6gh-47i0-j3k8-37l93817mn3o. For SDK-less requests
	// (mostly from connected TVs), the app ID provided by the publisher
	// directly in the request.
	AppId *string `protobuf:"bytes,6,opt,name=app_id,json=appId" json:"app_id,omitempty"`
	// If true, then this is a mobile full screen ad request.
	IsInterstitialRequest *bool `protobuf:"varint,10,opt,name=is_interstitial_request,json=isInterstitialRequest,def=0" json:"is_interstitial_request,omitempty"`
	// This field contains the IDs of categories to which the current mobile app
	// belongs. This field will be empty if is_app is false. The mapping between
	// mobile apps and categories is defined by the Google Play Store for
	// Android apps, or the Apple iTunes Store for iOS apps. To look up category
	// name from category ID, please refer to
	// https://developers.google.com/adwords/api/docs/appendix/mobileappcategories
	AppCategoryIds []int32 `protobuf:"varint,11,rep,name=app_category_ids,json=appCategoryIds" json:"app_category_ids,omitempty"`
	// For a mobile web request, this field indicates whether the page is
	// optimized for mobile browsers on high-end mobile phones.
	IsMobileWebOptimized *bool `protobuf:"varint,17,opt,name=is_mobile_web_optimized,json=isMobileWebOptimized,def=0" json:"is_mobile_web_optimized,omitempty"`
	// This field is used for advertising identifiers for
	// 1) iOS devices (This is called Identifier for Advertising, or IDFA, as
	// described at https://support.google.com/adxbuyer/answer/3221407),
	// 2) Android devices,
	// 3) Roku devices,
	// 4) Microsoft Xbox devices,
	// 5) Amazon devices (i.e. Amazon Fire).
	//
	// When the encrypted_advertising_id is an IDFA, the plaintext after
	// decrypting the ciphertext is the IDFA (16 byte UUID) returned by iOS's
	// [ASIdentifierManager advertisingIdentifier]. For encrypted_hashed_idfa,
	// the plaintext is the 16 byte MD5 hash of the IDFA. Only one of the two
	// fields will be available, depending on the version of the SDK making the
	// request. Later SDKs provide unhashed values. They are not set if there is
	// one or more user_data_treatment value in the BidRequest, see
	// constrained_usage_encrypted_advertising_id and
	// constrained_usage_encrypted_hashed_idfa instead.
	EncryptedAdvertisingId []byte `protobuf:"bytes,20,opt,name=encrypted_advertising_id,json=encryptedAdvertisingId" json:"encrypted_advertising_id,omitempty"`
	// Unencrypted version of encrypted_advertising_id. This field is only set
	// when using an SSL connection. This field is a 16 byte UUID (binary form)
	// or a 32 byte alphanumeric id (such as Samsung ID).
	AdvertisingId       []byte `protobuf:"bytes,27,opt,name=advertising_id,json=advertisingId" json:"advertising_id,omitempty"`
	EncryptedHashedIdfa []byte `protobuf:"bytes,21,opt,name=encrypted_hashed_idfa,json=encryptedHashedIdfa" json:"encrypted_hashed_idfa,omitempty"`
	// Unencrypted version of encrypted_hashed_idfa. This field is only set
	// when using an SSL connection. This field is a 16 byte MD5.
	HashedIdfa []byte `protobuf:"bytes,28,opt,name=hashed_idfa,json=hashedIdfa" json:"hashed_idfa,omitempty"`
	// Only set if the BidRequest contains one or more user_data_treatment
	// value. If constrained_usage_encrypted_advertising_id or
	// constrained_usage_encrypted_hashed_idfa is set, then the corresponding
	// non-constrained field is not set. You must be whitelisted for all
	// user_data_treatments in this request in order to receive these fields.
	ConstrainedUsageEncryptedAdvertisingId []byte `protobuf:"bytes,22,opt,name=constrained_usage_encrypted_advertising_id,json=constrainedUsageEncryptedAdvertisingId" json:"constrained_usage_encrypted_advertising_id,omitempty"`
	// Unencrypted version of constrained_usage_encrypted_advertising_id. This
	// field is only set when using an SSL connection. This field is a 16 byte
	// UUID.
	ConstrainedUsageAdvertisingId       []byte `protobuf:"bytes,29,opt,name=constrained_usage_advertising_id,json=constrainedUsageAdvertisingId" json:"constrained_usage_advertising_id,omitempty"`
	ConstrainedUsageEncryptedHashedIdfa []byte `protobuf:"bytes,23,opt,name=constrained_usage_encrypted_hashed_idfa,json=constrainedUsageEncryptedHashedIdfa" json:"constrained_usage_encrypted_hashed_idfa,omitempty"`
	// Unencrypted version of constrained_usage_encrypted_hashed_idfa. This
	// field is only set when using an SSL connection. This field is a 16 byte
	// MD5.
	ConstrainedUsageHashedIdfa []byte `protobuf:"bytes,30,opt,name=constrained_usage_hashed_idfa,json=constrainedUsageHashedIdfa" json:"constrained_usage_hashed_idfa,omitempty"`
	// App names for Android apps are from the Google Play store.
	// App names for iOS apps are provided by App Annie
	// (https://www.appannie.com). App names for SDK-less requests (mostly from
	// connected TVs) are provided by the publisher directly in the request.
	AppName *string `protobuf:"bytes,24,opt,name=app_name,json=appName" json:"app_name,omitempty"`
	// Average user rating for the app. The range of user rating is between 1.0
	// and 5.0. Currently only available for apps in Google Play store.
	AppRating            *float32                          `protobuf:"fixed32,25,opt,name=app_rating,json=appRating" json:"app_rating,omitempty"`
	InstalledSdk         []*BidRequest_Mobile_InstalledSdk `protobuf:"bytes,32,rep,name=installed_sdk,json=installedSdk" json:"installed_sdk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *BidRequest_Mobile) Reset()         { *m = BidRequest_Mobile{} }
func (m *BidRequest_Mobile) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile) ProtoMessage()    {}
func (*BidRequest_Mobile) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 6}
}

func (m *BidRequest_Mobile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Mobile.Unmarshal(m, b)
}
func (m *BidRequest_Mobile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Mobile.Marshal(b, m, deterministic)
}
func (m *BidRequest_Mobile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Mobile.Merge(m, src)
}
func (m *BidRequest_Mobile) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Mobile.Size(m)
}
func (m *BidRequest_Mobile) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Mobile.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Mobile proto.InternalMessageInfo

const Default_BidRequest_Mobile_IsApp bool = false
const Default_BidRequest_Mobile_IsInterstitialRequest bool = false
const Default_BidRequest_Mobile_IsMobileWebOptimized bool = false

func (m *BidRequest_Mobile) GetIsApp() bool {
	if m != nil && m.IsApp != nil {
		return *m.IsApp
	}
	return Default_BidRequest_Mobile_IsApp
}

func (m *BidRequest_Mobile) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *BidRequest_Mobile) GetIsInterstitialRequest() bool {
	if m != nil && m.IsInterstitialRequest != nil {
		return *m.IsInterstitialRequest
	}
	return Default_BidRequest_Mobile_IsInterstitialRequest
}

func (m *BidRequest_Mobile) GetAppCategoryIds() []int32 {
	if m != nil {
		return m.AppCategoryIds
	}
	return nil
}

func (m *BidRequest_Mobile) GetIsMobileWebOptimized() bool {
	if m != nil && m.IsMobileWebOptimized != nil {
		return *m.IsMobileWebOptimized
	}
	return Default_BidRequest_Mobile_IsMobileWebOptimized
}

func (m *BidRequest_Mobile) GetEncryptedAdvertisingId() []byte {
	if m != nil {
		return m.EncryptedAdvertisingId
	}
	return nil
}

func (m *BidRequest_Mobile) GetAdvertisingId() []byte {
	if m != nil {
		return m.AdvertisingId
	}
	return nil
}

func (m *BidRequest_Mobile) GetEncryptedHashedIdfa() []byte {
	if m != nil {
		return m.EncryptedHashedIdfa
	}
	return nil
}

func (m *BidRequest_Mobile) GetHashedIdfa() []byte {
	if m != nil {
		return m.HashedIdfa
	}
	return nil
}

func (m *BidRequest_Mobile) GetConstrainedUsageEncryptedAdvertisingId() []byte {
	if m != nil {
		return m.ConstrainedUsageEncryptedAdvertisingId
	}
	return nil
}

func (m *BidRequest_Mobile) GetConstrainedUsageAdvertisingId() []byte {
	if m != nil {
		return m.ConstrainedUsageAdvertisingId
	}
	return nil
}

func (m *BidRequest_Mobile) GetConstrainedUsageEncryptedHashedIdfa() []byte {
	if m != nil {
		return m.ConstrainedUsageEncryptedHashedIdfa
	}
	return nil
}

func (m *BidRequest_Mobile) GetConstrainedUsageHashedIdfa() []byte {
	if m != nil {
		return m.ConstrainedUsageHashedIdfa
	}
	return nil
}

func (m *BidRequest_Mobile) GetAppName() string {
	if m != nil && m.AppName != nil {
		return *m.AppName
	}
	return ""
}

func (m *BidRequest_Mobile) GetAppRating() float32 {
	if m != nil && m.AppRating != nil {
		return *m.AppRating
	}
	return 0
}

func (m *BidRequest_Mobile) GetInstalledSdk() []*BidRequest_Mobile_InstalledSdk {
	if m != nil {
		return m.InstalledSdk
	}
	return nil
}

// Identification of and information about an SDK installed in the
// publisher's app that the bidder has access to, often because it's the
// bidder's SDK.
type BidRequest_Mobile_InstalledSdk struct {
	// Identifier for the installed SDK.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The version of the installed SDK.
	SdkVersion *BidRequest_Mobile_InstalledSdk_Version `protobuf:"bytes,2,opt,name=sdk_version,json=sdkVersion" json:"sdk_version,omitempty"`
	// The version of the adapter that communicates with the installed SDK.
	AdapterVersion       *BidRequest_Mobile_InstalledSdk_Version `protobuf:"bytes,3,opt,name=adapter_version,json=adapterVersion" json:"adapter_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *BidRequest_Mobile_InstalledSdk) Reset()         { *m = BidRequest_Mobile_InstalledSdk{} }
func (m *BidRequest_Mobile_InstalledSdk) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile_InstalledSdk) ProtoMessage()    {}
func (*BidRequest_Mobile_InstalledSdk) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 6, 0}
}

func (m *BidRequest_Mobile_InstalledSdk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Mobile_InstalledSdk.Unmarshal(m, b)
}
func (m *BidRequest_Mobile_InstalledSdk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Mobile_InstalledSdk.Marshal(b, m, deterministic)
}
func (m *BidRequest_Mobile_InstalledSdk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Mobile_InstalledSdk.Merge(m, src)
}
func (m *BidRequest_Mobile_InstalledSdk) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Mobile_InstalledSdk.Size(m)
}
func (m *BidRequest_Mobile_InstalledSdk) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Mobile_InstalledSdk.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Mobile_InstalledSdk proto.InternalMessageInfo

func (m *BidRequest_Mobile_InstalledSdk) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidRequest_Mobile_InstalledSdk) GetSdkVersion() *BidRequest_Mobile_InstalledSdk_Version {
	if m != nil {
		return m.SdkVersion
	}
	return nil
}

func (m *BidRequest_Mobile_InstalledSdk) GetAdapterVersion() *BidRequest_Mobile_InstalledSdk_Version {
	if m != nil {
		return m.AdapterVersion
	}
	return nil
}

// Semantic version of the installed SDK and the adapter that communicates
// between the installed SDK and Google's SDK.
type BidRequest_Mobile_InstalledSdk_Version struct {
	Major                *int32   `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Minor                *int32   `protobuf:"varint,2,opt,name=minor" json:"minor,omitempty"`
	Micro                *int32   `protobuf:"varint,3,opt,name=micro" json:"micro,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Mobile_InstalledSdk_Version) Reset() {
	*m = BidRequest_Mobile_InstalledSdk_Version{}
}
func (m *BidRequest_Mobile_InstalledSdk_Version) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Mobile_InstalledSdk_Version) ProtoMessage()    {}
func (*BidRequest_Mobile_InstalledSdk_Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 6, 0, 0}
}

func (m *BidRequest_Mobile_InstalledSdk_Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Mobile_InstalledSdk_Version.Unmarshal(m, b)
}
func (m *BidRequest_Mobile_InstalledSdk_Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Mobile_InstalledSdk_Version.Marshal(b, m, deterministic)
}
func (m *BidRequest_Mobile_InstalledSdk_Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Mobile_InstalledSdk_Version.Merge(m, src)
}
func (m *BidRequest_Mobile_InstalledSdk_Version) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Mobile_InstalledSdk_Version.Size(m)
}
func (m *BidRequest_Mobile_InstalledSdk_Version) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Mobile_InstalledSdk_Version.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Mobile_InstalledSdk_Version proto.InternalMessageInfo

func (m *BidRequest_Mobile_InstalledSdk_Version) GetMajor() int32 {
	if m != nil && m.Major != nil {
		return *m.Major
	}
	return 0
}

func (m *BidRequest_Mobile_InstalledSdk_Version) GetMinor() int32 {
	if m != nil && m.Minor != nil {
		return *m.Minor
	}
	return 0
}

func (m *BidRequest_Mobile_InstalledSdk_Version) GetMicro() int32 {
	if m != nil && m.Micro != nil {
		return *m.Micro
	}
	return 0
}

// Information about the video if this is an in-video ad request.
//
type BidRequest_Video struct {
	Placement *BidRequest_Video_Placement `protobuf:"varint,16,opt,name=placement,enum=BidRequest_Video_Placement,def=0" json:"placement,omitempty"`
	// The URL of the page that the publisher gives Google to describe the video
	// content, with parameters removed.
	DescriptionUrl *string `protobuf:"bytes,10,opt,name=description_url,json=descriptionUrl" json:"description_url,omitempty"`
	// If true, the video is embedded on a page outside the publisher's domain.
	// When this is set, description_url points to a description of the video
	// (as it always does), and the url field in BidRequest is the page in which
	// the video is embedded. For example, a request for an in-stream ad in a
	// Vimeo video shared on Facebook has is_embedded_offsite set. The url field
	// is for a Facebook page and the description_url points to the video on
	// Vimeo.
	IsEmbeddedOffsite *bool                                 `protobuf:"varint,11,opt,name=is_embedded_offsite,json=isEmbeddedOffsite,def=0" json:"is_embedded_offsite,omitempty"`
	PlaybackMethod    *BidRequest_Video_VideoPlaybackMethod `protobuf:"varint,14,opt,name=playback_method,json=playbackMethod,enum=BidRequest_Video_VideoPlaybackMethod,def=0" json:"playback_method,omitempty"`
	// Whether the inventory allows clicking on the video ad to take the user to
	// an advertiser site. Some platforms, notably connected TVs, do not
	// support clicking on video ads, in which case this field is set to false.
	IsClickable *bool `protobuf:"varint,15,opt,name=is_clickable,json=isClickable" json:"is_clickable,omitempty"`
	// The time in milliseconds from the start of the video when the ad will be
	// displayed. 0 means pre-roll and -1 means post-roll. The value is valid
	// only if this param is set. When not set, the display position is unknown.
	VideoadStartDelay *int32 `protobuf:"varint,1,opt,name=videoad_start_delay,json=videoadStartDelay" json:"videoad_start_delay,omitempty"`
	// The maximum duration in milliseconds of the ad that you should return.
	// If this is not set or has value <= 0, any duration is allowed.
	MaxAdDuration *int32 `protobuf:"varint,2,opt,name=max_ad_duration,json=maxAdDuration" json:"max_ad_duration,omitempty"`
	// The minimum duration in milliseconds of the ad that you should return.
	// If this is not set or has value <= 0, there is no minimum duration.
	MinAdDuration *int32 `protobuf:"varint,8,opt,name=min_ad_duration,json=minAdDuration" json:"min_ad_duration,omitempty"`
	// The maximum number of ads in an Adx video pod. A non-zero value indicates
	// that the current ad slot is a video pod that can show multiple video
	// ads. Actual number of video ads shown can be less than or equal to this
	// value but cannot exceed it.
	MaxAdsInPod      *int32                                    `protobuf:"varint,12,opt,name=max_ads_in_pod,json=maxAdsInPod" json:"max_ads_in_pod,omitempty"`
	VideoAdSkippable *BidRequest_Video_SkippableBidRequestType `protobuf:"varint,4,opt,name=video_ad_skippable,json=videoAdSkippable,enum=BidRequest_Video_SkippableBidRequestType,def=0" json:"video_ad_skippable,omitempty"`
	// The maximum duration in milliseconds for the ad you should return, if
	// this ad is skippable (this generally differs from the maximum duration
	// allowed for non-skippable ads). If this is not set or has value <= 0, any
	// duration is allowed.
	SkippableMaxAdDuration *int32 `protobuf:"varint,5,opt,name=skippable_max_ad_duration,json=skippableMaxAdDuration" json:"skippable_max_ad_duration,omitempty"`
	// Array of supported video bid response protocols.
	Protocols               []BidRequest_Video_VideoProtocol    `protobuf:"varint,17,rep,packed,name=protocols,enum=BidRequest_Video_VideoProtocol" json:"protocols,omitempty"`
	AllowedVideoFormats     []BidRequest_Video_VideoFormat      `protobuf:"varint,6,rep,name=allowed_video_formats,json=allowedVideoFormats,enum=BidRequest_Video_VideoFormat" json:"allowed_video_formats,omitempty"`
	CompanionSlot           []*BidRequest_Video_CompanionSlot   `protobuf:"bytes,7,rep,name=companion_slot,json=companionSlot" json:"companion_slot,omitempty"`
	EndCapSupport           *BidRequest_Video_EndCapSupport     `protobuf:"varint,13,opt,name=end_cap_support,json=endCapSupport,enum=BidRequest_Video_EndCapSupport,def=0" json:"end_cap_support,omitempty"`
	ContentAttributes       *BidRequest_Video_ContentAttributes `protobuf:"bytes,9,opt,name=content_attributes,json=contentAttributes" json:"content_attributes,omitempty"`
	DEPRECATEDInventoryType *BidRequest_Video_InventoryType     `protobuf:"varint,3,opt,name=DEPRECATED_inventory_type,json=DEPRECATEDInventoryType,enum=BidRequest_Video_InventoryType,def=0" json:"DEPRECATED_inventory_type,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                            `json:"-"`
	XXX_unrecognized        []byte                              `json:"-"`
	XXX_sizecache           int32                               `json:"-"`
}

func (m *BidRequest_Video) Reset()         { *m = BidRequest_Video{} }
func (m *BidRequest_Video) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Video) ProtoMessage()    {}
func (*BidRequest_Video) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7}
}

func (m *BidRequest_Video) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Video.Unmarshal(m, b)
}
func (m *BidRequest_Video) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Video.Marshal(b, m, deterministic)
}
func (m *BidRequest_Video) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Video.Merge(m, src)
}
func (m *BidRequest_Video) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Video.Size(m)
}
func (m *BidRequest_Video) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Video.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Video proto.InternalMessageInfo

const Default_BidRequest_Video_Placement BidRequest_Video_Placement = BidRequest_Video_UNKNOWN_PLACEMENT
const Default_BidRequest_Video_IsEmbeddedOffsite bool = false
const Default_BidRequest_Video_PlaybackMethod BidRequest_Video_VideoPlaybackMethod = BidRequest_Video_METHOD_UNKNOWN
const Default_BidRequest_Video_VideoAdSkippable BidRequest_Video_SkippableBidRequestType = BidRequest_Video_ALLOW_SKIPPABLE
const Default_BidRequest_Video_EndCapSupport BidRequest_Video_EndCapSupport = BidRequest_Video_END_CAP_NOT_ENABLED
const Default_BidRequest_Video_DEPRECATEDInventoryType BidRequest_Video_InventoryType = BidRequest_Video_WEB_VIDEO

func (m *BidRequest_Video) GetPlacement() BidRequest_Video_Placement {
	if m != nil && m.Placement != nil {
		return *m.Placement
	}
	return Default_BidRequest_Video_Placement
}

func (m *BidRequest_Video) GetDescriptionUrl() string {
	if m != nil && m.DescriptionUrl != nil {
		return *m.DescriptionUrl
	}
	return ""
}

func (m *BidRequest_Video) GetIsEmbeddedOffsite() bool {
	if m != nil && m.IsEmbeddedOffsite != nil {
		return *m.IsEmbeddedOffsite
	}
	return Default_BidRequest_Video_IsEmbeddedOffsite
}

func (m *BidRequest_Video) GetPlaybackMethod() BidRequest_Video_VideoPlaybackMethod {
	if m != nil && m.PlaybackMethod != nil {
		return *m.PlaybackMethod
	}
	return Default_BidRequest_Video_PlaybackMethod
}

func (m *BidRequest_Video) GetIsClickable() bool {
	if m != nil && m.IsClickable != nil {
		return *m.IsClickable
	}
	return false
}

func (m *BidRequest_Video) GetVideoadStartDelay() int32 {
	if m != nil && m.VideoadStartDelay != nil {
		return *m.VideoadStartDelay
	}
	return 0
}

func (m *BidRequest_Video) GetMaxAdDuration() int32 {
	if m != nil && m.MaxAdDuration != nil {
		return *m.MaxAdDuration
	}
	return 0
}

func (m *BidRequest_Video) GetMinAdDuration() int32 {
	if m != nil && m.MinAdDuration != nil {
		return *m.MinAdDuration
	}
	return 0
}

func (m *BidRequest_Video) GetMaxAdsInPod() int32 {
	if m != nil && m.MaxAdsInPod != nil {
		return *m.MaxAdsInPod
	}
	return 0
}

func (m *BidRequest_Video) GetVideoAdSkippable() BidRequest_Video_SkippableBidRequestType {
	if m != nil && m.VideoAdSkippable != nil {
		return *m.VideoAdSkippable
	}
	return Default_BidRequest_Video_VideoAdSkippable
}

func (m *BidRequest_Video) GetSkippableMaxAdDuration() int32 {
	if m != nil && m.SkippableMaxAdDuration != nil {
		return *m.SkippableMaxAdDuration
	}
	return 0
}

func (m *BidRequest_Video) GetProtocols() []BidRequest_Video_VideoProtocol {
	if m != nil {
		return m.Protocols
	}
	return nil
}

func (m *BidRequest_Video) GetAllowedVideoFormats() []BidRequest_Video_VideoFormat {
	if m != nil {
		return m.AllowedVideoFormats
	}
	return nil
}

func (m *BidRequest_Video) GetCompanionSlot() []*BidRequest_Video_CompanionSlot {
	if m != nil {
		return m.CompanionSlot
	}
	return nil
}

func (m *BidRequest_Video) GetEndCapSupport() BidRequest_Video_EndCapSupport {
	if m != nil && m.EndCapSupport != nil {
		return *m.EndCapSupport
	}
	return Default_BidRequest_Video_EndCapSupport
}

func (m *BidRequest_Video) GetContentAttributes() *BidRequest_Video_ContentAttributes {
	if m != nil {
		return m.ContentAttributes
	}
	return nil
}

func (m *BidRequest_Video) GetDEPRECATEDInventoryType() BidRequest_Video_InventoryType {
	if m != nil && m.DEPRECATEDInventoryType != nil {
		return *m.DEPRECATEDInventoryType
	}
	return Default_BidRequest_Video_DEPRECATEDInventoryType
}

// Information about the companion ad slots that can be shown with the
// video. While this is a repeated field there will only be one value in
// most cases. If there are no companion ads available this field will not
// be set.
//
type BidRequest_Video_CompanionSlot struct {
	// These fields represent the available heights and widths in this slot.
	// There will always be the same number heights and widths fields.
	Height               []int32                                         `protobuf:"varint,1,rep,packed,name=height" json:"height,omitempty"`
	Width                []int32                                         `protobuf:"varint,2,rep,packed,name=width" json:"width,omitempty"`
	CreativeFormat       []BidRequest_Video_CompanionSlot_CreativeFormat `protobuf:"varint,3,rep,name=creative_format,json=creativeFormat,enum=BidRequest_Video_CompanionSlot_CreativeFormat" json:"creative_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *BidRequest_Video_CompanionSlot) Reset()         { *m = BidRequest_Video_CompanionSlot{} }
func (m *BidRequest_Video_CompanionSlot) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Video_CompanionSlot) ProtoMessage()    {}
func (*BidRequest_Video_CompanionSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 0}
}

func (m *BidRequest_Video_CompanionSlot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Video_CompanionSlot.Unmarshal(m, b)
}
func (m *BidRequest_Video_CompanionSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Video_CompanionSlot.Marshal(b, m, deterministic)
}
func (m *BidRequest_Video_CompanionSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Video_CompanionSlot.Merge(m, src)
}
func (m *BidRequest_Video_CompanionSlot) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Video_CompanionSlot.Size(m)
}
func (m *BidRequest_Video_CompanionSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Video_CompanionSlot.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Video_CompanionSlot proto.InternalMessageInfo

func (m *BidRequest_Video_CompanionSlot) GetHeight() []int32 {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *BidRequest_Video_CompanionSlot) GetWidth() []int32 {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *BidRequest_Video_CompanionSlot) GetCreativeFormat() []BidRequest_Video_CompanionSlot_CreativeFormat {
	if m != nil {
		return m.CreativeFormat
	}
	return nil
}

// Attributes of the video that the user is viewing, not the video ad.
// These fields are based on the availability of the video metadata from the
// video publisher and may not always be populated.
//
type BidRequest_Video_ContentAttributes struct {
	// The title of the video.
	Title *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	// The duration of the video, in seconds.
	DurationSeconds *int32 `protobuf:"varint,2,opt,name=duration_seconds,json=durationSeconds" json:"duration_seconds,omitempty"`
	// A list of keywords describing the video, extracted from the content
	// management system of the video publisher. There will be no more than 10
	// keywords in this list.
	Keywords             []string `protobuf:"bytes,3,rep,name=keywords" json:"keywords,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_Video_ContentAttributes) Reset()         { *m = BidRequest_Video_ContentAttributes{} }
func (m *BidRequest_Video_ContentAttributes) String() string { return proto.CompactTextString(m) }
func (*BidRequest_Video_ContentAttributes) ProtoMessage()    {}
func (*BidRequest_Video_ContentAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 7, 1}
}

func (m *BidRequest_Video_ContentAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_Video_ContentAttributes.Unmarshal(m, b)
}
func (m *BidRequest_Video_ContentAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_Video_ContentAttributes.Marshal(b, m, deterministic)
}
func (m *BidRequest_Video_ContentAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_Video_ContentAttributes.Merge(m, src)
}
func (m *BidRequest_Video_ContentAttributes) XXX_Size() int {
	return xxx_messageInfo_BidRequest_Video_ContentAttributes.Size(m)
}
func (m *BidRequest_Video_ContentAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_Video_ContentAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_Video_ContentAttributes proto.InternalMessageInfo

func (m *BidRequest_Video_ContentAttributes) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *BidRequest_Video_ContentAttributes) GetDurationSeconds() int32 {
	if m != nil && m.DurationSeconds != nil {
		return *m.DurationSeconds
	}
	return 0
}

func (m *BidRequest_Video_ContentAttributes) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

// -----------------------------------------------------------
// Information about the adslots on the page.
type BidRequest_AdSlot struct {
	// An arbitrarily assigned slot id that is unique on a given page and
	// usually starts counting from 1. You use this to identify which slot to
	// bid on in the BidResponse.
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// A stable identifier for the combination of publisher, ad slot, and page.
	AdBlockKey *uint64 `protobuf:"varint,14,opt,name=ad_block_key,json=adBlockKey" json:"ad_block_key,omitempty"`
	// Set of channels of which this ad slot is a member. A channel is a set of
	// ad slots on a site. You can target a channel (like "the sports section",
	// or "all top banners") to get more fine-grained control over where your ad
	// shows. Channel names are provided by the publisher.
	TargetableChannel []string `protobuf:"bytes,10,rep,name=targetable_channel,json=targetableChannel" json:"targetable_channel,omitempty"`
	// The width and height in pixels of the allowed ad sizes. Most requests
	// allow only a single size, but some allow more than one. Widths and
	// heights are at the same index. For example, if the width values are
	// [728, 300, 468] and the height values are [90, 250, 60], then the allowed
	// formats are 728x90, 300x250, and 468x60.
	//
	// For VAST video ad requests a single width/height pair specifies the
	// Google-detected video player size. If Google cannot detect the player
	// size the publisher-provided player size, if available, is used. For
	// VAST video ads, this size is informational; there is no restriction on
	// the size of the video ad that you can return.
	//
	// For mobile interstitial ads (including ones where video ads are eligible)
	// the first width height pair is the slot size (this is also the video
	// player size for VAST video ads). For many interstitials, this is the
	// screen size. Subsequent pairs are recommended interstitial ad sizes that
	// also meet the requirements for this interstitial.
	Width  []int32 `protobuf:"varint,2,rep,name=width" json:"width,omitempty"`
	Height []int32 `protobuf:"varint,3,rep,name=height" json:"height,omitempty"`
	// The disallowed attribute ids for the ads that can show in this slot. See
	// the publisher-excludable-creative-attributes.txt file in the technical
	// documentation for a list of ids.
	ExcludedAttribute []int32 `protobuf:"varint,4,rep,packed,name=excluded_attribute,json=excludedAttribute" json:"excluded_attribute,omitempty"`
	// The allowed vendor types. See the vendors.txt file in the technical
	// documentation for a list of ids. This field does not apply to deals with
	// block overrides (see https://support.google.com/adxbuyer/answer/6114194).
	AllowedVendorType []int32 `protobuf:"varint,6,rep,packed,name=allowed_vendor_type,json=allowedVendorType" json:"allowed_vendor_type,omitempty"`
	// Information about the providers for whom the publisher has told Google
	// that its EEA users have consented to the use of their personal data for
	// ads personalization. This field will only be populated when regs_gdpr is
	// true.
	ConsentedProvidersSettings *BidRequest_AdSlot_ConsentedProvidersSettings `protobuf:"bytes,42,opt,name=consented_providers_settings,json=consentedProvidersSettings" json:"consented_providers_settings,omitempty"`
	// AdX fills this field solely based on whether the impression will serve to
	// an EEA user, based on information available to Google. It does not
	// constitute legal guidance on GDPR. This field is equivalent to
	// Regs.ext.gdpr in AdX OpenRTB.
	RegsGdpr *bool `protobuf:"varint,43,opt,name=regs_gdpr,json=regsGdpr" json:"regs_gdpr,omitempty"`
	// The disallowed sensitive ad categories. See the
	// ad-sensitive-categories.txt file in the technical documentation for a
	// list of ids. You should enforce these exclusions if you have the ability
	// to classify ads into the listed categories. This field does not apply to
	// deals with block overrides (see
	// https://support.google.com/adxbuyer/answer/6114194).
	ExcludedSensitiveCategory []int32 `protobuf:"varint,7,rep,packed,name=excluded_sensitive_category,json=excludedSensitiveCategory" json:"excluded_sensitive_category,omitempty"`
	// The allowed restricted ad categories for private and open auctions. See
	// the ad-restricted-categories.txt file in the technical documentation for
	// a list of ids. These only apply for private and open auction bids. See
	// the allowed_restricted_category_for_deals field for preferred deals or
	// programmatic guarantees. If you bid with an ad in a restricted category,
	// you MUST ALWAYS declare the category in the bid response regardless of
	// the values in this field.
	AllowedRestrictedCategory []int32 `protobuf:"varint,16,rep,packed,name=allowed_restricted_category,json=allowedRestrictedCategory" json:"allowed_restricted_category,omitempty"`
	// The allowed restricted ad categories for preferred deals or programmatic
	// guarantees. See the ad-restricted-categories.txt file in the technical
	// documentation for a list of ids. These only apply for preferred deals or
	// programmatic guarantees. See the allowed_restricted_category field for
	// private and open auctions. In some cases, restricted categories are only
	// allowed on preferred deals or programmatic guarantees, so this field
	// lists all categories in allowed_restricted_category, and additionally,
	// restricted categories that are only allowed for preferred deals or
	// programmatic guarantees. If you bid with an ad in a restricted category,
	// you MUST ALWAYS declare the category in the bid response regardless of
	// the values in this field.
	AllowedRestrictedCategoryForDeals []int32 `protobuf:"varint,22,rep,packed,name=allowed_restricted_category_for_deals,json=allowedRestrictedCategoryForDeals" json:"allowed_restricted_category_for_deals,omitempty"`
	// List of creative languages allowed by the publisher. The order is
	// arbitrary. The codes are 2 or 5 characters and are documented at
	// https://developers.google.com/adwords/api/docs/appendix/languagecodes.
	// When not set, all languages are allowed.
	AllowedLanguages []string `protobuf:"bytes,27,rep,name=allowed_languages,json=allowedLanguages" json:"allowed_languages,omitempty"`
	// The disallowed ad product categories. See the ad-product-categories.txt
	// file in the technical documentation for a list of ids. You should enforce
	// these exclusions if you have the ability to classify ads into the listed
	// categories. This field does not apply to deals with block overrides (see
	// https://support.google.com/adxbuyer/answer/6114194).
	ExcludedProductCategory []int32 `protobuf:"varint,13,rep,packed,name=excluded_product_category,json=excludedProductCategory" json:"excluded_product_category,omitempty"`
	// Creatives that are disallowed for the impression. Submitting a bid with
	// one of the creatives in this list will result in such bid being filtered
	// before the auction. Please contact your account manager if you would like
	// to enable this feature.
	ExcludedCreatives []*BidRequest_AdSlot_ExcludedCreative `protobuf:"bytes,18,rep,name=excluded_creatives,json=excludedCreatives" json:"excluded_creatives,omitempty"`
	MatchingAdData    []*BidRequest_AdSlot_MatchingAdData   `protobuf:"bytes,9,rep,name=matching_ad_data,json=matchingAdData" json:"matching_ad_data,omitempty"`
	// The publisher settings list ids that apply to this slot. See the RTB
	// Publisher Settings guide at
	// https://developers.google.com/authorized-buyers/rtb/pub-settings-guide
	// for details.
	PublisherSettingsListId []uint64                           `protobuf:"fixed64,15,rep,name=publisher_settings_list_id,json=publisherSettingsListId" json:"publisher_settings_list_id,omitempty"`
	ExchangeBidding         *BidRequest_AdSlot_ExchangeBidding `protobuf:"bytes,28,opt,name=exchange_bidding,json=exchangeBidding" json:"exchange_bidding,omitempty"`
	// The DFP ad unit code (http://support.google.com/dfp_premium/topic/28147)
	// This is currently only set for exchange bidding requests.
	DfpAdUnitCode  *string                           `protobuf:"bytes,33,opt,name=dfp_ad_unit_code,json=dfpAdUnitCode" json:"dfp_ad_unit_code,omitempty"`
	SlotVisibility *BidRequest_AdSlot_SlotVisibility `protobuf:"varint,12,opt,name=slot_visibility,json=slotVisibility,enum=BidRequest_AdSlot_SlotVisibility,def=0" json:"slot_visibility,omitempty"`
	// Viewability percentage for the ad slot. This is an estimate of the
	// likelihood that this slot will be viewable by the end user based on
	// historical and environment data. It is expressed as a percentage in the
	// range of [0, 100] and rounded down to the next multiple of 10. The
	// default value -1 indicates that viewability could not be estimated.
	Viewability *int32 `protobuf:"varint,21,opt,name=viewability,def=-1" json:"viewability,omitempty"`
	// Historical click-through rate for ads served in the ad slot. This is
	// expressed as a fraction in the range [0.0, 1.0]. The default value of
	// -1.0 indicates that historical click-through rate data is not available.
	// This figure does not include data aggregated from AdWords.
	ClickThroughRate *float32 `protobuf:"fixed32,25,opt,name=click_through_rate,json=clickThroughRate,def=-1" json:"click_through_rate,omitempty"`
	// Historical completion rate for video ads served in the ad slot. This is
	// expressed as a fraction in the range [0.0, 1.0]. The default value of
	// -1.0 indicates that historical completion rate data is not available.
	// This field is only applicable to video inventory, and does not include
	// data aggregated from AdWords.
	VideoCompletionRate *float32                               `protobuf:"fixed32,30,opt,name=video_completion_rate,json=videoCompletionRate,def=-1" json:"video_completion_rate,omitempty"`
	IframingState       *BidRequest_AdSlot_IFramingState       `protobuf:"varint,19,opt,name=iframing_state,json=iframingState,enum=BidRequest_AdSlot_IFramingState,def=0" json:"iframing_state,omitempty"`
	IframingDepth       *BidRequest_AdSlot_IFramingDepth       `protobuf:"varint,20,opt,name=iframing_depth,json=iframingDepth,enum=BidRequest_AdSlot_IFramingDepth,def=0" json:"iframing_depth,omitempty"`
	NativeAdTemplate    []*BidRequest_AdSlot_NativeAdTemplate  `protobuf:"bytes,51,rep,name=native_ad_template,json=nativeAdTemplate" json:"native_ad_template,omitempty"`
	NativePlacementType *BidRequest_AdSlot_NativePlacementType `protobuf:"varint,45,opt,name=native_placement_type,json=nativePlacementType,enum=BidRequest_AdSlot_NativePlacementType,def=0" json:"native_placement_type,omitempty"`
	MediationStatus     *BidRequest_AdSlot_MediationStatus     `protobuf:"varint,52,opt,name=mediation_status,json=mediationStatus,enum=BidRequest_AdSlot_MediationStatus,def=0" json:"mediation_status,omitempty"`
	AutoRefresh         *BidRequest_AdSlot_AutoRefresh         `protobuf:"bytes,23,opt,name=auto_refresh,json=autoRefresh" json:"auto_refresh,omitempty"`
	StickySettings      *BidRequest_AdSlot_StickySettings      `protobuf:"bytes,31,opt,name=sticky_settings,json=stickySettings" json:"sticky_settings,omitempty"`
	// Publisher declaration stating that this ad slot may serve on
	// non-browser inventory, like desktop apps.
	NonBrowserSlotSource *BidRequest_AdSlot_NonBrowserSource `protobuf:"varint,34,opt,name=non_browser_slot_source,json=nonBrowserSlotSource,enum=BidRequest_AdSlot_NonBrowserSource,def=0" json:"non_browser_slot_source,omitempty"`
	// Publisher declaration stating that this ad slot will serve an
	// interstitial ad. An interstitial ad covers the content for a period of
	// time.
	IsInterstitialSlot   *bool                                   `protobuf:"varint,35,opt,name=is_interstitial_slot,json=isInterstitialSlot,def=0" json:"is_interstitial_slot,omitempty"`
	Renderer             *BidRequest_AdSlot_Renderer             `protobuf:"varint,26,opt,name=renderer,enum=BidRequest_AdSlot_Renderer,def=0" json:"renderer,omitempty"`
	AmpAdRequestType     *BidRequest_AdSlot_AmpAdRequestType     `protobuf:"varint,29,opt,name=amp_ad_request_type,json=ampAdRequestType,enum=BidRequest_AdSlot_AmpAdRequestType,def=1" json:"amp_ad_request_type,omitempty"`
	IsAmpPage            *BidRequest_AdSlot_AmpPage              `protobuf:"varint,38,opt,name=is_amp_page,json=isAmpPage,enum=BidRequest_AdSlot_AmpPage" json:"is_amp_page,omitempty"`
	AmpAdRequirementType *BidRequest_AdSlot_AmpAdRequirementType `protobuf:"varint,39,opt,name=amp_ad_requirement_type,json=ampAdRequirementType,enum=BidRequest_AdSlot_AmpAdRequirementType" json:"amp_ad_requirement_type,omitempty"`
	// Whether the user receives a reward for viewing the ad. For video ads,
	// typical implementations allow users to read an additional news article
	// for free, receive an extra life in a game, or get a sponsored ad-free
	// music session. The reward is typically distributed after the video ad is
	// completed.
	IsRewarded     *bool                             `protobuf:"varint,32,opt,name=is_rewarded,json=isRewarded,def=0" json:"is_rewarded,omitempty"`
	AllowedAdTypes []BidRequest_AdSlot_AllowedAdType `protobuf:"varint,36,rep,packed,name=allowed_ad_types,json=allowedAdTypes,enum=BidRequest_AdSlot_AllowedAdType" json:"allowed_ad_types,omitempty"`
	// Total number of impressions served to this user (within this specific
	// site or app) in this browsing session, plus 1. A session ends after 30
	// minutes inactivity.  The default value of -1 indicates that the session
	// depth cannot be estimated.
	SessionDepth              *int32                                         `protobuf:"varint,40,opt,name=session_depth,json=sessionDepth,def=-1" json:"session_depth,omitempty"`
	BuyerGeneratedRequestData []*BidRequest_AdSlot_BuyerGeneratedRequestData `protobuf:"bytes,41,rep,name=buyer_generated_request_data,json=buyerGeneratedRequestData" json:"buyer_generated_request_data,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                       `json:"-"`
	XXX_unrecognized          []byte                                         `json:"-"`
	XXX_sizecache             int32                                          `json:"-"`
}

func (m *BidRequest_AdSlot) Reset()         { *m = BidRequest_AdSlot{} }
func (m *BidRequest_AdSlot) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot) ProtoMessage()    {}
func (*BidRequest_AdSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8}
}

func (m *BidRequest_AdSlot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot.Merge(m, src)
}
func (m *BidRequest_AdSlot) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot.Size(m)
}
func (m *BidRequest_AdSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot proto.InternalMessageInfo

const Default_BidRequest_AdSlot_SlotVisibility BidRequest_AdSlot_SlotVisibility = BidRequest_AdSlot_NO_DETECTION
const Default_BidRequest_AdSlot_Viewability int32 = -1
const Default_BidRequest_AdSlot_ClickThroughRate float32 = -1
const Default_BidRequest_AdSlot_VideoCompletionRate float32 = -1
const Default_BidRequest_AdSlot_IframingState BidRequest_AdSlot_IFramingState = BidRequest_AdSlot_UNKNOWN_IFRAME_STATE
const Default_BidRequest_AdSlot_IframingDepth BidRequest_AdSlot_IFramingDepth = BidRequest_AdSlot_UNKNOWN_IFRAME_DEPTH
const Default_BidRequest_AdSlot_NativePlacementType BidRequest_AdSlot_NativePlacementType = BidRequest_AdSlot_PLACEMENT_UNKNOWN
const Default_BidRequest_AdSlot_MediationStatus BidRequest_AdSlot_MediationStatus = BidRequest_AdSlot_UNKNOWN
const Default_BidRequest_AdSlot_NonBrowserSlotSource BidRequest_AdSlot_NonBrowserSource = BidRequest_AdSlot_UNDECLARED_SOURCE
const Default_BidRequest_AdSlot_IsInterstitialSlot bool = false
const Default_BidRequest_AdSlot_Renderer BidRequest_AdSlot_Renderer = BidRequest_AdSlot_UNKNOWN_RENDERER
const Default_BidRequest_AdSlot_AmpAdRequestType BidRequest_AdSlot_AmpAdRequestType = BidRequest_AdSlot_NON_AMP_PAGE
const Default_BidRequest_AdSlot_IsRewarded bool = false
const Default_BidRequest_AdSlot_SessionDepth int32 = -1

func (m *BidRequest_AdSlot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidRequest_AdSlot) GetAdBlockKey() uint64 {
	if m != nil && m.AdBlockKey != nil {
		return *m.AdBlockKey
	}
	return 0
}

func (m *BidRequest_AdSlot) GetTargetableChannel() []string {
	if m != nil {
		return m.TargetableChannel
	}
	return nil
}

func (m *BidRequest_AdSlot) GetWidth() []int32 {
	if m != nil {
		return m.Width
	}
	return nil
}

func (m *BidRequest_AdSlot) GetHeight() []int32 {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *BidRequest_AdSlot) GetExcludedAttribute() []int32 {
	if m != nil {
		return m.ExcludedAttribute
	}
	return nil
}

func (m *BidRequest_AdSlot) GetAllowedVendorType() []int32 {
	if m != nil {
		return m.AllowedVendorType
	}
	return nil
}

func (m *BidRequest_AdSlot) GetConsentedProvidersSettings() *BidRequest_AdSlot_ConsentedProvidersSettings {
	if m != nil {
		return m.ConsentedProvidersSettings
	}
	return nil
}

func (m *BidRequest_AdSlot) GetRegsGdpr() bool {
	if m != nil && m.RegsGdpr != nil {
		return *m.RegsGdpr
	}
	return false
}

func (m *BidRequest_AdSlot) GetExcludedSensitiveCategory() []int32 {
	if m != nil {
		return m.ExcludedSensitiveCategory
	}
	return nil
}

func (m *BidRequest_AdSlot) GetAllowedRestrictedCategory() []int32 {
	if m != nil {
		return m.AllowedRestrictedCategory
	}
	return nil
}

func (m *BidRequest_AdSlot) GetAllowedRestrictedCategoryForDeals() []int32 {
	if m != nil {
		return m.AllowedRestrictedCategoryForDeals
	}
	return nil
}

func (m *BidRequest_AdSlot) GetAllowedLanguages() []string {
	if m != nil {
		return m.AllowedLanguages
	}
	return nil
}

func (m *BidRequest_AdSlot) GetExcludedProductCategory() []int32 {
	if m != nil {
		return m.ExcludedProductCategory
	}
	return nil
}

func (m *BidRequest_AdSlot) GetExcludedCreatives() []*BidRequest_AdSlot_ExcludedCreative {
	if m != nil {
		return m.ExcludedCreatives
	}
	return nil
}

func (m *BidRequest_AdSlot) GetMatchingAdData() []*BidRequest_AdSlot_MatchingAdData {
	if m != nil {
		return m.MatchingAdData
	}
	return nil
}

func (m *BidRequest_AdSlot) GetPublisherSettingsListId() []uint64 {
	if m != nil {
		return m.PublisherSettingsListId
	}
	return nil
}

func (m *BidRequest_AdSlot) GetExchangeBidding() *BidRequest_AdSlot_ExchangeBidding {
	if m != nil {
		return m.ExchangeBidding
	}
	return nil
}

func (m *BidRequest_AdSlot) GetDfpAdUnitCode() string {
	if m != nil && m.DfpAdUnitCode != nil {
		return *m.DfpAdUnitCode
	}
	return ""
}

func (m *BidRequest_AdSlot) GetSlotVisibility() BidRequest_AdSlot_SlotVisibility {
	if m != nil && m.SlotVisibility != nil {
		return *m.SlotVisibility
	}
	return Default_BidRequest_AdSlot_SlotVisibility
}

func (m *BidRequest_AdSlot) GetViewability() int32 {
	if m != nil && m.Viewability != nil {
		return *m.Viewability
	}
	return Default_BidRequest_AdSlot_Viewability
}

func (m *BidRequest_AdSlot) GetClickThroughRate() float32 {
	if m != nil && m.ClickThroughRate != nil {
		return *m.ClickThroughRate
	}
	return Default_BidRequest_AdSlot_ClickThroughRate
}

func (m *BidRequest_AdSlot) GetVideoCompletionRate() float32 {
	if m != nil && m.VideoCompletionRate != nil {
		return *m.VideoCompletionRate
	}
	return Default_BidRequest_AdSlot_VideoCompletionRate
}

func (m *BidRequest_AdSlot) GetIframingState() BidRequest_AdSlot_IFramingState {
	if m != nil && m.IframingState != nil {
		return *m.IframingState
	}
	return Default_BidRequest_AdSlot_IframingState
}

func (m *BidRequest_AdSlot) GetIframingDepth() BidRequest_AdSlot_IFramingDepth {
	if m != nil && m.IframingDepth != nil {
		return *m.IframingDepth
	}
	return Default_BidRequest_AdSlot_IframingDepth
}

func (m *BidRequest_AdSlot) GetNativeAdTemplate() []*BidRequest_AdSlot_NativeAdTemplate {
	if m != nil {
		return m.NativeAdTemplate
	}
	return nil
}

func (m *BidRequest_AdSlot) GetNativePlacementType() BidRequest_AdSlot_NativePlacementType {
	if m != nil && m.NativePlacementType != nil {
		return *m.NativePlacementType
	}
	return Default_BidRequest_AdSlot_NativePlacementType
}

func (m *BidRequest_AdSlot) GetMediationStatus() BidRequest_AdSlot_MediationStatus {
	if m != nil && m.MediationStatus != nil {
		return *m.MediationStatus
	}
	return Default_BidRequest_AdSlot_MediationStatus
}

func (m *BidRequest_AdSlot) GetAutoRefresh() *BidRequest_AdSlot_AutoRefresh {
	if m != nil {
		return m.AutoRefresh
	}
	return nil
}

func (m *BidRequest_AdSlot) GetStickySettings() *BidRequest_AdSlot_StickySettings {
	if m != nil {
		return m.StickySettings
	}
	return nil
}

func (m *BidRequest_AdSlot) GetNonBrowserSlotSource() BidRequest_AdSlot_NonBrowserSource {
	if m != nil && m.NonBrowserSlotSource != nil {
		return *m.NonBrowserSlotSource
	}
	return Default_BidRequest_AdSlot_NonBrowserSlotSource
}

func (m *BidRequest_AdSlot) GetIsInterstitialSlot() bool {
	if m != nil && m.IsInterstitialSlot != nil {
		return *m.IsInterstitialSlot
	}
	return Default_BidRequest_AdSlot_IsInterstitialSlot
}

func (m *BidRequest_AdSlot) GetRenderer() BidRequest_AdSlot_Renderer {
	if m != nil && m.Renderer != nil {
		return *m.Renderer
	}
	return Default_BidRequest_AdSlot_Renderer
}

func (m *BidRequest_AdSlot) GetAmpAdRequestType() BidRequest_AdSlot_AmpAdRequestType {
	if m != nil && m.AmpAdRequestType != nil {
		return *m.AmpAdRequestType
	}
	return Default_BidRequest_AdSlot_AmpAdRequestType
}

func (m *BidRequest_AdSlot) GetIsAmpPage() BidRequest_AdSlot_AmpPage {
	if m != nil && m.IsAmpPage != nil {
		return *m.IsAmpPage
	}
	return BidRequest_AdSlot_UNKNOWN_AMP_PAGE
}

func (m *BidRequest_AdSlot) GetAmpAdRequirementType() BidRequest_AdSlot_AmpAdRequirementType {
	if m != nil && m.AmpAdRequirementType != nil {
		return *m.AmpAdRequirementType
	}
	return BidRequest_AdSlot_UNKNOWN_AMP_AD_REQUIREMENT_TYPE
}

func (m *BidRequest_AdSlot) GetIsRewarded() bool {
	if m != nil && m.IsRewarded != nil {
		return *m.IsRewarded
	}
	return Default_BidRequest_AdSlot_IsRewarded
}

func (m *BidRequest_AdSlot) GetAllowedAdTypes() []BidRequest_AdSlot_AllowedAdType {
	if m != nil {
		return m.AllowedAdTypes
	}
	return nil
}

func (m *BidRequest_AdSlot) GetSessionDepth() int32 {
	if m != nil && m.SessionDepth != nil {
		return *m.SessionDepth
	}
	return Default_BidRequest_AdSlot_SessionDepth
}

func (m *BidRequest_AdSlot) GetBuyerGeneratedRequestData() []*BidRequest_AdSlot_BuyerGeneratedRequestData {
	if m != nil {
		return m.BuyerGeneratedRequestData
	}
	return nil
}

type BidRequest_AdSlot_ConsentedProvidersSettings struct {
	// Set of IDs corresponding to providers for whom the publisher has told
	// Google that its EEA users have consented to the use of their personal
	// data for ads personalization. A mapping of provider ID to provider name
	// is posted at providers.csv.
	ConsentedProviders   []int64  `protobuf:"varint,2,rep,packed,name=consented_providers,json=consentedProviders" json:"consented_providers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_ConsentedProvidersSettings) Reset() {
	*m = BidRequest_AdSlot_ConsentedProvidersSettings{}
}
func (m *BidRequest_AdSlot_ConsentedProvidersSettings) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_ConsentedProvidersSettings) ProtoMessage() {}
func (*BidRequest_AdSlot_ConsentedProvidersSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 0}
}

func (m *BidRequest_AdSlot_ConsentedProvidersSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_ConsentedProvidersSettings.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_ConsentedProvidersSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_ConsentedProvidersSettings.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_ConsentedProvidersSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_ConsentedProvidersSettings.Merge(m, src)
}
func (m *BidRequest_AdSlot_ConsentedProvidersSettings) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_ConsentedProvidersSettings.Size(m)
}
func (m *BidRequest_AdSlot_ConsentedProvidersSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_ConsentedProvidersSettings.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_ConsentedProvidersSettings proto.InternalMessageInfo

func (m *BidRequest_AdSlot_ConsentedProvidersSettings) GetConsentedProviders() []int64 {
	if m != nil {
		return m.ConsentedProviders
	}
	return nil
}

// A creative that is disallowed to bid on this impression due to Ad
// Exchange policies or creative disapproval, excluded creative attributes,
// excluded product or sensitive categories, allowed vendor types,
// restricted categories or languages applicable to the bid request.
type BidRequest_AdSlot_ExcludedCreative struct {
	// Buyer creative ID of the disallowed creative.
	BuyerCreativeId      *string  `protobuf:"bytes,1,opt,name=buyer_creative_id,json=buyerCreativeId" json:"buyer_creative_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_ExcludedCreative) Reset()         { *m = BidRequest_AdSlot_ExcludedCreative{} }
func (m *BidRequest_AdSlot_ExcludedCreative) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_ExcludedCreative) ProtoMessage()    {}
func (*BidRequest_AdSlot_ExcludedCreative) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 1}
}

func (m *BidRequest_AdSlot_ExcludedCreative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_ExcludedCreative.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_ExcludedCreative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_ExcludedCreative.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_ExcludedCreative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_ExcludedCreative.Merge(m, src)
}
func (m *BidRequest_AdSlot_ExcludedCreative) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_ExcludedCreative.Size(m)
}
func (m *BidRequest_AdSlot_ExcludedCreative) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_ExcludedCreative.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_ExcludedCreative proto.InternalMessageInfo

func (m *BidRequest_AdSlot_ExcludedCreative) GetBuyerCreativeId() string {
	if m != nil && m.BuyerCreativeId != nil {
		return *m.BuyerCreativeId
	}
	return ""
}

// Information about the pre-targeting configs that matched.
//
type BidRequest_AdSlot_MatchingAdData struct {
	// The billing ids corresponding to the pretargeting configs that matched.
	BillingId []int64 `protobuf:"varint,2,rep,name=billing_id,json=billingId" json:"billing_id,omitempty"`
	// The minimum CPM value that you can bid to not be filtered before the
	// auction. This may be a global minimum, or it may be a minimum set by
	// the publisher. The value is in micros of your account currency.
	MinimumCpmMicros *int64 `protobuf:"varint,5,opt,name=minimum_cpm_micros,json=minimumCpmMicros" json:"minimum_cpm_micros,omitempty"`
	// This field is deprecated and will no longer be populated.
	DEPRECATEDPricingRule []*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule `protobuf:"bytes,7,rep,name=DEPRECATED_pricing_rule,json=DEPRECATEDPricingRule" json:"DEPRECATED_pricing_rule,omitempty"`
	DirectDeal            []*BidRequest_AdSlot_MatchingAdData_DirectDeal       `protobuf:"bytes,6,rep,name=direct_deal,json=directDeal" json:"direct_deal,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                             `json:"-"`
	XXX_unrecognized      []byte                                               `json:"-"`
	XXX_sizecache         int32                                                `json:"-"`
}

func (m *BidRequest_AdSlot_MatchingAdData) Reset()         { *m = BidRequest_AdSlot_MatchingAdData{} }
func (m *BidRequest_AdSlot_MatchingAdData) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_MatchingAdData) ProtoMessage()    {}
func (*BidRequest_AdSlot_MatchingAdData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 2}
}

func (m *BidRequest_AdSlot_MatchingAdData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_MatchingAdData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_MatchingAdData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_MatchingAdData.Merge(m, src)
}
func (m *BidRequest_AdSlot_MatchingAdData) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData.Size(m)
}
func (m *BidRequest_AdSlot_MatchingAdData) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_MatchingAdData.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_MatchingAdData proto.InternalMessageInfo

func (m *BidRequest_AdSlot_MatchingAdData) GetBillingId() []int64 {
	if m != nil {
		return m.BillingId
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData) GetMinimumCpmMicros() int64 {
	if m != nil && m.MinimumCpmMicros != nil {
		return *m.MinimumCpmMicros
	}
	return 0
}

func (m *BidRequest_AdSlot_MatchingAdData) GetDEPRECATEDPricingRule() []*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule {
	if m != nil {
		return m.DEPRECATEDPricingRule
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData) GetDirectDeal() []*BidRequest_AdSlot_MatchingAdData_DirectDeal {
	if m != nil {
		return m.DirectDeal
	}
	return nil
}

// This message is deprecated.
type BidRequest_AdSlot_MatchingAdData_BuyerPricingRule struct {
	// Only one of the included_advertisers and excluded_advertisers fields
	// can be set in a rule. See advertisers.txt file in the technical
	// documentation for a list of ids.
	IncludedAdvertisers []int64 `protobuf:"varint,1,rep,name=included_advertisers,json=includedAdvertisers" json:"included_advertisers,omitempty"`
	ExcludedAdvertisers []int64 `protobuf:"varint,2,rep,name=excluded_advertisers,json=excludedAdvertisers" json:"excluded_advertisers,omitempty"`
	// Only one of the included_agencies and excluded_agencies fields can be
	// set in a rule. See agencies.txt file in the technical documentation
	// for a list of ids.
	IncludedAgencies []int64 `protobuf:"varint,3,rep,name=included_agencies,json=includedAgencies" json:"included_agencies,omitempty"`
	ExcludedAgencies []int64 `protobuf:"varint,4,rep,name=excluded_agencies,json=excludedAgencies" json:"excluded_agencies,omitempty"`
	// Only one of the blocked and minimum_cpm_micros can be set in a rule.
	// If set to true, indicates that the specified advertisers/agencies are
	// blocked from bidding.
	Blocked *bool `protobuf:"varint,5,opt,name=blocked" json:"blocked,omitempty"`
	// Minimum CPM value that you can bid to not be filtered before the
	// auction. The value is in micros of the bidder account currency.
	MinimumCpmMicros     *int64   `protobuf:"varint,6,opt,name=minimum_cpm_micros,json=minimumCpmMicros" json:"minimum_cpm_micros,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) Reset() {
	*m = BidRequest_AdSlot_MatchingAdData_BuyerPricingRule{}
}
func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) ProtoMessage() {}
func (*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 2, 0}
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_BuyerPricingRule.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_BuyerPricingRule.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_BuyerPricingRule.Merge(m, src)
}
func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_BuyerPricingRule.Size(m)
}
func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_BuyerPricingRule.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_BuyerPricingRule proto.InternalMessageInfo

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetIncludedAdvertisers() []int64 {
	if m != nil {
		return m.IncludedAdvertisers
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetExcludedAdvertisers() []int64 {
	if m != nil {
		return m.ExcludedAdvertisers
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetIncludedAgencies() []int64 {
	if m != nil {
		return m.IncludedAgencies
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetExcludedAgencies() []int64 {
	if m != nil {
		return m.ExcludedAgencies
	}
	return nil
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetBlocked() bool {
	if m != nil && m.Blocked != nil {
		return *m.Blocked
	}
	return false
}

func (m *BidRequest_AdSlot_MatchingAdData_BuyerPricingRule) GetMinimumCpmMicros() int64 {
	if m != nil && m.MinimumCpmMicros != nil {
		return *m.MinimumCpmMicros
	}
	return 0
}

// Information about any deals that matched for this inventory.
//
type BidRequest_AdSlot_MatchingAdData_DirectDeal struct {
	// An id identifying the deal.
	DirectDealId *int64 `protobuf:"varint,1,opt,name=direct_deal_id,json=directDealId" json:"direct_deal_id,omitempty"`
	// For deal_type=PREFERRED_DEAL or deal_type=PROGRAMMATIC_GUARANTEED,
	// you must bid at least fixed_cpm_micros (in micros of your account
	// currency) in order to participate in the deal. If you win, you will
	// be charged fixed_cpm_micros. For deal_type=PRIVATE_AUCTION or
	// deal_type=AUCTION_PACKAGE you must bid at least fixed_cpm_micros and
	// you pay the second price. Bidding higher CPM than fixed_cpm_micros
	// will increase your chance to win when deal_type=PRIVATE_AUCTION or
	// deal_type=AUCTION_PACKAGE, however it will not increase your chance
	// to win for other types of deals.
	FixedCpmMicros *int64                                                `protobuf:"varint,2,opt,name=fixed_cpm_micros,json=fixedCpmMicros" json:"fixed_cpm_micros,omitempty"`
	DealType       *BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType `protobuf:"varint,3,opt,name=deal_type,json=dealType,enum=BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType,def=0" json:"deal_type,omitempty"`
	// Whether the publisher has exempted this deal from configured blocks.
	// This setting does not override AdX policies or Ad Review Center
	// decisions.
	PublisherBlocksOverridden *bool `protobuf:"varint,4,opt,name=publisher_blocks_overridden,json=publisherBlocksOverridden,def=0" json:"publisher_blocks_overridden,omitempty"`
	// This is deprecated. Please ignore.
	DEPRECATEDRemainingImpressionsToBuy *int64 `protobuf:"varint,6,opt,name=DEPRECATED_remaining_impressions_to_buy,json=DEPRECATEDRemainingImpressionsToBuy" json:"DEPRECATED_remaining_impressions_to_buy,omitempty"`
	// Value between 0 and 1 only set for Programmatic Guaranteed deals.
	// Buyers are required to bid if must_bid_level = 1 and can decide
	// whether to bid if must_bid_level < 1.
	MustBidLevel         *float64 `protobuf:"fixed64,7,opt,name=must_bid_level,json=mustBidLevel,def=1" json:"must_bid_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) Reset() {
	*m = BidRequest_AdSlot_MatchingAdData_DirectDeal{}
}
func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_MatchingAdData_DirectDeal) ProtoMessage() {}
func (*BidRequest_AdSlot_MatchingAdData_DirectDeal) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 2, 1}
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_DirectDeal.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_DirectDeal.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_DirectDeal.Merge(m, src)
}
func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_DirectDeal.Size(m)
}
func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_DirectDeal.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_MatchingAdData_DirectDeal proto.InternalMessageInfo

const Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType = BidRequest_AdSlot_MatchingAdData_DirectDeal_UNKNOWN_DEAL_TYPE
const Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_PublisherBlocksOverridden bool = false
const Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_MustBidLevel float64 = 1

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetDirectDealId() int64 {
	if m != nil && m.DirectDealId != nil {
		return *m.DirectDealId
	}
	return 0
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetFixedCpmMicros() int64 {
	if m != nil && m.FixedCpmMicros != nil {
		return *m.FixedCpmMicros
	}
	return 0
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetDealType() BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType {
	if m != nil && m.DealType != nil {
		return *m.DealType
	}
	return Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetPublisherBlocksOverridden() bool {
	if m != nil && m.PublisherBlocksOverridden != nil {
		return *m.PublisherBlocksOverridden
	}
	return Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_PublisherBlocksOverridden
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetDEPRECATEDRemainingImpressionsToBuy() int64 {
	if m != nil && m.DEPRECATEDRemainingImpressionsToBuy != nil {
		return *m.DEPRECATEDRemainingImpressionsToBuy
	}
	return 0
}

func (m *BidRequest_AdSlot_MatchingAdData_DirectDeal) GetMustBidLevel() float64 {
	if m != nil && m.MustBidLevel != nil {
		return *m.MustBidLevel
	}
	return Default_BidRequest_AdSlot_MatchingAdData_DirectDeal_MustBidLevel
}

// Parameters related to exchange bidding (third party exchanges doing
// real-time bidding on DFP). This is never populated in calls to AdX
// real-time bidders.
//
type BidRequest_AdSlot_ExchangeBidding struct {
	// UTF8 strings optionally provided by the publisher as part of their
	// matching yield group configurations in the DFP UI. The format is
	// arbitrary and should be agreed upon by the publisher and the exchange
	// bidder.
	PublisherParameter []string `protobuf:"bytes,1,rep,name=publisher_parameter,json=publisherParameter" json:"publisher_parameter,omitempty"`
	// Repeated KeyValue pairs to be sent from the publisher to the
	// exchange bidder.
	KeyValue             []*BidRequest_KeyValue `protobuf:"bytes,3,rep,name=key_value,json=keyValue" json:"key_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *BidRequest_AdSlot_ExchangeBidding) Reset()         { *m = BidRequest_AdSlot_ExchangeBidding{} }
func (m *BidRequest_AdSlot_ExchangeBidding) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_ExchangeBidding) ProtoMessage()    {}
func (*BidRequest_AdSlot_ExchangeBidding) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 3}
}

func (m *BidRequest_AdSlot_ExchangeBidding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_ExchangeBidding.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_ExchangeBidding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_ExchangeBidding.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_ExchangeBidding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_ExchangeBidding.Merge(m, src)
}
func (m *BidRequest_AdSlot_ExchangeBidding) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_ExchangeBidding.Size(m)
}
func (m *BidRequest_AdSlot_ExchangeBidding) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_ExchangeBidding.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_ExchangeBidding proto.InternalMessageInfo

func (m *BidRequest_AdSlot_ExchangeBidding) GetPublisherParameter() []string {
	if m != nil {
		return m.PublisherParameter
	}
	return nil
}

func (m *BidRequest_AdSlot_ExchangeBidding) GetKeyValue() []*BidRequest_KeyValue {
	if m != nil {
		return m.KeyValue
	}
	return nil
}

// A native ad consists of pieces that are rendered by the publisher. A
// publisher may support multiple distinct native ad templates. If the
// request also allows banners or videos, you can respond with other
// types of ads by setting html_snippet or video_url instead. If only
// native templates exist, you must set the native_ad field in any
// response you send.
//
type BidRequest_AdSlot_NativeAdTemplate struct {
	// Bitfield describing which fields are required by the publisher. Bid
	// responses with no value for these fields will be rejected. Click and
	// view tracking urls are always implicitly required.
	RequiredFields *int64 `protobuf:"varint,1,opt,name=required_fields,json=requiredFields" json:"required_fields,omitempty"`
	// Bitfield describing which fields are recommended by the publisher. All
	// recommended fields are supported, but not all recommended fields are
	// required.
	RecommendedFields *int64 `protobuf:"varint,2,opt,name=recommended_fields,json=recommendedFields" json:"recommended_fields,omitempty"`
	// max_safe_length indicates the maximum number of Unicode characters that
	// are guaranteed to be shown without truncation. Longer strings may be
	// truncated and ellipsized by Ad Exchange or the publisher during
	// rendering.
	HeadlineMaxSafeLength     *int32 `protobuf:"varint,3,opt,name=headline_max_safe_length,json=headlineMaxSafeLength" json:"headline_max_safe_length,omitempty"`
	BodyMaxSafeLength         *int32 `protobuf:"varint,4,opt,name=body_max_safe_length,json=bodyMaxSafeLength" json:"body_max_safe_length,omitempty"`
	CallToActionMaxSafeLength *int32 `protobuf:"varint,5,opt,name=call_to_action_max_safe_length,json=callToActionMaxSafeLength" json:"call_to_action_max_safe_length,omitempty"`
	AdvertiserMaxSafeLength   *int32 `protobuf:"varint,6,opt,name=advertiser_max_safe_length,json=advertiserMaxSafeLength" json:"advertiser_max_safe_length,omitempty"`
	// This field is deprecated.
	DEPRECATEDStoreMaxSafeLength *int32 `protobuf:"varint,14,opt,name=DEPRECATED_store_max_safe_length,json=DEPRECATEDStoreMaxSafeLength" json:"DEPRECATED_store_max_safe_length,omitempty"`
	PriceMaxSafeLength           *int32 `protobuf:"varint,15,opt,name=price_max_safe_length,json=priceMaxSafeLength" json:"price_max_safe_length,omitempty"`
	// The width and height from which to calculate the required aspect ratio.
	// You can provide a larger image in the response. Images that have aspect
	// ratios substantially different than those implied by the height and
	// width may be filtered.
	ImageWidth    *int32 `protobuf:"varint,7,opt,name=image_width,json=imageWidth" json:"image_width,omitempty"`
	ImageHeight   *int32 `protobuf:"varint,8,opt,name=image_height,json=imageHeight" json:"image_height,omitempty"`
	LogoWidth     *int32 `protobuf:"varint,9,opt,name=logo_width,json=logoWidth" json:"logo_width,omitempty"`
	LogoHeight    *int32 `protobuf:"varint,10,opt,name=logo_height,json=logoHeight" json:"logo_height,omitempty"`
	AppIconWidth  *int32 `protobuf:"varint,11,opt,name=app_icon_width,json=appIconWidth" json:"app_icon_width,omitempty"`
	AppIconHeight *int32 `protobuf:"varint,12,opt,name=app_icon_height,json=appIconHeight" json:"app_icon_height,omitempty"`
	// Globally distinct id for the specific style, HTML, and CSS with which
	// the native ad is rendered.
	StyleId         *int32                                         `protobuf:"varint,16,opt,name=style_id,json=styleId" json:"style_id,omitempty"`
	StyleLayoutType *BidRequest_AdSlot_NativeAdTemplate_LayoutType `protobuf:"varint,17,opt,name=style_layout_type,json=styleLayoutType,enum=BidRequest_AdSlot_NativeAdTemplate_LayoutType,def=0" json:"style_layout_type,omitempty"`
	// If the style_layout_type is Pixel, width and height of the
	// entire native ad after rendering. If the style_layout_type is
	// Fluid, the style_height and style_width may optionally
	// not be populated.
	StyleHeight          *int32   `protobuf:"varint,18,opt,name=style_height,json=styleHeight" json:"style_height,omitempty"`
	StyleWidth           *int32   `protobuf:"varint,19,opt,name=style_width,json=styleWidth" json:"style_width,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_NativeAdTemplate) Reset()         { *m = BidRequest_AdSlot_NativeAdTemplate{} }
func (m *BidRequest_AdSlot_NativeAdTemplate) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_NativeAdTemplate) ProtoMessage()    {}
func (*BidRequest_AdSlot_NativeAdTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 4}
}

func (m *BidRequest_AdSlot_NativeAdTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_NativeAdTemplate.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_NativeAdTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_NativeAdTemplate.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_NativeAdTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_NativeAdTemplate.Merge(m, src)
}
func (m *BidRequest_AdSlot_NativeAdTemplate) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_NativeAdTemplate.Size(m)
}
func (m *BidRequest_AdSlot_NativeAdTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_NativeAdTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_NativeAdTemplate proto.InternalMessageInfo

const Default_BidRequest_AdSlot_NativeAdTemplate_StyleLayoutType BidRequest_AdSlot_NativeAdTemplate_LayoutType = BidRequest_AdSlot_NativeAdTemplate_PIXEL

func (m *BidRequest_AdSlot_NativeAdTemplate) GetRequiredFields() int64 {
	if m != nil && m.RequiredFields != nil {
		return *m.RequiredFields
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetRecommendedFields() int64 {
	if m != nil && m.RecommendedFields != nil {
		return *m.RecommendedFields
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetHeadlineMaxSafeLength() int32 {
	if m != nil && m.HeadlineMaxSafeLength != nil {
		return *m.HeadlineMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetBodyMaxSafeLength() int32 {
	if m != nil && m.BodyMaxSafeLength != nil {
		return *m.BodyMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetCallToActionMaxSafeLength() int32 {
	if m != nil && m.CallToActionMaxSafeLength != nil {
		return *m.CallToActionMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetAdvertiserMaxSafeLength() int32 {
	if m != nil && m.AdvertiserMaxSafeLength != nil {
		return *m.AdvertiserMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetDEPRECATEDStoreMaxSafeLength() int32 {
	if m != nil && m.DEPRECATEDStoreMaxSafeLength != nil {
		return *m.DEPRECATEDStoreMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetPriceMaxSafeLength() int32 {
	if m != nil && m.PriceMaxSafeLength != nil {
		return *m.PriceMaxSafeLength
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetImageWidth() int32 {
	if m != nil && m.ImageWidth != nil {
		return *m.ImageWidth
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetImageHeight() int32 {
	if m != nil && m.ImageHeight != nil {
		return *m.ImageHeight
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetLogoWidth() int32 {
	if m != nil && m.LogoWidth != nil {
		return *m.LogoWidth
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetLogoHeight() int32 {
	if m != nil && m.LogoHeight != nil {
		return *m.LogoHeight
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetAppIconWidth() int32 {
	if m != nil && m.AppIconWidth != nil {
		return *m.AppIconWidth
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetAppIconHeight() int32 {
	if m != nil && m.AppIconHeight != nil {
		return *m.AppIconHeight
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetStyleId() int32 {
	if m != nil && m.StyleId != nil {
		return *m.StyleId
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetStyleLayoutType() BidRequest_AdSlot_NativeAdTemplate_LayoutType {
	if m != nil && m.StyleLayoutType != nil {
		return *m.StyleLayoutType
	}
	return Default_BidRequest_AdSlot_NativeAdTemplate_StyleLayoutType
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetStyleHeight() int32 {
	if m != nil && m.StyleHeight != nil {
		return *m.StyleHeight
	}
	return 0
}

func (m *BidRequest_AdSlot_NativeAdTemplate) GetStyleWidth() int32 {
	if m != nil && m.StyleWidth != nil {
		return *m.StyleWidth
	}
	return 0
}

// Auto refresh settings.
type BidRequest_AdSlot_AutoRefresh struct {
	// The auto-refresh settings that the publisher has on this
	// inventory. This is repeated because publishers may
	// do multiple types of auto refresh on one piece of inventory.
	RefreshSettings []*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings `protobuf:"bytes,1,rep,name=refresh_settings,json=refreshSettings" json:"refresh_settings,omitempty"`
	// The number of times this ad slot had been refreshed since last page
	// load.
	RefreshCount         *int32   `protobuf:"varint,2,opt,name=refresh_count,json=refreshCount,def=0" json:"refresh_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_AutoRefresh) Reset()         { *m = BidRequest_AdSlot_AutoRefresh{} }
func (m *BidRequest_AdSlot_AutoRefresh) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_AutoRefresh) ProtoMessage()    {}
func (*BidRequest_AdSlot_AutoRefresh) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 5}
}

func (m *BidRequest_AdSlot_AutoRefresh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_AutoRefresh.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_AutoRefresh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_AutoRefresh.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_AutoRefresh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_AutoRefresh.Merge(m, src)
}
func (m *BidRequest_AdSlot_AutoRefresh) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_AutoRefresh.Size(m)
}
func (m *BidRequest_AdSlot_AutoRefresh) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_AutoRefresh.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_AutoRefresh proto.InternalMessageInfo

const Default_BidRequest_AdSlot_AutoRefresh_RefreshCount int32 = 0

func (m *BidRequest_AdSlot_AutoRefresh) GetRefreshSettings() []*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings {
	if m != nil {
		return m.RefreshSettings
	}
	return nil
}

func (m *BidRequest_AdSlot_AutoRefresh) GetRefreshCount() int32 {
	if m != nil && m.RefreshCount != nil {
		return *m.RefreshCount
	}
	return Default_BidRequest_AdSlot_AutoRefresh_RefreshCount
}

type BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings struct {
	// The type of the declared auto refresh.
	RefreshType *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType `protobuf:"varint,1,opt,name=refresh_type,json=refreshType,enum=BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType,def=0" json:"refresh_type,omitempty"`
	// The minimum refresh interval. This applies to all refresh types.
	MinRefreshIntervalSeconds *int32   `protobuf:"varint,2,opt,name=min_refresh_interval_seconds,json=minRefreshIntervalSeconds" json:"min_refresh_interval_seconds,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) Reset() {
	*m = BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings{}
}
func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) ProtoMessage() {}
func (*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 5, 0}
}

func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings.Merge(m, src)
}
func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings.Size(m)
}
func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings proto.InternalMessageInfo

const Default_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_RefreshType BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType = BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_UNKNOWN_AUTO_REFRESH_TYPE

func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) GetRefreshType() BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType {
	if m != nil && m.RefreshType != nil {
		return *m.RefreshType
	}
	return Default_BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_RefreshType
}

func (m *BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings) GetMinRefreshIntervalSeconds() int32 {
	if m != nil && m.MinRefreshIntervalSeconds != nil {
		return *m.MinRefreshIntervalSeconds
	}
	return 0
}

// Stickiness settings declared by the publisher.
// Next Tag: 4
type BidRequest_AdSlot_StickySettings struct {
	// Whether the request originated from an ad slot that scrolls along with
	// the contents of the page vertically.
	VerticalStickiness *BidRequest_AdSlot_StickySettings_Stickiness `protobuf:"varint,1,opt,name=vertical_stickiness,json=verticalStickiness,enum=BidRequest_AdSlot_StickySettings_Stickiness,def=0" json:"vertical_stickiness,omitempty"`
	// Whether the request originated from an ad slot that scrolls along with
	// the contents of the page horizontally, and is located at the top of the
	// page.
	TopHorizontalStickiness *BidRequest_AdSlot_StickySettings_Stickiness `protobuf:"varint,2,opt,name=top_horizontal_stickiness,json=topHorizontalStickiness,enum=BidRequest_AdSlot_StickySettings_Stickiness,def=0" json:"top_horizontal_stickiness,omitempty"`
	// Whether the request originated from an ad slot that scrolls along with
	// the contents of the page horizontally, and is located at the bottom of
	// the page.
	BottomHorizontalStickiness *BidRequest_AdSlot_StickySettings_Stickiness `protobuf:"varint,3,opt,name=bottom_horizontal_stickiness,json=bottomHorizontalStickiness,enum=BidRequest_AdSlot_StickySettings_Stickiness,def=0" json:"bottom_horizontal_stickiness,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                     `json:"-"`
	XXX_unrecognized           []byte                                       `json:"-"`
	XXX_sizecache              int32                                        `json:"-"`
}

func (m *BidRequest_AdSlot_StickySettings) Reset()         { *m = BidRequest_AdSlot_StickySettings{} }
func (m *BidRequest_AdSlot_StickySettings) String() string { return proto.CompactTextString(m) }
func (*BidRequest_AdSlot_StickySettings) ProtoMessage()    {}
func (*BidRequest_AdSlot_StickySettings) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 6}
}

func (m *BidRequest_AdSlot_StickySettings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_StickySettings.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_StickySettings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_StickySettings.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_StickySettings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_StickySettings.Merge(m, src)
}
func (m *BidRequest_AdSlot_StickySettings) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_StickySettings.Size(m)
}
func (m *BidRequest_AdSlot_StickySettings) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_StickySettings.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_StickySettings proto.InternalMessageInfo

const Default_BidRequest_AdSlot_StickySettings_VerticalStickiness BidRequest_AdSlot_StickySettings_Stickiness = BidRequest_AdSlot_StickySettings_UNKNOWN_STICKINESS
const Default_BidRequest_AdSlot_StickySettings_TopHorizontalStickiness BidRequest_AdSlot_StickySettings_Stickiness = BidRequest_AdSlot_StickySettings_UNKNOWN_STICKINESS
const Default_BidRequest_AdSlot_StickySettings_BottomHorizontalStickiness BidRequest_AdSlot_StickySettings_Stickiness = BidRequest_AdSlot_StickySettings_UNKNOWN_STICKINESS

func (m *BidRequest_AdSlot_StickySettings) GetVerticalStickiness() BidRequest_AdSlot_StickySettings_Stickiness {
	if m != nil && m.VerticalStickiness != nil {
		return *m.VerticalStickiness
	}
	return Default_BidRequest_AdSlot_StickySettings_VerticalStickiness
}

func (m *BidRequest_AdSlot_StickySettings) GetTopHorizontalStickiness() BidRequest_AdSlot_StickySettings_Stickiness {
	if m != nil && m.TopHorizontalStickiness != nil {
		return *m.TopHorizontalStickiness
	}
	return Default_BidRequest_AdSlot_StickySettings_TopHorizontalStickiness
}

func (m *BidRequest_AdSlot_StickySettings) GetBottomHorizontalStickiness() BidRequest_AdSlot_StickySettings_Stickiness {
	if m != nil && m.BottomHorizontalStickiness != nil {
		return *m.BottomHorizontalStickiness
	}
	return Default_BidRequest_AdSlot_StickySettings_BottomHorizontalStickiness
}

// Data, opaque to Google and to the publisher, generated by the buyer
// within the publisher's mobile application.
type BidRequest_AdSlot_BuyerGeneratedRequestData struct {
	// The source of the data.
	//
	// Types that are valid to be assigned to Source:
	//	*BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp_
	Source isBidRequest_AdSlot_BuyerGeneratedRequestData_Source `protobuf_oneof:"source"`
	// Data sent from the buyer's source within the publisher's domain to the
	// bidder. This data is opaque to the publisher and to Google.
	Data                 *string  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) Reset() {
	*m = BidRequest_AdSlot_BuyerGeneratedRequestData{}
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_BuyerGeneratedRequestData) ProtoMessage() {}
func (*BidRequest_AdSlot_BuyerGeneratedRequestData) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 7}
}

func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData.Merge(m, src)
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData.Size(m)
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData proto.InternalMessageInfo

type isBidRequest_AdSlot_BuyerGeneratedRequestData_Source interface {
	isBidRequest_AdSlot_BuyerGeneratedRequestData_Source()
}

type BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp_ struct {
	SourceApp *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp `protobuf:"bytes,1,opt,name=source_app,json=sourceApp,oneof"`
}

func (*BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp_) isBidRequest_AdSlot_BuyerGeneratedRequestData_Source() {
}

func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) GetSource() isBidRequest_AdSlot_BuyerGeneratedRequestData_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) GetSourceApp() *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp {
	if x, ok := m.GetSource().(*BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp_); ok {
		return x.SourceApp
	}
	return nil
}

func (m *BidRequest_AdSlot_BuyerGeneratedRequestData) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BidRequest_AdSlot_BuyerGeneratedRequestData) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp_)(nil),
	}
}

// Identification for the source of the buyer generated request data when
// that source is from within an application.
type BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp struct {
	// Identifier for the SDK that generated this data. It will match the id
	// in mobile.installed_sdk.id.
	Id                   *string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) Reset() {
	*m = BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp{}
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) String() string {
	return proto.CompactTextString(m)
}
func (*BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) ProtoMessage() {}
func (*BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 8, 7, 0}
}

func (m *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp.Unmarshal(m, b)
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp.Marshal(b, m, deterministic)
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp.Merge(m, src)
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) XXX_Size() int {
	return xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp.Size(m)
}
func (m *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp proto.InternalMessageInfo

func (m *BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

// Feedback on bids submitted in previous responses. This is only set if
// real-time feedback is enabled for your bidder. Please contact your account
// manager if you wish to enable real-time feedback.
//
type BidRequest_BidResponseFeedback struct {
	// The unique id from BidRequest.id
	RequestId []byte `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// The index of the BidResponse_Ad if there was more than one. The index
	// starts at zero for the first creative.
	CreativeIndex *int32 `protobuf:"varint,2,opt,name=creative_index,json=creativeIndex" json:"creative_index,omitempty"`
	// The status code for the ad. See creative-status-codes.txt in the
	// technical documentation for a list of ids.
	CreativeStatusCode *int32 `protobuf:"varint,3,opt,name=creative_status_code,json=creativeStatusCode" json:"creative_status_code,omitempty"`
	// The second price cpm in micros of your account currency if your bid won
	// the auction, or the cpm that must be exceeded to win the auction if your
	// bid was outbid. This is only set if your bid participated in the
	// auction. It is not set if the bid was filtered prior to the auction. It
	// is also withheld if the publisher or winning bidder has opted out of
	// price feedback, or if your account has opted out of sharing winning
	// prices with other bidders.
	CpmMicros *int64 `protobuf:"varint,4,opt,name=cpm_micros,json=cpmMicros" json:"cpm_micros,omitempty"`
	// Event notification token that was included in the bid response.
	EventNotificationToken []byte `protobuf:"bytes,5,opt,name=event_notification_token,json=eventNotificationToken" json:"event_notification_token,omitempty"`
	// Buyer creative ID that was included in the bid response.
	BuyerCreativeId      *string  `protobuf:"bytes,6,opt,name=buyer_creative_id,json=buyerCreativeId" json:"buyer_creative_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidRequest_BidResponseFeedback) Reset()         { *m = BidRequest_BidResponseFeedback{} }
func (m *BidRequest_BidResponseFeedback) String() string { return proto.CompactTextString(m) }
func (*BidRequest_BidResponseFeedback) ProtoMessage()    {}
func (*BidRequest_BidResponseFeedback) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{0, 9}
}

func (m *BidRequest_BidResponseFeedback) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidRequest_BidResponseFeedback.Unmarshal(m, b)
}
func (m *BidRequest_BidResponseFeedback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidRequest_BidResponseFeedback.Marshal(b, m, deterministic)
}
func (m *BidRequest_BidResponseFeedback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidRequest_BidResponseFeedback.Merge(m, src)
}
func (m *BidRequest_BidResponseFeedback) XXX_Size() int {
	return xxx_messageInfo_BidRequest_BidResponseFeedback.Size(m)
}
func (m *BidRequest_BidResponseFeedback) XXX_DiscardUnknown() {
	xxx_messageInfo_BidRequest_BidResponseFeedback.DiscardUnknown(m)
}

var xxx_messageInfo_BidRequest_BidResponseFeedback proto.InternalMessageInfo

func (m *BidRequest_BidResponseFeedback) GetRequestId() []byte {
	if m != nil {
		return m.RequestId
	}
	return nil
}

func (m *BidRequest_BidResponseFeedback) GetCreativeIndex() int32 {
	if m != nil && m.CreativeIndex != nil {
		return *m.CreativeIndex
	}
	return 0
}

func (m *BidRequest_BidResponseFeedback) GetCreativeStatusCode() int32 {
	if m != nil && m.CreativeStatusCode != nil {
		return *m.CreativeStatusCode
	}
	return 0
}

func (m *BidRequest_BidResponseFeedback) GetCpmMicros() int64 {
	if m != nil && m.CpmMicros != nil {
		return *m.CpmMicros
	}
	return 0
}

func (m *BidRequest_BidResponseFeedback) GetEventNotificationToken() []byte {
	if m != nil {
		return m.EventNotificationToken
	}
	return nil
}

func (m *BidRequest_BidResponseFeedback) GetBuyerCreativeId() string {
	if m != nil && m.BuyerCreativeId != nil {
		return *m.BuyerCreativeId
	}
	return ""
}

// This is the message that you return in response to a BidRequest. You may
// specify zero or more ads. For each ad, you should provide an ad slot on
// which the ad can run. An ad slot is identified by the AdSlot.id from the
// BidRequest. If you do not wish to bid, submit a response with no ads and
// with only the processing_time_ms set.
//
type BidResponse struct {
	Ad []*BidResponse_Ad `protobuf:"bytes,2,rep,name=ad" json:"ad,omitempty"`
	// If is_test was set in the BidRequest, then you may return debug information
	// as plain text in this field. Please do not set this field under normal
	// conditions, or set it to values longer than 100 characters. You should only
	// use this field when asked to do so as part of troubleshooting particular
	// problems.
	DebugString *string `protobuf:"bytes,5,opt,name=debug_string,json=debugString" json:"debug_string,omitempty"`
	// Please set this to the processing time in milliseconds from when you
	// received the request to when you returned the response.
	ProcessingTimeMs     *int32   `protobuf:"varint,4,opt,name=processing_time_ms,json=processingTimeMs" json:"processing_time_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidResponse) Reset()         { *m = BidResponse{} }
func (m *BidResponse) String() string { return proto.CompactTextString(m) }
func (*BidResponse) ProtoMessage()    {}
func (*BidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1}
}

func (m *BidResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse.Unmarshal(m, b)
}
func (m *BidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse.Marshal(b, m, deterministic)
}
func (m *BidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse.Merge(m, src)
}
func (m *BidResponse) XXX_Size() int {
	return xxx_messageInfo_BidResponse.Size(m)
}
func (m *BidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse proto.InternalMessageInfo

func (m *BidResponse) GetAd() []*BidResponse_Ad {
	if m != nil {
		return m.Ad
	}
	return nil
}

func (m *BidResponse) GetDebugString() string {
	if m != nil && m.DebugString != nil {
		return *m.DebugString
	}
	return ""
}

func (m *BidResponse) GetProcessingTimeMs() int32 {
	if m != nil && m.ProcessingTimeMs != nil {
		return *m.ProcessingTimeMs
	}
	return 0
}

type BidResponse_Ad struct {
	// The event notification token is sent to AdX by bidders for
	// troubleshooting. AdX will include the token in real-time feedback for the
	// bid. The content of the token will not be logged by AdX. AdX will ignore
	// any token longer than 64 bytes.
	EventNotificationToken []byte `protobuf:"bytes,25,opt,name=event_notification_token,json=eventNotificationToken" json:"event_notification_token,omitempty"`
	// A unique identifier chosen by you for the creative in this response.
	// This must always be set, must be limited to at most 64 bytes, and must be
	// a valid UTF8 string. Every buyer_creative_id you use must always be
	// associated with the same creative. This field is used to communicate
	// approval statuses when issues are found. Do not specify the same id for
	// different creatives, or all creatives will be disapproved if a problem
	// with a single creative is found. Do not specify different ids for the
	// same creative in different responses or no creatives will be served since
	// approval status is assigned on a per-id basis.
	BuyerCreativeId *string `protobuf:"bytes,10,opt,name=buyer_creative_id,json=buyerCreativeId" json:"buyer_creative_id,omitempty"`
	// The HTML snippet that will be placed on the web page to display the ad.
	// Please use BidResponse.Ad.AdSlot.billing_id to indicate which billing id
	// this snippet is attributed to.
	HtmlSnippet *string `protobuf:"bytes,1,opt,name=html_snippet,json=htmlSnippet" json:"html_snippet,omitempty"`
	// The URL to fetch a video ad. The URL should return an XML response that
	// conforms to the VAST 2.0 or 3.0 standard. Please use
	// BidResponse.Ad.AdSlot.billing_id to indicate which billing id to
	// attribute this ad to. Only one of the following should be set:
	// html_snippet, video_url. Only set this field if the BidRequest is for an
	// in-video ad (BidRequest.video is present).
	VideoUrl *string `protobuf:"bytes,9,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	// The VAST document to be returned. This document should conform to the
	// VAST 2.0 or 3.0 standard. Please use BidResponse.Ad.AdSlot.billing_id to
	// indicate which billing ID to attribute this ad to.
	// Only set this field if the BidRequest is for an in-video ad and the
	// response is VAST XML.
	VideoVastXml *string `protobuf:"bytes,24,opt,name=video_vast_xml,json=videoVastXml" json:"video_vast_xml,omitempty"`
	// The URL to fetch an AMPHTML ad. Only one of the following should be set:
	// html_snippet, video_url, amp_ad_url, native_ad.
	AmpAdUrl *string                  `protobuf:"bytes,23,opt,name=amp_ad_url,json=ampAdUrl" json:"amp_ad_url,omitempty"`
	NativeAd *BidResponse_Ad_NativeAd `protobuf:"bytes,18,opt,name=native_ad,json=nativeAd" json:"native_ad,omitempty"`
	// The set of destination URLs for the snippet. This includes the URLs that
	// the user will go to if they click on the displayed ad, and any URLs that
	// are visible in the rendered ad. Do not include intermediate calls to the
	// adserver that are unrelated to the inal landing page. A BidResponse that
	// returns a snippet or video ad but declares no click_through_url will be
	// discarded. Only set this field if html_snippet or video_url or native_ad
	// are set. This data is used as a destination URL declaration, for example
	// for post-filtering of publisher-blocked URLs or ad categorization.
	//
	// For non-native ads, it is not used for click tracking or any
	// other ad functionality; it is only used as a destination URL
	// declaration.
	//
	// For native ads, if NativeAd.click_link_url is not set, the first
	// value of click_through_url is used to direct the user to the landing
	// page. In addition, all values are used as destination
	// URL declarations (similar to the non-native case).
	ClickThroughUrl []string `protobuf:"bytes,4,rep,name=click_through_url,json=clickThroughUrl" json:"click_through_url,omitempty"`
	// All vendor types for the ads that may be shown from this snippet. You
	// should only declare vendor ids listed in the vendors.txt file in the
	// technical documentation. We will check to ensure that the vendors you
	// declare are in the allowed_vendor_type list sent in the BidRequest for
	// AdX publishers, or in gdn-vendors.txt for GDN publishers.
	VendorType []int32 `protobuf:"varint,5,rep,name=vendor_type,json=vendorType" json:"vendor_type,omitempty"`
	// All attributes for the ads that may be shown from this snippet. See
	// buyer-declarable-creative-attributes.txt in the technical documentation
	// for a list of ids. We will check to ensure none of these attributes are
	// in the excluded_attribute list in the BidRequest.
	Attribute []int32 `protobuf:"varint,6,rep,name=attribute" json:"attribute,omitempty"`
	// All sensitive categories for the ads that may be shown from this snippet.
	// See ad-sensitive-categories.txt in the technical documentation for a list
	// of ids. We will check to ensure none of these categories were in the
	// excluded_sensitive_category list in the BidRequest.
	Category []int32 `protobuf:"varint,7,rep,name=category" json:"category,omitempty"`
	// All restricted categories for the ads that may be shown from this
	// snippet. See ad-restricted-categories.txt in the technical documentation
	// for a list of ids. We will check to ensure these categories were listed
	// in the allowed_restricted_category list in the BidRequest. If you are
	// bidding with ads in restricted categories you MUST ALWAYS declare them
	// here.
	RestrictedCategory []int32 `protobuf:"varint,17,rep,name=restricted_category,json=restrictedCategory" json:"restricted_category,omitempty"`
	// All names of the ad's advertisers.
	AdvertiserName []string `protobuf:"bytes,11,rep,name=advertiser_name,json=advertiserName" json:"advertiser_name,omitempty"`
	// For exchange bidders (third party exchanges doing real-time bidding on
	// DFP), the name of the bidder that the exchange called to provide the ad.
	// This is arbitrary UTF8 text but should be sufficient to identify the
	// bidder and should be set consistently to the same value for the same
	// bidder.
	BidderName *string `protobuf:"bytes,22,opt,name=bidder_name,json=bidderName" json:"bidder_name,omitempty"`
	// The width and the height in pixels of the ad. Setting these is optional.
	// However, these must be set if the bid BidRequest.AdSlot has more than one
	// width and height or if BidRequest.Mobile.is_interstitial_request is true.
	Width  *int32 `protobuf:"varint,14,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,15,opt,name=height" json:"height,omitempty"`
	// The Agency associated with this ad. See agencies.txt file in the
	// technical documentation for a list of ids. If this ad has no associated
	// agency then the value NONE (agency_id: 1) should be used rather than
	// leaving this field unset.
	AgencyId *int64                   `protobuf:"varint,16,opt,name=agency_id,json=agencyId" json:"agency_id,omitempty"`
	Adslot   []*BidResponse_Ad_AdSlot `protobuf:"bytes,3,rep,name=adslot" json:"adslot,omitempty"`
	// The URLs to call when the impression is rendered. This is supported for
	// all inventory types and all formats except for VAST video.
	ImpressionTrackingUrl []string `protobuf:"bytes,19,rep,name=impression_tracking_url,json=impressionTrackingUrl" json:"impression_tracking_url,omitempty"`
	// Link to ad preferences page. This is only supported for native ads.
	// If present, a standard AdChoices icon is added to the native creative and
	// linked to this URL.
	AdChoicesDestinationUrl *string `protobuf:"bytes,21,opt,name=ad_choices_destination_url,json=adChoicesDestinationUrl" json:"ad_choices_destination_url,omitempty"`
	// Resources to invoke when the impression is rendered. This is supported
	// for native and banner formats only and explicitly whitelisted scripts
	// only.
	ImpressionTrackingResource []*BidResponse_Ad_ImpressionTrackingResource `protobuf:"bytes,26,rep,name=impression_tracking_resource,json=impressionTrackingResource" json:"impression_tracking_resource,omitempty"`
	SdkRenderedAd              *BidResponse_Ad_SdkRenderedAd                `protobuf:"bytes,27,opt,name=sdk_rendered_ad,json=sdkRenderedAd" json:"sdk_rendered_ad,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                                     `json:"-"`
	XXX_unrecognized           []byte                                       `json:"-"`
	XXX_sizecache              int32                                        `json:"-"`
}

func (m *BidResponse_Ad) Reset()         { *m = BidResponse_Ad{} }
func (m *BidResponse_Ad) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ad) ProtoMessage()    {}
func (*BidResponse_Ad) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1, 0}
}

func (m *BidResponse_Ad) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ad.Unmarshal(m, b)
}
func (m *BidResponse_Ad) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ad.Marshal(b, m, deterministic)
}
func (m *BidResponse_Ad) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ad.Merge(m, src)
}
func (m *BidResponse_Ad) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ad.Size(m)
}
func (m *BidResponse_Ad) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ad.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ad proto.InternalMessageInfo

func (m *BidResponse_Ad) GetEventNotificationToken() []byte {
	if m != nil {
		return m.EventNotificationToken
	}
	return nil
}

func (m *BidResponse_Ad) GetBuyerCreativeId() string {
	if m != nil && m.BuyerCreativeId != nil {
		return *m.BuyerCreativeId
	}
	return ""
}

func (m *BidResponse_Ad) GetHtmlSnippet() string {
	if m != nil && m.HtmlSnippet != nil {
		return *m.HtmlSnippet
	}
	return ""
}

func (m *BidResponse_Ad) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

func (m *BidResponse_Ad) GetVideoVastXml() string {
	if m != nil && m.VideoVastXml != nil {
		return *m.VideoVastXml
	}
	return ""
}

func (m *BidResponse_Ad) GetAmpAdUrl() string {
	if m != nil && m.AmpAdUrl != nil {
		return *m.AmpAdUrl
	}
	return ""
}

func (m *BidResponse_Ad) GetNativeAd() *BidResponse_Ad_NativeAd {
	if m != nil {
		return m.NativeAd
	}
	return nil
}

func (m *BidResponse_Ad) GetClickThroughUrl() []string {
	if m != nil {
		return m.ClickThroughUrl
	}
	return nil
}

func (m *BidResponse_Ad) GetVendorType() []int32 {
	if m != nil {
		return m.VendorType
	}
	return nil
}

func (m *BidResponse_Ad) GetAttribute() []int32 {
	if m != nil {
		return m.Attribute
	}
	return nil
}

func (m *BidResponse_Ad) GetCategory() []int32 {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *BidResponse_Ad) GetRestrictedCategory() []int32 {
	if m != nil {
		return m.RestrictedCategory
	}
	return nil
}

func (m *BidResponse_Ad) GetAdvertiserName() []string {
	if m != nil {
		return m.AdvertiserName
	}
	return nil
}

func (m *BidResponse_Ad) GetBidderName() string {
	if m != nil && m.BidderName != nil {
		return *m.BidderName
	}
	return ""
}

func (m *BidResponse_Ad) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidResponse_Ad) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *BidResponse_Ad) GetAgencyId() int64 {
	if m != nil && m.AgencyId != nil {
		return *m.AgencyId
	}
	return 0
}

func (m *BidResponse_Ad) GetAdslot() []*BidResponse_Ad_AdSlot {
	if m != nil {
		return m.Adslot
	}
	return nil
}

func (m *BidResponse_Ad) GetImpressionTrackingUrl() []string {
	if m != nil {
		return m.ImpressionTrackingUrl
	}
	return nil
}

func (m *BidResponse_Ad) GetAdChoicesDestinationUrl() string {
	if m != nil && m.AdChoicesDestinationUrl != nil {
		return *m.AdChoicesDestinationUrl
	}
	return ""
}

func (m *BidResponse_Ad) GetImpressionTrackingResource() []*BidResponse_Ad_ImpressionTrackingResource {
	if m != nil {
		return m.ImpressionTrackingResource
	}
	return nil
}

func (m *BidResponse_Ad) GetSdkRenderedAd() *BidResponse_Ad_SdkRenderedAd {
	if m != nil {
		return m.SdkRenderedAd
	}
	return nil
}

// The content of a native ad. Native ads consist of multiple building
// blocks, which are rendered by the publisher. Only one of the following
// should be set: html_snippet, video_url, or native_ad.
// Only set this field if the BidRequest is for a native ad
// (BidRequest.adslot.native is present).
//
type BidResponse_Ad_NativeAd struct {
	// A short title for the ad.
	Headline *string `protobuf:"bytes,1,opt,name=headline" json:"headline,omitempty"`
	// A long description of the ad.
	Body *string `protobuf:"bytes,2,opt,name=body" json:"body,omitempty"`
	// A label for the button that the user is supposed to click
	CallToAction *string `protobuf:"bytes,3,opt,name=call_to_action,json=callToAction" json:"call_to_action,omitempty"`
	// The name of the advertiser or sponsor, to be displayed in the ad
	// creative.
	Advertiser *string `protobuf:"bytes,4,opt,name=advertiser" json:"advertiser,omitempty"`
	// A large image.
	Image *BidResponse_Ad_NativeAd_Image `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	// A smaller image, for the advertiser's logo.
	Logo *BidResponse_Ad_NativeAd_Image `protobuf:"bytes,6,opt,name=logo" json:"logo,omitempty"`
	// The app icon, for app download ads.
	AppIcon *BidResponse_Ad_NativeAd_Image `protobuf:"bytes,7,opt,name=app_icon,json=appIcon" json:"app_icon,omitempty"`
	// The URL to fetch a video ad. The URL should return an XML response that
	// conforms to the VAST 2.0 standard. Only set this field if the
	// BidRequest is for native ads and the video field is requested.
	VideoUrl *string `protobuf:"bytes,13,opt,name=video_url,json=videoUrl" json:"video_url,omitempty"`
	// The app rating in the app store. Must be in the range [0-5].
	StarRating *float64 `protobuf:"fixed64,8,opt,name=star_rating,json=starRating" json:"star_rating,omitempty"`
	// The URL that the browser/SDK will load when the user clicks the ad.
	// This can be the landing page directly, or the first step of a redirect
	// chain that eventually leads to it. For backward compatibility, if this
	// is not set, the first Ad.click_through_url is used.
	ClickLinkUrl *string `protobuf:"bytes,14,opt,name=click_link_url,json=clickLinkUrl" json:"click_link_url,omitempty"`
	// The URL to use for click tracking. The SDK pings click tracking url on
	// a background thread. When resolving the url, HTTP 30x redirects are
	// followed. The SDK ignores the contents of the response; this URL
	// has no effect on the landing page for the user.
	// This field is planned to be deprecated and we are moving to the
	// repeated click_tracking_urls field.
	ClickTrackingUrl *string `protobuf:"bytes,11,opt,name=click_tracking_url,json=clickTrackingUrl" json:"click_tracking_url,omitempty"`
	// The URLs to use for click tracking. This will be used throughout the
	// serving stack and will incorporate any URL in click_tracking_url.
	ClickTrackingUrls []string `protobuf:"bytes,15,rep,name=click_tracking_urls,json=clickTrackingUrls" json:"click_tracking_urls,omitempty"`
	// The price of the promoted app including the currency info.
	Price *string `protobuf:"bytes,10,opt,name=price" json:"price,omitempty"`
	// This field is deprecated.
	DEPRECATEDStore *string `protobuf:"bytes,12,opt,name=DEPRECATED_store,json=DEPRECATEDStore" json:"DEPRECATED_store,omitempty"`
	// This field is deprecated. Please use
	// BidResponse.Ad.impression_tracking_url instead.
	DEPRECATEDImpressionTrackingUrl []string `protobuf:"bytes,9,rep,name=DEPRECATED_impression_tracking_url,json=DEPRECATEDImpressionTrackingUrl" json:"DEPRECATED_impression_tracking_url,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *BidResponse_Ad_NativeAd) Reset()         { *m = BidResponse_Ad_NativeAd{} }
func (m *BidResponse_Ad_NativeAd) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ad_NativeAd) ProtoMessage()    {}
func (*BidResponse_Ad_NativeAd) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1, 0, 0}
}

func (m *BidResponse_Ad_NativeAd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ad_NativeAd.Unmarshal(m, b)
}
func (m *BidResponse_Ad_NativeAd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ad_NativeAd.Marshal(b, m, deterministic)
}
func (m *BidResponse_Ad_NativeAd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ad_NativeAd.Merge(m, src)
}
func (m *BidResponse_Ad_NativeAd) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ad_NativeAd.Size(m)
}
func (m *BidResponse_Ad_NativeAd) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ad_NativeAd.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ad_NativeAd proto.InternalMessageInfo

func (m *BidResponse_Ad_NativeAd) GetHeadline() string {
	if m != nil && m.Headline != nil {
		return *m.Headline
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetCallToAction() string {
	if m != nil && m.CallToAction != nil {
		return *m.CallToAction
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetAdvertiser() string {
	if m != nil && m.Advertiser != nil {
		return *m.Advertiser
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetImage() *BidResponse_Ad_NativeAd_Image {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *BidResponse_Ad_NativeAd) GetLogo() *BidResponse_Ad_NativeAd_Image {
	if m != nil {
		return m.Logo
	}
	return nil
}

func (m *BidResponse_Ad_NativeAd) GetAppIcon() *BidResponse_Ad_NativeAd_Image {
	if m != nil {
		return m.AppIcon
	}
	return nil
}

func (m *BidResponse_Ad_NativeAd) GetVideoUrl() string {
	if m != nil && m.VideoUrl != nil {
		return *m.VideoUrl
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetStarRating() float64 {
	if m != nil && m.StarRating != nil {
		return *m.StarRating
	}
	return 0
}

func (m *BidResponse_Ad_NativeAd) GetClickLinkUrl() string {
	if m != nil && m.ClickLinkUrl != nil {
		return *m.ClickLinkUrl
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetClickTrackingUrl() string {
	if m != nil && m.ClickTrackingUrl != nil {
		return *m.ClickTrackingUrl
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetClickTrackingUrls() []string {
	if m != nil {
		return m.ClickTrackingUrls
	}
	return nil
}

func (m *BidResponse_Ad_NativeAd) GetPrice() string {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetDEPRECATEDStore() string {
	if m != nil && m.DEPRECATEDStore != nil {
		return *m.DEPRECATEDStore
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd) GetDEPRECATEDImpressionTrackingUrl() []string {
	if m != nil {
		return m.DEPRECATEDImpressionTrackingUrl
	}
	return nil
}

type BidResponse_Ad_NativeAd_Image struct {
	Url *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	// Image width and height are specified in pixels. You may provide a
	// larger image than was requested, so long as the aspect ratio is
	// preserved.
	Width                *int32   `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height               *int32   `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidResponse_Ad_NativeAd_Image) Reset()         { *m = BidResponse_Ad_NativeAd_Image{} }
func (m *BidResponse_Ad_NativeAd_Image) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ad_NativeAd_Image) ProtoMessage()    {}
func (*BidResponse_Ad_NativeAd_Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1, 0, 0, 0}
}

func (m *BidResponse_Ad_NativeAd_Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ad_NativeAd_Image.Unmarshal(m, b)
}
func (m *BidResponse_Ad_NativeAd_Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ad_NativeAd_Image.Marshal(b, m, deterministic)
}
func (m *BidResponse_Ad_NativeAd_Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ad_NativeAd_Image.Merge(m, src)
}
func (m *BidResponse_Ad_NativeAd_Image) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ad_NativeAd_Image.Size(m)
}
func (m *BidResponse_Ad_NativeAd_Image) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ad_NativeAd_Image.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ad_NativeAd_Image proto.InternalMessageInfo

func (m *BidResponse_Ad_NativeAd_Image) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *BidResponse_Ad_NativeAd_Image) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *BidResponse_Ad_NativeAd_Image) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

type BidResponse_Ad_AdSlot struct {
	// The slot id from the BidRequest that the ad may appear in.
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// The maximum CPM you want to be charged if you win the auction for this
	// ad slot, expressed in micros of your account currency. For example, to
	// bid a CPM of 1.29 USD, set max_cpm_micros = 1290000. Winning bids are
	// rounded up to billable units. For example, in USD, bids are rounded up
	// to the next multiple of 10,000 micros (one cent).
	MaxCpmMicros *int64 `protobuf:"varint,2,req,name=max_cpm_micros,json=maxCpmMicros" json:"max_cpm_micros,omitempty"`
	// The minimum CPM you want to be charged if you win the auction for this
	// ad slot. This may represent a second price if you choose max_cpm as the
	// highest of several bids, or some form of reserve price if you wish to
	// override the reserve price set by the publisher. The bid must be less
	// than or equal to max_cpm_micros or it will be ignored. This field is
	// optional and does not need to be set.
	MinCpmMicros *int64 `protobuf:"varint,3,opt,name=min_cpm_micros,json=minCpmMicros" json:"min_cpm_micros,omitempty"`
	// Billing id to attribute this impression to. The value must be in the
	// set of billing ids for this slot that were sent in the
	// BidRequest.AdSlot.matching_ad_data.billing_id. This must always be set
	// if the BidRequest has more than one
	// BidRequest.AdSlot.matching_ad_data.billing_id.
	BillingId *int64 `protobuf:"varint,4,opt,name=billing_id,json=billingId" json:"billing_id,omitempty"`
	// The deal id that you want this bid to participate in. Leave unset
	// or set it to "1" if a deal is available but you want to
	// ignore the deal and participate in the open auction.
	DealId *int64 `protobuf:"varint,5,opt,name=deal_id,json=dealId,def=0" json:"deal_id,omitempty"`
	// For exchange bidders (third party exchanges doing real-time bidding on
	// DFP), the deal id from the exchange's namespace that is associated with
	// this bid and reported to publishers.  Leave unset if there is no
	// associated deal. This is arbitrary UTF8 text and must be at most 64
	// bytes.
	ExchangeDealId   *string                                 `protobuf:"bytes,6,opt,name=exchange_deal_id,json=exchangeDealId" json:"exchange_deal_id,omitempty"`
	ExchangeDealType *BidResponse_Ad_AdSlot_ExchangeDealType `protobuf:"varint,7,opt,name=exchange_deal_type,json=exchangeDealType,enum=BidResponse_Ad_AdSlot_ExchangeDealType,def=0" json:"exchange_deal_type,omitempty"`
	// Buyer declared ID which will be used to breakdown spend and invalid
	// traffic metrics in IVT transparency reporting. IDs longer than 64 bytes
	// will be ignored.
	BuyerReportingId     *string  `protobuf:"bytes,8,opt,name=buyer_reporting_id,json=buyerReportingId" json:"buyer_reporting_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidResponse_Ad_AdSlot) Reset()         { *m = BidResponse_Ad_AdSlot{} }
func (m *BidResponse_Ad_AdSlot) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ad_AdSlot) ProtoMessage()    {}
func (*BidResponse_Ad_AdSlot) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1, 0, 1}
}

func (m *BidResponse_Ad_AdSlot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ad_AdSlot.Unmarshal(m, b)
}
func (m *BidResponse_Ad_AdSlot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ad_AdSlot.Marshal(b, m, deterministic)
}
func (m *BidResponse_Ad_AdSlot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ad_AdSlot.Merge(m, src)
}
func (m *BidResponse_Ad_AdSlot) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ad_AdSlot.Size(m)
}
func (m *BidResponse_Ad_AdSlot) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ad_AdSlot.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ad_AdSlot proto.InternalMessageInfo

const Default_BidResponse_Ad_AdSlot_DealId int64 = 0
const Default_BidResponse_Ad_AdSlot_ExchangeDealType BidResponse_Ad_AdSlot_ExchangeDealType = BidResponse_Ad_AdSlot_OPEN_AUCTION

func (m *BidResponse_Ad_AdSlot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BidResponse_Ad_AdSlot) GetMaxCpmMicros() int64 {
	if m != nil && m.MaxCpmMicros != nil {
		return *m.MaxCpmMicros
	}
	return 0
}

func (m *BidResponse_Ad_AdSlot) GetMinCpmMicros() int64 {
	if m != nil && m.MinCpmMicros != nil {
		return *m.MinCpmMicros
	}
	return 0
}

func (m *BidResponse_Ad_AdSlot) GetBillingId() int64 {
	if m != nil && m.BillingId != nil {
		return *m.BillingId
	}
	return 0
}

func (m *BidResponse_Ad_AdSlot) GetDealId() int64 {
	if m != nil && m.DealId != nil {
		return *m.DealId
	}
	return Default_BidResponse_Ad_AdSlot_DealId
}

func (m *BidResponse_Ad_AdSlot) GetExchangeDealId() string {
	if m != nil && m.ExchangeDealId != nil {
		return *m.ExchangeDealId
	}
	return ""
}

func (m *BidResponse_Ad_AdSlot) GetExchangeDealType() BidResponse_Ad_AdSlot_ExchangeDealType {
	if m != nil && m.ExchangeDealType != nil {
		return *m.ExchangeDealType
	}
	return Default_BidResponse_Ad_AdSlot_ExchangeDealType
}

func (m *BidResponse_Ad_AdSlot) GetBuyerReportingId() string {
	if m != nil && m.BuyerReportingId != nil {
		return *m.BuyerReportingId
	}
	return ""
}

type BidResponse_Ad_ImpressionTrackingResource struct {
	// The URL of a Javascript resource. The URLs should not contain script
	// tags. For example: "https://mycdn.com/tracker.js".
	ScriptUrl *string                                             `protobuf:"bytes,1,opt,name=script_url,json=scriptUrl" json:"script_url,omitempty"`
	Context   []BidResponse_Ad_ImpressionTrackingResource_Context `protobuf:"varint,2,rep,name=context,enum=BidResponse_Ad_ImpressionTrackingResource_Context" json:"context,omitempty"`
	// Parameters associated with the resource that will be passed to the
	// resource when it is loaded. The format of the parameters is dependent
	// on the script vendor.
	VerificationParameters *string `protobuf:"bytes,3,opt,name=verification_parameters,json=verificationParameters" json:"verification_parameters,omitempty"`
	// Used to uniquely identify the verification script provider.
	VendorKey            *string  `protobuf:"bytes,4,opt,name=vendor_key,json=vendorKey" json:"vendor_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidResponse_Ad_ImpressionTrackingResource) Reset() {
	*m = BidResponse_Ad_ImpressionTrackingResource{}
}
func (m *BidResponse_Ad_ImpressionTrackingResource) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ad_ImpressionTrackingResource) ProtoMessage()    {}
func (*BidResponse_Ad_ImpressionTrackingResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1, 0, 2}
}

func (m *BidResponse_Ad_ImpressionTrackingResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ad_ImpressionTrackingResource.Unmarshal(m, b)
}
func (m *BidResponse_Ad_ImpressionTrackingResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ad_ImpressionTrackingResource.Marshal(b, m, deterministic)
}
func (m *BidResponse_Ad_ImpressionTrackingResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ad_ImpressionTrackingResource.Merge(m, src)
}
func (m *BidResponse_Ad_ImpressionTrackingResource) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ad_ImpressionTrackingResource.Size(m)
}
func (m *BidResponse_Ad_ImpressionTrackingResource) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ad_ImpressionTrackingResource.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ad_ImpressionTrackingResource proto.InternalMessageInfo

func (m *BidResponse_Ad_ImpressionTrackingResource) GetScriptUrl() string {
	if m != nil && m.ScriptUrl != nil {
		return *m.ScriptUrl
	}
	return ""
}

func (m *BidResponse_Ad_ImpressionTrackingResource) GetContext() []BidResponse_Ad_ImpressionTrackingResource_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *BidResponse_Ad_ImpressionTrackingResource) GetVerificationParameters() string {
	if m != nil && m.VerificationParameters != nil {
		return *m.VerificationParameters
	}
	return ""
}

func (m *BidResponse_Ad_ImpressionTrackingResource) GetVendorKey() string {
	if m != nil && m.VendorKey != nil {
		return *m.VendorKey
	}
	return ""
}

// An ad that will be rendered by an SDK known to the buyer. This can only
// be used when the BidRequest included a mobile.installed_sdk submessage.
type BidResponse_Ad_SdkRenderedAd struct {
	// The identifier for the SDK that will render the ad. Must match a
	// mobile.installed_sdk.id sent in the corresponding bid request.
	Id *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Data to pass to the SDK in order to render the ad. This data is opaque
	// to the publisher and to Google.
	RenderingData        *string  `protobuf:"bytes,2,opt,name=rendering_data,json=renderingData" json:"rendering_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BidResponse_Ad_SdkRenderedAd) Reset()         { *m = BidResponse_Ad_SdkRenderedAd{} }
func (m *BidResponse_Ad_SdkRenderedAd) String() string { return proto.CompactTextString(m) }
func (*BidResponse_Ad_SdkRenderedAd) ProtoMessage()    {}
func (*BidResponse_Ad_SdkRenderedAd) Descriptor() ([]byte, []int) {
	return fileDescriptor_c140a7d1115335c3, []int{1, 0, 3}
}

func (m *BidResponse_Ad_SdkRenderedAd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BidResponse_Ad_SdkRenderedAd.Unmarshal(m, b)
}
func (m *BidResponse_Ad_SdkRenderedAd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BidResponse_Ad_SdkRenderedAd.Marshal(b, m, deterministic)
}
func (m *BidResponse_Ad_SdkRenderedAd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BidResponse_Ad_SdkRenderedAd.Merge(m, src)
}
func (m *BidResponse_Ad_SdkRenderedAd) XXX_Size() int {
	return xxx_messageInfo_BidResponse_Ad_SdkRenderedAd.Size(m)
}
func (m *BidResponse_Ad_SdkRenderedAd) XXX_DiscardUnknown() {
	xxx_messageInfo_BidResponse_Ad_SdkRenderedAd.DiscardUnknown(m)
}

var xxx_messageInfo_BidResponse_Ad_SdkRenderedAd proto.InternalMessageInfo

func (m *BidResponse_Ad_SdkRenderedAd) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *BidResponse_Ad_SdkRenderedAd) GetRenderingData() string {
	if m != nil && m.RenderingData != nil {
		return *m.RenderingData
	}
	return ""
}

func init() {
	proto.RegisterEnum("BidRequest_UserDataTreatment", BidRequest_UserDataTreatment_name, BidRequest_UserDataTreatment_value)
	proto.RegisterEnum("BidRequest_AuctionType", BidRequest_AuctionType_name, BidRequest_AuctionType_value)
	proto.RegisterEnum("BidRequest_PublisherType", BidRequest_PublisherType_name, BidRequest_PublisherType_value)
	proto.RegisterEnum("BidRequest_Device_DeviceType", BidRequest_Device_DeviceType_name, BidRequest_Device_DeviceType_value)
	proto.RegisterEnum("BidRequest_Device_ScreenOrientation", BidRequest_Device_ScreenOrientation_name, BidRequest_Device_ScreenOrientation_value)
	proto.RegisterEnum("BidRequest_Video_Placement", BidRequest_Video_Placement_name, BidRequest_Video_Placement_value)
	proto.RegisterEnum("BidRequest_Video_VideoPlaybackMethod", BidRequest_Video_VideoPlaybackMethod_name, BidRequest_Video_VideoPlaybackMethod_value)
	proto.RegisterEnum("BidRequest_Video_SkippableBidRequestType", BidRequest_Video_SkippableBidRequestType_name, BidRequest_Video_SkippableBidRequestType_value)
	proto.RegisterEnum("BidRequest_Video_VideoProtocol", BidRequest_Video_VideoProtocol_name, BidRequest_Video_VideoProtocol_value)
	proto.RegisterEnum("BidRequest_Video_VideoFormat", BidRequest_Video_VideoFormat_name, BidRequest_Video_VideoFormat_value)
	proto.RegisterEnum("BidRequest_Video_EndCapSupport", BidRequest_Video_EndCapSupport_name, BidRequest_Video_EndCapSupport_value)
	proto.RegisterEnum("BidRequest_Video_InventoryType", BidRequest_Video_InventoryType_name, BidRequest_Video_InventoryType_value)
	proto.RegisterEnum("BidRequest_Video_CompanionSlot_CreativeFormat", BidRequest_Video_CompanionSlot_CreativeFormat_name, BidRequest_Video_CompanionSlot_CreativeFormat_value)
	proto.RegisterEnum("BidRequest_AdSlot_SlotVisibility", BidRequest_AdSlot_SlotVisibility_name, BidRequest_AdSlot_SlotVisibility_value)
	proto.RegisterEnum("BidRequest_AdSlot_IFramingState", BidRequest_AdSlot_IFramingState_name, BidRequest_AdSlot_IFramingState_value)
	proto.RegisterEnum("BidRequest_AdSlot_IFramingDepth", BidRequest_AdSlot_IFramingDepth_name, BidRequest_AdSlot_IFramingDepth_value)
	proto.RegisterEnum("BidRequest_AdSlot_NativePlacementType", BidRequest_AdSlot_NativePlacementType_name, BidRequest_AdSlot_NativePlacementType_value)
	proto.RegisterEnum("BidRequest_AdSlot_MediationStatus", BidRequest_AdSlot_MediationStatus_name, BidRequest_AdSlot_MediationStatus_value)
	proto.RegisterEnum("BidRequest_AdSlot_NonBrowserSource", BidRequest_AdSlot_NonBrowserSource_name, BidRequest_AdSlot_NonBrowserSource_value)
	proto.RegisterEnum("BidRequest_AdSlot_Renderer", BidRequest_AdSlot_Renderer_name, BidRequest_AdSlot_Renderer_value)
	proto.RegisterEnum("BidRequest_AdSlot_AmpAdRequestType", BidRequest_AdSlot_AmpAdRequestType_name, BidRequest_AdSlot_AmpAdRequestType_value)
	proto.RegisterEnum("BidRequest_AdSlot_AmpPage", BidRequest_AdSlot_AmpPage_name, BidRequest_AdSlot_AmpPage_value)
	proto.RegisterEnum("BidRequest_AdSlot_AmpAdRequirementType", BidRequest_AdSlot_AmpAdRequirementType_name, BidRequest_AdSlot_AmpAdRequirementType_value)
	proto.RegisterEnum("BidRequest_AdSlot_AllowedAdType", BidRequest_AdSlot_AllowedAdType_name, BidRequest_AdSlot_AllowedAdType_value)
	proto.RegisterEnum("BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType", BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_name, BidRequest_AdSlot_MatchingAdData_DirectDeal_DealType_value)
	proto.RegisterEnum("BidRequest_AdSlot_NativeAdTemplate_Fields", BidRequest_AdSlot_NativeAdTemplate_Fields_name, BidRequest_AdSlot_NativeAdTemplate_Fields_value)
	proto.RegisterEnum("BidRequest_AdSlot_NativeAdTemplate_LayoutType", BidRequest_AdSlot_NativeAdTemplate_LayoutType_name, BidRequest_AdSlot_NativeAdTemplate_LayoutType_value)
	proto.RegisterEnum("BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType", BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_name, BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings_AutoRefreshType_value)
	proto.RegisterEnum("BidRequest_AdSlot_StickySettings_Stickiness", BidRequest_AdSlot_StickySettings_Stickiness_name, BidRequest_AdSlot_StickySettings_Stickiness_value)
	proto.RegisterEnum("BidResponse_Ad_AdSlot_ExchangeDealType", BidResponse_Ad_AdSlot_ExchangeDealType_name, BidResponse_Ad_AdSlot_ExchangeDealType_value)
	proto.RegisterEnum("BidResponse_Ad_ImpressionTrackingResource_Context", BidResponse_Ad_ImpressionTrackingResource_Context_name, BidResponse_Ad_ImpressionTrackingResource_Context_value)
	proto.RegisterType((*BidRequest)(nil), "BidRequest")
	proto.RegisterType((*BidRequest_Hyperlocal)(nil), "BidRequest.Hyperlocal")
	proto.RegisterType((*BidRequest_Hyperlocal_Point)(nil), "BidRequest.Hyperlocal.Point")
	proto.RegisterType((*BidRequest_HyperlocalSet)(nil), "BidRequest.HyperlocalSet")
	proto.RegisterType((*BidRequest_UserList)(nil), "BidRequest.UserList")
	proto.RegisterType((*BidRequest_Vertical)(nil), "BidRequest.Vertical")
	proto.RegisterType((*BidRequest_Device)(nil), "BidRequest.Device")
	proto.RegisterType((*BidRequest_Device_OsVersion)(nil), "BidRequest.Device.OsVersion")
	proto.RegisterType((*BidRequest_KeyValue)(nil), "BidRequest.KeyValue")
	proto.RegisterType((*BidRequest_Mobile)(nil), "BidRequest.Mobile")
	proto.RegisterType((*BidRequest_Mobile_InstalledSdk)(nil), "BidRequest.Mobile.InstalledSdk")
	proto.RegisterType((*BidRequest_Mobile_InstalledSdk_Version)(nil), "BidRequest.Mobile.InstalledSdk.Version")
	proto.RegisterType((*BidRequest_Video)(nil), "BidRequest.Video")
	proto.RegisterType((*BidRequest_Video_CompanionSlot)(nil), "BidRequest.Video.CompanionSlot")
	proto.RegisterType((*BidRequest_Video_ContentAttributes)(nil), "BidRequest.Video.ContentAttributes")
	proto.RegisterType((*BidRequest_AdSlot)(nil), "BidRequest.AdSlot")
	proto.RegisterType((*BidRequest_AdSlot_ConsentedProvidersSettings)(nil), "BidRequest.AdSlot.ConsentedProvidersSettings")
	proto.RegisterType((*BidRequest_AdSlot_ExcludedCreative)(nil), "BidRequest.AdSlot.ExcludedCreative")
	proto.RegisterType((*BidRequest_AdSlot_MatchingAdData)(nil), "BidRequest.AdSlot.MatchingAdData")
	proto.RegisterType((*BidRequest_AdSlot_MatchingAdData_BuyerPricingRule)(nil), "BidRequest.AdSlot.MatchingAdData.BuyerPricingRule")
	proto.RegisterType((*BidRequest_AdSlot_MatchingAdData_DirectDeal)(nil), "BidRequest.AdSlot.MatchingAdData.DirectDeal")
	proto.RegisterType((*BidRequest_AdSlot_ExchangeBidding)(nil), "BidRequest.AdSlot.ExchangeBidding")
	proto.RegisterType((*BidRequest_AdSlot_NativeAdTemplate)(nil), "BidRequest.AdSlot.NativeAdTemplate")
	proto.RegisterType((*BidRequest_AdSlot_AutoRefresh)(nil), "BidRequest.AdSlot.AutoRefresh")
	proto.RegisterType((*BidRequest_AdSlot_AutoRefresh_AutoRefreshSettings)(nil), "BidRequest.AdSlot.AutoRefresh.AutoRefreshSettings")
	proto.RegisterType((*BidRequest_AdSlot_StickySettings)(nil), "BidRequest.AdSlot.StickySettings")
	proto.RegisterType((*BidRequest_AdSlot_BuyerGeneratedRequestData)(nil), "BidRequest.AdSlot.BuyerGeneratedRequestData")
	proto.RegisterType((*BidRequest_AdSlot_BuyerGeneratedRequestData_SourceApp)(nil), "BidRequest.AdSlot.BuyerGeneratedRequestData.SourceApp")
	proto.RegisterType((*BidRequest_BidResponseFeedback)(nil), "BidRequest.BidResponseFeedback")
	proto.RegisterType((*BidResponse)(nil), "BidResponse")
	proto.RegisterType((*BidResponse_Ad)(nil), "BidResponse.Ad")
	proto.RegisterType((*BidResponse_Ad_NativeAd)(nil), "BidResponse.Ad.NativeAd")
	proto.RegisterType((*BidResponse_Ad_NativeAd_Image)(nil), "BidResponse.Ad.NativeAd.Image")
	proto.RegisterType((*BidResponse_Ad_AdSlot)(nil), "BidResponse.Ad.AdSlot")
	proto.RegisterType((*BidResponse_Ad_ImpressionTrackingResource)(nil), "BidResponse.Ad.ImpressionTrackingResource")
	proto.RegisterType((*BidResponse_Ad_SdkRenderedAd)(nil), "BidResponse.Ad.SdkRenderedAd")
}

func init() { proto.RegisterFile("realtime-bidding.proto", fileDescriptor_c140a7d1115335c3) }

var fileDescriptor_c140a7d1115335c3 = []byte{
	// 7072 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x7b, 0xcd, 0x73, 0xe3, 0x48,
	0x96, 0x9f, 0x48, 0xea, 0x8b, 0x8f, 0x22, 0x09, 0xa5, 0x54, 0x12, 0xc5, 0xaa, 0xea, 0x52, 0xb3,
	0xab, 0xab, 0xd4, 0x5f, 0x9a, 0x6a, 0x75, 0x4f, 0xcf, 0xb4, 0x7a, 0xbc, 0xbb, 0x10, 0x09, 0x49,
	0x98, 0x22, 0x09, 0x76, 0x12, 0x52, 0x55, 0xaf, 0xbd, 0x0b, 0x43, 0x44, 0x8a, 0xc2, 0x88, 0x04,
	0x30, 0x00, 0x58, 0x55, 0x9a, 0xd8, 0x43, 0x87, 0x2f, 0xb3, 0x11, 0x73, 0xb2, 0x7d, 0xf3, 0xd5,
	0x27, 0x9f, 0x36, 0xf6, 0xe4, 0x08, 0x3b, 0xc2, 0x11, 0x0e, 0x5f, 0xbc, 0xff, 0x80, 0x0f, 0xbe,
	0xd9, 0x27, 0xff, 0x17, 0xde, 0xc8, 0x97, 0xf8, 0xe2, 0x87, 0xfa, 0x23, 0x62, 0xea, 0xa0, 0x22,
	0xde, 0xfb, 0xe5, 0xcb, 0xcc, 0x97, 0x89, 0x97, 0xef, 0xbd, 0x7c, 0x80, 0x1d, 0x9f, 0x99, 0xa3,
	0xd0, 0x1e, 0xb3, 0xcf, 0xae, 0x6c, 0xcb, 0xb2, 0x9d, 0xe1, 0xa1, 0xe7, 0xbb, 0xa1, 0xdb, 0xf8,
	0x7f, 0x21, 0xc0, 0x89, 0x6d, 0x51, 0xf6, 0xfb, 0x09, 0x0b, 0x42, 0x52, 0x81, 0xbc, 0x6d, 0xd5,
	0xf2, 0xfb, 0xf9, 0x83, 0x0d, 0x9a, 0xb7, 0x2d, 0x7c, 0xf6, 0x6a, 0xcb, 0xfb, 0x39, 0x7c, 0xf6,
	0x48, 0x07, 0xb6, 0x26, 0x01, 0xf3, 0x0d, 0xcb, 0x0c, 0x4d, 0x23, 0xf4, 0x99, 0x19, 0x8e, 0x99,
	0x13, 0xd6, 0x3e, 0xdf, 0x2f, 0x1c, 0x54, 0x8e, 0x1e, 0x1f, 0xa6, 0x92, 0x0e, 0x2f, 0x02, 0xe6,
	0xb7, 0xcc, 0xd0, 0xd4, 0x63, 0x10, 0xdd, 0x9c, 0xcc, 0x92, 0xc8, 0x53, 0xa8, 0x0c, 0x5d, 0x77,
	0x38, 0x62, 0x06, 0x4a, 0xb5, 0xad, 0xda, 0x83, 0xfd, 0xdc, 0x41, 0x91, 0x6e, 0x08, 0x2a, 0x97,
	0xa1, 0x5a, 0xe4, 0x14, 0xf6, 0x07, 0xae, 0x13, 0x84, 0xbe, 0x69, 0x3b, 0xcc, 0x32, 0x26, 0x81,
	0x39, 0x64, 0xc6, 0x4c, 0xbb, 0x5f, 0x60, 0xbb, 0x47, 0x19, 0xdc, 0x05, 0x87, 0x9d, 0x65, 0xe5,
	0x7c, 0x08, 0x95, 0x81, 0xeb, 0xde, 0xda, 0xcc, 0x78, 0xc3, 0xfc, 0xc0, 0x76, 0x9d, 0xda, 0xf6,
	0x7e, 0xee, 0xa0, 0x4c, 0xcb, 0x82, 0x7a, 0x29, 0x88, 0xe4, 0x53, 0x20, 0x11, 0x8c, 0xf7, 0x13,
	0xb0, 0x81, 0xeb, 0x58, 0x41, 0xed, 0xc9, 0x7e, 0xee, 0x60, 0x85, 0x4a, 0x82, 0x23, 0x0f, 0x59,
	0x5f, 0xd0, 0xc9, 0xc7, 0xb0, 0x79, 0xe3, 0x06, 0x21, 0xb3, 0x8c, 0xb1, 0x19, 0x0e, 0x6e, 0x50,
	0x33, 0xb5, 0x0f, 0x51, 0x61, 0x55, 0xc1, 0xe8, 0x70, 0x3a, 0x9f, 0x37, 0x69, 0xc3, 0x07, 0xf3,
	0x13, 0x99, 0x6f, 0xfd, 0x02, 0x5b, 0x3f, 0x99, 0x9d, 0xcb, 0xf9, 0x8c, 0xb4, 0xc7, 0x00, 0x38,
	0x7b, 0x73, 0xc8, 0x97, 0x60, 0x15, 0x15, 0x50, 0xe4, 0x14, 0x99, 0x13, 0xc8, 0x27, 0xb0, 0xe9,
	0x4d, 0xae, 0x46, 0x76, 0x70, 0xc3, 0x7c, 0x63, 0xe0, 0x4e, 0x9c, 0xd0, 0xbf, 0xab, 0xfd, 0x0a,
	0x51, 0x52, 0xc2, 0x68, 0x0a, 0x3a, 0x79, 0x06, 0xd5, 0x21, 0x73, 0x8d, 0x81, 0x6f, 0x87, 0xcc,
	0xb7, 0x4d, 0xae, 0xd1, 0xe7, 0x38, 0xe1, 0xf2, 0x90, 0xb9, 0xcd, 0x88, 0xaa, 0x5a, 0xe4, 0x09,
	0x94, 0x3c, 0x37, 0x08, 0xcd, 0x91, 0x31, 0x70, 0x2d, 0x56, 0x7b, 0x1f, 0xc5, 0x81, 0x20, 0x35,
	0x5d, 0x8b, 0x71, 0xe5, 0x65, 0x00, 0x86, 0xe7, 0xb3, 0x6b, 0xfb, 0x5d, 0xad, 0x11, 0x75, 0x9b,
	0xe0, 0x7a, 0x48, 0x27, 0xbf, 0x86, 0x1a, 0x73, 0x06, 0xfe, 0x9d, 0xc7, 0x35, 0x70, 0x73, 0xe7,
	0x31, 0x7f, 0xe4, 0x0e, 0xcc, 0x91, 0x11, 0xb0, 0xb0, 0x76, 0x80, 0x5a, 0xd8, 0x49, 0xf8, 0xe7,
	0x09, 0xbb, 0xcf, 0x42, 0xf2, 0x57, 0x50, 0x99, 0xc1, 0xff, 0x72, 0x3f, 0x77, 0x50, 0x3a, 0xda,
	0xcb, 0xee, 0xc1, 0xa9, 0x26, 0xb4, 0x7c, 0x33, 0x25, 0xe1, 0x39, 0x54, 0xf9, 0xfb, 0xf0, 0x07,
	0xd7, 0x61, 0x86, 0x7b, 0x7d, 0xcd, 0x45, 0xec, 0xe1, 0x94, 0x2b, 0x31, 0x59, 0x43, 0x2a, 0x79,
	0x0e, 0x65, 0xd4, 0xf3, 0x1b, 0xe6, 0x87, 0xf6, 0xc0, 0x1c, 0xd5, 0xde, 0xdb, 0x2f, 0x1c, 0xac,
	0x9c, 0xe4, 0xa5, 0x1c, 0xdd, 0xe0, 0x8c, 0xcb, 0x88, 0x4e, 0x3e, 0x07, 0x54, 0xbf, 0x31, 0xb2,
	0x83, 0xb0, 0xb6, 0xbf, 0x5f, 0x38, 0x28, 0x1d, 0x6d, 0xcf, 0xbe, 0x12, 0x6d, 0x3b, 0x08, 0xe9,
	0xfa, 0x24, 0xfa, 0x45, 0xde, 0x87, 0x8d, 0x74, 0x91, 0x6c, 0xab, 0xf6, 0x6b, 0x54, 0x54, 0x29,
	0xa1, 0xa9, 0x16, 0xdf, 0x60, 0x01, 0x1b, 0x8d, 0x98, 0x6f, 0x38, 0x2c, 0x7c, 0xeb, 0xfa, 0xb7,
	0x1c, 0xf7, 0x11, 0x8e, 0xb4, 0x2a, 0x18, 0x5d, 0x41, 0x57, 0x2d, 0xbe, 0x25, 0x3c, 0xd3, 0x0f,
	0x1d, 0x21, 0xec, 0xcb, 0xfd, 0xdc, 0xc1, 0x2a, 0x2d, 0x46, 0x14, 0xd5, 0x22, 0x12, 0x14, 0x26,
	0xfe, 0xa8, 0x56, 0xc2, 0x4e, 0xf8, 0x4f, 0xde, 0xbf, 0xe9, 0xb8, 0xce, 0xdd, 0xd8, 0x9d, 0x04,
	0xbc, 0xc9, 0x96, 0xe8, 0x3f, 0xa1, 0xa9, 0x16, 0xdf, 0x47, 0x16, 0x0b, 0xd9, 0x80, 0x2f, 0xd1,
	0xc8, 0x74, 0x86, 0x13, 0x73, 0xc8, 0x6a, 0x1b, 0xfb, 0x05, 0xbe, 0xa0, 0x31, 0xa3, 0x1d, 0xd1,
	0x89, 0x9c, 0x01, 0x27, 0xfa, 0x2a, 0xcf, 0xab, 0x22, 0xd6, 0x59, 0x2a, 0x22, 0xd1, 0xe2, 0xaf,
	0x61, 0x27, 0x11, 0x31, 0x70, 0x9d, 0x90, 0x39, 0xa1, 0x31, 0x32, 0xaf, 0xd8, 0xa8, 0x56, 0x4f,
	0xf4, 0xbe, 0x1d, 0x23, 0x9a, 0x02, 0xd0, 0xe6, 0x7c, 0xdc, 0xc4, 0xc2, 0x2a, 0xfc, 0x7e, 0xc2,
	0xfc, 0x3b, 0x3e, 0x9f, 0x6f, 0x70, 0x3e, 0x65, 0x41, 0xfe, 0x96, 0x53, 0x55, 0x8b, 0x9c, 0xc3,
	0x86, 0x39, 0x19, 0x84, 0xb6, 0xeb, 0x18, 0xe1, 0x9d, 0xc7, 0x6a, 0xbf, 0xd9, 0xcf, 0x1d, 0x54,
	0x8e, 0x76, 0xb3, 0xe3, 0x93, 0x05, 0x5f, 0xbf, 0xf3, 0xd8, 0xf1, 0x46, 0x5f, 0x69, 0x6a, 0xdd,
	0x96, 0xd1, 0xa3, 0x6a, 0x53, 0xa1, 0x25, 0x33, 0x65, 0x91, 0x8f, 0x61, 0xd5, 0x62, 0x6f, 0xec,
	0x01, 0xab, 0x7d, 0x85, 0xbb, 0x8f, 0x64, 0x65, 0xb4, 0x90, 0x43, 0x23, 0x04, 0xdf, 0x1d, 0xb7,
	0xec, 0xce, 0x78, 0x63, 0x8e, 0x26, 0xac, 0xf6, 0x6c, 0x5e, 0x25, 0x2f, 0xd9, 0xdd, 0x25, 0xe7,
	0xd1, 0xf5, 0xdb, 0xe8, 0x17, 0x17, 0x3f, 0x76, 0xaf, 0xec, 0x11, 0xab, 0x3d, 0x9a, 0x17, 0xdf,
	0x41, 0x0e, 0x8d, 0x10, 0xe4, 0x39, 0xac, 0xbc, 0xb1, 0x2d, 0xe6, 0xd6, 0x1e, 0x23, 0x74, 0x73,
	0x4a, 0xdb, 0x9c, 0x41, 0x05, 0x9f, 0x7c, 0x03, 0xf5, 0x74, 0xcb, 0x05, 0x2c, 0x0c, 0x6d, 0x67,
	0x18, 0xe0, 0x9e, 0xe5, 0x0a, 0xfb, 0x18, 0xf7, 0xcc, 0x6e, 0x82, 0xe8, 0x47, 0x00, 0xbe, 0x5b,
	0x55, 0x8b, 0xbc, 0x86, 0x4a, 0xda, 0x18, 0x95, 0xf7, 0x05, 0x2a, 0x6f, 0xea, 0xb5, 0xeb, 0xc5,
	0x08, 0x54, 0xdf, 0xce, 0x45, 0xf7, 0x65, 0x57, 0x7b, 0xd5, 0x35, 0x7a, 0x17, 0x27, 0x6d, 0xb5,
	0x7f, 0xae, 0x50, 0x43, 0xff, 0xae, 0xa7, 0xd0, 0xb2, 0x97, 0x85, 0xf1, 0xb9, 0x9a, 0x56, 0x30,
	0x72, 0xc3, 0x5a, 0x05, 0x75, 0x33, 0x35, 0x57, 0xd9, 0xea, 0x8f, 0xdc, 0x90, 0x46, 0x08, 0xd2,
	0x87, 0x07, 0x57, 0xb6, 0x65, 0xf8, 0x2c, 0xf0, 0x5c, 0x27, 0x60, 0xc6, 0x35, 0x63, 0xd6, 0x95,
	0x39, 0xb8, 0xad, 0x7d, 0x8a, 0x4d, 0x9f, 0x64, 0x9b, 0xe2, 0x4f, 0x81, 0x3b, 0x8d, 0x60, 0x74,
	0xeb, 0x6a, 0x9e, 0x48, 0x5e, 0xc0, 0x76, 0x22, 0xd0, 0x62, 0xa6, 0x35, 0xb2, 0x1d, 0x66, 0x8c,
	0x83, 0xda, 0xd7, 0xf8, 0xaa, 0x91, 0x98, 0xd7, 0x8a, 0x58, 0x9d, 0x80, 0xbc, 0x07, 0x6b, 0x76,
	0x60, 0x84, 0x2c, 0x08, 0x6b, 0xd5, 0xfd, 0xdc, 0xc1, 0xfa, 0xf1, 0xca, 0xb5, 0x39, 0x0a, 0x18,
	0x5d, 0xb5, 0x03, 0x9d, 0x1f, 0xa6, 0x82, 0xef, 0xd9, 0xce, 0xb0, 0xb6, 0x39, 0xc3, 0xef, 0xd9,
	0xce, 0x90, 0xc8, 0x50, 0xe7, 0x7c, 0x9f, 0x59, 0x36, 0xee, 0xf6, 0xd0, 0x35, 0xae, 0x98, 0x61,
	0x0f, 0x1d, 0xd7, 0x67, 0x56, 0xed, 0xb3, 0x6c, 0x93, 0x1d, 0x3b, 0xe8, 0xc5, 0x38, 0xdd, 0x3d,
	0x61, 0xaa, 0x00, 0xd5, 0xff, 0x98, 0x03, 0x48, 0xad, 0x1c, 0xf9, 0x0a, 0xd6, 0x06, 0xae, 0xef,
	0x30, 0x3f, 0xa8, 0xe5, 0x50, 0x15, 0x8f, 0x16, 0x9b, 0xc3, 0xc3, 0x9e, 0x6b, 0x3b, 0x21, 0x8d,
	0xc1, 0x75, 0x19, 0x56, 0x90, 0x42, 0xea, 0xb0, 0x3e, 0x32, 0x43, 0x3b, 0x9c, 0x58, 0xac, 0x96,
	0xdb, 0xcf, 0x1d, 0xe4, 0x69, 0xf2, 0x4c, 0x1e, 0x41, 0x71, 0xe4, 0x3a, 0x43, 0xc1, 0xcc, 0x23,
	0x33, 0x25, 0xd4, 0xff, 0x3e, 0x07, 0xe5, 0x69, 0x13, 0xfd, 0x15, 0x40, 0x6a, 0x71, 0xa3, 0xf1,
	0xec, 0x2c, 0x1e, 0x0f, 0xcd, 0x20, 0xc9, 0x5f, 0xc2, 0xc6, 0x80, 0x39, 0x21, 0xf3, 0x0d, 0x8f,
	0x8f, 0x09, 0xbb, 0xfa, 0xb1, 0x99, 0x94, 0x44, 0x0b, 0x7c, 0xa8, 0x7f, 0x03, 0xeb, 0xb1, 0xa9,
	0x8d, 0x1c, 0x1a, 0x3e, 0x95, 0x02, 0x3a, 0x34, 0x4f, 0xa0, 0x94, 0x3d, 0xd5, 0xf3, 0xb8, 0xb8,
	0x60, 0x26, 0xe7, 0x79, 0xfd, 0x08, 0xd6, 0x13, 0x53, 0x14, 0x37, 0xce, 0x1f, 0xac, 0x60, 0xe3,
	0x1d, 0x58, 0x7d, 0xcb, 0xec, 0xe1, 0x4d, 0x88, 0x1e, 0x52, 0x9e, 0x46, 0x4f, 0xf5, 0x7f, 0x5a,
	0x85, 0x55, 0xf1, 0xb6, 0x93, 0x2e, 0x94, 0xc4, 0xfb, 0x2e, 0xde, 0x8e, 0x1c, 0xbe, 0x1d, 0x8f,
	0xe7, 0xcd, 0x42, 0xf4, 0x1f, 0xbe, 0x21, 0x95, 0xf8, 0x0d, 0x69, 0x29, 0x97, 0xdc, 0xc4, 0x80,
	0x95, 0xf0, 0xf8, 0x82, 0x78, 0x23, 0x33, 0xbc, 0x76, 0xfd, 0x31, 0x0e, 0xb6, 0x48, 0x93, 0x67,
	0xb2, 0x03, 0x2b, 0x57, 0xbe, 0xe9, 0x58, 0xb5, 0x02, 0x67, 0x1c, 0x2f, 0x51, 0xf1, 0xc8, 0xe9,
	0x63, 0xd7, 0x62, 0x23, 0xf4, 0xdb, 0x90, 0x8e, 0x8f, 0xe4, 0x1b, 0x00, 0x37, 0x48, 0x7c, 0x9f,
	0x95, 0x79, 0xb5, 0x46, 0x43, 0xd3, 0x82, 0xc8, 0x15, 0xa2, 0x45, 0x37, 0xfe, 0xc9, 0x8f, 0x96,
	0x81, 0xe9, 0xfb, 0xb6, 0x38, 0x5a, 0x56, 0x51, 0xa1, 0xc5, 0x88, 0xa2, 0x5a, 0xe4, 0x29, 0x6c,
	0x04, 0x03, 0x9f, 0x31, 0xc7, 0x78, 0x6b, 0x5b, 0xe1, 0x4d, 0x6d, 0x8d, 0x2b, 0xf6, 0x38, 0xf7,
	0x82, 0x96, 0x04, 0xf9, 0x15, 0xa7, 0x92, 0x67, 0x50, 0x8e, 0x50, 0x37, 0x42, 0x8f, 0xeb, 0x31,
	0x2c, 0x6a, 0x7d, 0x8e, 0x64, 0xf2, 0x1b, 0xd8, 0x8b, 0x70, 0x9e, 0xfd, 0x8e, 0x8d, 0x0c, 0xdf,
	0x0c, 0x6d, 0xd7, 0x18, 0xdb, 0xa3, 0x91, 0x1d, 0xd4, 0x8a, 0x71, 0x9b, 0x1d, 0x81, 0xe9, 0x71,
	0x08, 0xe5, 0x88, 0x0e, 0x02, 0xc8, 0x0d, 0x90, 0xa8, 0xb5, 0xeb, 0xdb, 0xcc, 0x09, 0x39, 0xcb,
	0xa9, 0x01, 0x2e, 0xc5, 0xd3, 0x05, 0xf3, 0xed, 0x23, 0x58, 0x4b, 0xb1, 0xc7, 0x5b, 0xf1, 0x8a,
	0x68, 0x54, 0x55, 0xba, 0xba, 0xac, 0xab, 0x5a, 0x97, 0x6e, 0x06, 0xb3, 0x38, 0xf2, 0x11, 0x48,
	0x37, 0xa6, 0x6f, 0xbd, 0x35, 0xfd, 0xd4, 0xa7, 0x14, 0xa7, 0x6b, 0x35, 0xa6, 0x47, 0xfa, 0xab,
	0x77, 0xa0, 0x98, 0xe8, 0x95, 0x6c, 0xc3, 0xca, 0xd8, 0xfc, 0x9d, 0xeb, 0xe3, 0xfe, 0x58, 0xa1,
	0xe2, 0x01, 0xa9, 0xb6, 0xe3, 0xfa, 0xd1, 0xae, 0x14, 0x0f, 0x82, 0x3a, 0xf0, 0x5d, 0x5c, 0x65,
	0xa4, 0x0e, 0x7c, 0xb7, 0xf1, 0xa7, 0x1c, 0x40, 0xba, 0x85, 0x08, 0x81, 0x99, 0x4d, 0x24, 0x2d,
	0x91, 0x4d, 0x28, 0x9f, 0xab, 0x67, 0xe7, 0x0a, 0x3f, 0xba, 0xce, 0xb5, 0xae, 0x22, 0xe5, 0x08,
	0xc0, 0xaa, 0x2e, 0x9f, 0xb4, 0x15, 0x5d, 0xca, 0x93, 0x07, 0xb0, 0xd9, 0x53, 0x68, 0x5f, 0xeb,
	0xca, 0x6d, 0xa3, 0xa9, 0x75, 0x7a, 0x17, 0xba, 0x42, 0xa5, 0x02, 0x91, 0x60, 0xa3, 0xa9, 0x75,
	0xbb, 0x4a, 0x53, 0x57, 0x5a, 0x86, 0x7e, 0x29, 0x2d, 0x73, 0xca, 0x99, 0xdc, 0x51, 0x8c, 0xa6,
	0xd6, 0xed, 0x6b, 0x6d, 0x45, 0x5a, 0x21, 0x55, 0x28, 0xf5, 0x15, 0xdd, 0xd0, 0xb5, 0x9e, 0x71,
	0xa2, 0xbd, 0x96, 0x56, 0x1b, 0x2a, 0x6c, 0xce, 0x29, 0x91, 0xec, 0xc2, 0x22, 0x35, 0x4a, 0x4b,
	0x64, 0x03, 0xd6, 0x7b, 0x1a, 0xd5, 0xa9, 0xac, 0xea, 0x52, 0x8e, 0x94, 0xa1, 0xd8, 0x96, 0xbb,
	0xad, 0x7e, 0x53, 0xee, 0x29, 0x52, 0x9e, 0xbf, 0x7f, 0xf1, 0x49, 0xc8, 0xfd, 0x95, 0x5b, 0x76,
	0x87, 0x4a, 0x2a, 0x52, 0xfe, 0x93, 0x2b, 0x43, 0x1c, 0xa0, 0xe2, 0x5d, 0x10, 0x0f, 0xf5, 0xff,
	0xbb, 0x0e, 0xab, 0xe2, 0x38, 0x24, 0x8f, 0x60, 0xd5, 0x0e, 0x0c, 0xd3, 0xf3, 0x70, 0x07, 0x26,
	0xf6, 0x73, 0xc5, 0x0e, 0x64, 0xcf, 0x23, 0x0f, 0x60, 0xd5, 0xf4, 0xbc, 0x78, 0x03, 0x17, 0xe9,
	0x8a, 0xe9, 0x79, 0xaa, 0x45, 0xfe, 0x05, 0xec, 0xda, 0x81, 0x61, 0x73, 0x0b, 0x12, 0x84, 0x76,
	0x68, 0x9b, 0x23, 0xc3, 0x17, 0x5b, 0x04, 0x77, 0x4d, 0x22, 0xe5, 0x81, 0x1d, 0xa8, 0x19, 0x50,
	0x1c, 0x34, 0x1d, 0x80, 0xc4, 0xa5, 0x0e, 0xcc, 0x90, 0x0d, 0x5d, 0xf4, 0x3b, 0x82, 0x5a, 0x89,
	0xfb, 0x2a, 0xb4, 0x62, 0x7a, 0x5e, 0x33, 0x22, 0xab, 0x56, 0x40, 0x7e, 0x83, 0x1d, 0x89, 0x13,
	0xdb, 0x78, 0xcb, 0xae, 0x0c, 0xd7, 0x0b, 0xed, 0xb1, 0xfd, 0x07, 0x66, 0x4d, 0x9f, 0x10, 0xdb,
	0x76, 0x20, 0xe6, 0xf3, 0x8a, 0x5d, 0x69, 0x31, 0x64, 0xda, 0x5b, 0x36, 0x2d, 0xf4, 0xaf, 0x02,
	0xdb, 0x19, 0xf2, 0xf9, 0x6c, 0xcf, 0x78, 0xcb, 0x72, 0xca, 0x16, 0x91, 0xcf, 0x0c, 0xfe, 0x21,
	0xe2, 0xcb, 0xe6, 0x14, 0xec, 0x08, 0x1e, 0x64, 0xdc, 0x71, 0x33, 0xb8, 0x61, 0x96, 0x61, 0x5b,
	0xd7, 0x26, 0x46, 0x65, 0x1b, 0x74, 0x2b, 0xf5, 0xc5, 0x91, 0xa7, 0x5a, 0xd7, 0x26, 0x37, 0xa8,
	0x59, 0xe4, 0x23, 0x44, 0xc2, 0x4d, 0x0a, 0xf8, 0x6b, 0xf8, 0x78, 0x3e, 0xe8, 0xb9, 0x77, 0x1e,
	0x3b, 0xd8, 0xfe, 0xd9, 0x6c, 0xec, 0xa3, 0x2c, 0x9e, 0xd7, 0xd9, 0xa2, 0xc8, 0x70, 0x46, 0xe2,
	0x63, 0x94, 0xf8, 0x78, 0x56, 0xe2, 0xb4, 0x20, 0x1d, 0x9e, 0xff, 0xd0, 0x20, 0xb3, 0x33, 0xdc,
	0x45, 0x79, 0x1f, 0xdc, 0x3b, 0xc2, 0x8c, 0x6e, 0x64, 0x78, 0xbc, 0x20, 0xde, 0xcb, 0xc8, 0x7a,
	0x0f, 0x65, 0xd5, 0xe7, 0x22, 0xbd, 0x54, 0xc4, 0x1e, 0xac, 0xf3, 0xbd, 0xe5, 0x98, 0x63, 0x56,
	0xab, 0xe1, 0x9e, 0x5d, 0x33, 0x3d, 0xaf, 0x6b, 0x8e, 0x19, 0xb7, 0xc8, 0x9c, 0xc5, 0x6d, 0xa3,
	0x33, 0xc4, 0xd8, 0x25, 0x4f, 0x8b, 0xa6, 0xe7, 0x51, 0x24, 0x90, 0x16, 0x94, 0x6d, 0x87, 0xc7,
	0x5b, 0x23, 0x66, 0x19, 0x81, 0x75, 0x1b, 0x45, 0x24, 0x4f, 0xe6, 0x7d, 0xc8, 0x43, 0x35, 0xc6,
	0xf5, 0xad, 0x5b, 0xba, 0x61, 0x67, 0x9e, 0xea, 0x7f, 0xcc, 0xc3, 0x46, 0x96, 0x9d, 0x39, 0x50,
	0x8b, 0x78, 0x26, 0x9e, 0x43, 0x29, 0xb0, 0x6e, 0x13, 0xeb, 0x27, 0x0e, 0xeb, 0xe7, 0x3f, 0xd2,
	0xc9, 0x61, 0x7c, 0xc0, 0x40, 0x60, 0xdd, 0xc6, 0x46, 0xb1, 0x07, 0x55, 0xd3, 0x32, 0xbd, 0x50,
	0x84, 0x5a, 0x28, 0xad, 0xf0, 0xf3, 0xa4, 0x55, 0xa2, 0xf6, 0xb1, 0xcd, 0x7d, 0x09, 0x6b, 0x7f,
	0x36, 0x8b, 0x5b, 0xff, 0xdf, 0xdb, 0xb0, 0x82, 0x8e, 0x34, 0x69, 0x43, 0xd1, 0x1b, 0x99, 0x03,
	0x86, 0xa9, 0x0f, 0x09, 0x8f, 0x95, 0x87, 0x73, 0xee, 0xf6, 0x61, 0x2f, 0x86, 0x1c, 0x6f, 0x26,
	0x1e, 0x70, 0x5b, 0x6e, 0x2a, 0x1d, 0xa5, 0xab, 0xd3, 0x54, 0x00, 0x8f, 0x43, 0x2d, 0x16, 0x0c,
	0x7c, 0xdb, 0xc3, 0x88, 0x84, 0x07, 0x68, 0x80, 0xda, 0xad, 0x64, 0xc8, 0x17, 0xfe, 0x88, 0xfc,
	0x12, 0xb6, 0xec, 0xc0, 0x60, 0xe3, 0x2b, 0x66, 0x59, 0xcc, 0xc2, 0x98, 0xd5, 0x0e, 0x19, 0x9e,
	0x37, 0x89, 0xe1, 0xd8, 0xb4, 0x03, 0x25, 0x02, 0x68, 0x82, 0x4f, 0xfe, 0x16, 0xaa, 0xde, 0xc8,
	0xbc, 0xe3, 0x3e, 0xae, 0x31, 0x66, 0xe1, 0x8d, 0x6b, 0xd5, 0x2a, 0x38, 0xe6, 0x0f, 0xe7, 0xc7,
	0x8c, 0x7f, 0x7b, 0x11, 0xba, 0x83, 0xe0, 0xe3, 0x4a, 0x47, 0xd1, 0xcf, 0xb5, 0x96, 0x11, 0x4d,
	0x82, 0x56, 0xbc, 0x29, 0x3e, 0x0f, 0x21, 0xed, 0xc0, 0x18, 0x8c, 0xec, 0xc1, 0xad, 0x79, 0x35,
	0x62, 0xc2, 0x15, 0xa6, 0x25, 0x3b, 0x68, 0xc6, 0x24, 0x72, 0x08, 0x5b, 0x18, 0x7b, 0x98, 0x96,
	0x11, 0x84, 0xa6, 0x1f, 0x1a, 0x16, 0x1b, 0x99, 0x77, 0xd1, 0x52, 0x6c, 0x46, 0xac, 0x3e, 0xe7,
	0xb4, 0x38, 0x83, 0x07, 0x72, 0x63, 0xf3, 0x9d, 0x61, 0x5a, 0x86, 0x35, 0xf1, 0xc5, 0xe9, 0x2d,
	0x16, 0xa8, 0x3c, 0x36, 0xdf, 0xc9, 0x56, 0x2b, 0x22, 0x22, 0xce, 0x76, 0xa6, 0x70, 0xeb, 0x11,
	0xce, 0x76, 0x32, 0xb8, 0x0f, 0xa0, 0x22, 0xe4, 0x71, 0x23, 0x6f, 0x78, 0xae, 0x55, 0xdb, 0x40,
	0x58, 0x09, 0xc5, 0x05, 0xaa, 0xd3, 0x73, 0x2d, 0xee, 0x35, 0xe0, 0x48, 0xb8, 0xb8, 0xe0, 0xd6,
	0xf6, 0x3c, 0x9c, 0xcd, 0x32, 0xaa, 0xea, 0xa3, 0x79, 0x55, 0xf5, 0x63, 0x48, 0xca, 0x41, 0x67,
	0xae, 0x2a, 0xb7, 0xdb, 0xda, 0x2b, 0xa3, 0xff, 0x52, 0xed, 0xf5, 0xf8, 0x51, 0x4b, 0x25, 0x94,
	0x2a, 0x5b, 0x49, 0x03, 0xf2, 0x35, 0xec, 0x25, 0x1d, 0x18, 0xb3, 0x13, 0x5d, 0xc1, 0x91, 0xed,
	0x24, 0x80, 0xce, 0xd4, 0x8c, 0x65, 0x28, 0x62, 0xde, 0x6e, 0xe0, 0x8e, 0x82, 0xda, 0x26, 0x66,
	0xdd, 0x9e, 0xdc, 0xb7, 0x8c, 0x11, 0x0e, 0x03, 0xe6, 0xb4, 0x15, 0xf9, 0x16, 0x1e, 0x98, 0xa3,
	0x91, 0xfb, 0x96, 0x47, 0xe8, 0x38, 0x5f, 0xee, 0x4b, 0x9a, 0x61, 0x50, 0x5b, 0x9d, 0x4f, 0xe2,
	0x65, 0xc4, 0x9d, 0x22, 0x8a, 0x6e, 0x45, 0x6d, 0x33, 0xb4, 0x80, 0x9c, 0x42, 0x65, 0xe0, 0x8e,
	0x3d, 0xd3, 0xe1, 0x1b, 0x18, 0x63, 0xb8, 0xb5, 0x79, 0x5b, 0x23, 0x64, 0x35, 0x63, 0x1c, 0x06,
	0x74, 0xe5, 0x41, 0xf6, 0x91, 0xfc, 0x2b, 0xa8, 0x32, 0xc7, 0x32, 0x06, 0xa6, 0x67, 0x04, 0x13,
	0xcf, 0x73, 0xfd, 0xb0, 0x56, 0x46, 0xfd, 0x2f, 0x10, 0xa4, 0x38, 0x56, 0xd3, 0xf4, 0xfa, 0x02,
	0x76, 0xbc, 0xc5, 0xbd, 0x9c, 0xa6, 0xdc, 0x33, 0xba, 0x9a, 0x6e, 0x28, 0x5d, 0xae, 0xf8, 0x16,
	0x2d, 0xb3, 0x2c, 0x86, 0x50, 0x20, 0x71, 0x3e, 0xc1, 0x0c, 0x43, 0xdf, 0xbe, 0x9a, 0x84, 0x4c,
	0x78, 0x93, 0xa5, 0xa3, 0x0f, 0x16, 0x8d, 0x14, 0xb1, 0x72, 0x02, 0xa5, 0x9b, 0x83, 0x59, 0x12,
	0xb9, 0x86, 0xbd, 0x96, 0xd2, 0xa3, 0x4a, 0x53, 0xe6, 0xee, 0x92, 0xed, 0xbc, 0x61, 0x4e, 0xc8,
	0x5d, 0x00, 0x74, 0xfe, 0x0b, 0xf7, 0x8d, 0x5d, 0x8d, 0x71, 0xb8, 0x63, 0x8a, 0xaf, 0x94, 0x13,
	0xe3, 0x52, 0x6d, 0x29, 0x1a, 0xdd, 0x4d, 0x85, 0x4d, 0x61, 0xea, 0xff, 0x36, 0x0f, 0xe5, 0x29,
	0xd5, 0x91, 0x3a, 0xac, 0x46, 0x3e, 0x74, 0x2e, 0x49, 0x8b, 0x44, 0x14, 0x52, 0x83, 0x15, 0xe1,
	0x85, 0xe7, 0x13, 0x96, 0x20, 0x90, 0x57, 0x50, 0x1d, 0xf8, 0xcc, 0x0c, 0xed, 0x37, 0x2c, 0x5a,
	0xf7, 0x5a, 0x01, 0x97, 0xfd, 0xf0, 0x47, 0x96, 0xea, 0xb0, 0x19, 0x35, 0x8b, 0xf6, 0x41, 0x65,
	0x30, 0xf5, 0xdc, 0xf8, 0x3d, 0x54, 0xa6, 0x11, 0xe4, 0x29, 0xec, 0xc6, 0x76, 0xaf, 0x49, 0x15,
	0x59, 0x57, 0x2f, 0x15, 0xe3, 0x54, 0xa3, 0x1d, 0x59, 0x97, 0xfe, 0x7f, 0xfc, 0x2f, 0xc7, 0x1d,
	0x57, 0xb5, 0x23, 0x9f, 0x29, 0x09, 0x46, 0x5a, 0xe2, 0xb4, 0xd3, 0xb6, 0xdc, 0x3f, 0x4f, 0x69,
	0x39, 0x74, 0x66, 0xf5, 0x4e, 0x3b, 0x25, 0xe5, 0xeb, 0x1e, 0x6c, 0xce, 0xad, 0x11, 0xb7, 0xdd,
	0xa1, 0x1d, 0x8e, 0x58, 0x74, 0x42, 0x89, 0x07, 0xee, 0xa7, 0xc7, 0x2f, 0xd8, 0x4c, 0xe8, 0x57,
	0x8d, 0xe9, 0x71, 0x3e, 0xb7, 0x0e, 0xeb, 0xb7, 0xec, 0xee, 0xad, 0xeb, 0x5b, 0x01, 0xaa, 0xa6,
	0x48, 0x93, 0xe7, 0xc6, 0xef, 0xa0, 0x98, 0x58, 0x75, 0xee, 0x3f, 0xcf, 0xd9, 0x75, 0xe1, 0xdc,
	0xaa, 0xdd, 0xbe, 0x4e, 0x15, 0xb9, 0x23, 0xe5, 0xb8, 0xef, 0xac, 0x76, 0x75, 0x85, 0xf6, 0x75,
	0x55, 0x57, 0xe5, 0xb6, 0x94, 0x27, 0x25, 0x58, 0x53, 0xbb, 0xc6, 0xa9, 0xa2, 0xb4, 0xa4, 0x02,
	0x29, 0xc2, 0x8a, 0x7c, 0xd1, 0x52, 0x35, 0x69, 0x99, 0x54, 0x00, 0xd4, 0xae, 0x21, 0x53, 0x5d,
	0x6d, 0x72, 0x1f, 0xbb, 0xf1, 0xbf, 0x72, 0xb0, 0xb5, 0xc0, 0x1c, 0x73, 0xe5, 0x4c, 0x1b, 0x64,
	0x69, 0x89, 0xec, 0x00, 0x91, 0x2f, 0x74, 0x8d, 0x8f, 0xe3, 0x3b, 0xa3, 0xaf, 0x5d, 0x74, 0x5b,
	0x86, 0xd6, 0x95, 0x72, 0xdc, 0x03, 0x9f, 0xa3, 0x9f, 0x9e, 0x4a, 0x79, 0xae, 0xcd, 0x66, 0x5b,
	0x6d, 0xbe, 0x34, 0x22, 0xa6, 0x54, 0xe0, 0xfd, 0x77, 0xb4, 0x8b, 0xbe, 0x62, 0x68, 0x97, 0x0a,
	0x95, 0x96, 0xc9, 0xc7, 0xf0, 0x4c, 0xed, 0xf2, 0x41, 0xeb, 0x8a, 0xa1, 0x75, 0x0d, 0x85, 0xcf,
	0x42, 0xed, 0x9e, 0x19, 0x97, 0xaa, 0xf2, 0x8a, 0x7b, 0xef, 0x69, 0x3f, 0x2b, 0xe4, 0x13, 0x78,
	0xfe, 0x93, 0xb0, 0xa7, 0xa7, 0xd2, 0x6a, 0xe3, 0xaf, 0x61, 0xf7, 0x1e, 0xdb, 0x49, 0xb6, 0x60,
	0xd6, 0x7a, 0x4a, 0x4b, 0x5c, 0xcf, 0x54, 0xf9, 0xf6, 0x42, 0xa5, 0x4a, 0x86, 0x9c, 0xe3, 0xd8,
	0x93, 0xb6, 0xd6, 0x7c, 0x99, 0x21, 0xe6, 0x1b, 0xff, 0x27, 0x07, 0xe5, 0x29, 0xe3, 0x47, 0xea,
	0x90, 0xe4, 0x9f, 0xf0, 0x15, 0x33, 0x7a, 0x54, 0xd3, 0xb5, 0xa6, 0xd6, 0x16, 0x4b, 0x75, 0x29,
	0xf7, 0x75, 0xe3, 0x73, 0xe3, 0x85, 0x94, 0x4b, 0x9e, 0x8e, 0x8c, 0x17, 0x52, 0x3e, 0x79, 0xfa,
	0xc2, 0x78, 0x21, 0x15, 0xc8, 0x36, 0x48, 0x31, 0xd2, 0x78, 0x45, 0xe5, 0x5e, 0x0f, 0x55, 0x14,
	0x53, 0x8f, 0x32, 0xd4, 0x95, 0x84, 0xfa, 0x45, 0x86, 0xba, 0x9a, 0xc8, 0xfb, 0xd2, 0x78, 0x21,
	0xad, 0x25, 0x98, 0x2f, 0x33, 0x98, 0x75, 0x1e, 0x09, 0xb5, 0xe4, 0x78, 0x40, 0x45, 0x3e, 0xf1,
	0xe4, 0x31, 0x41, 0x41, 0xe3, 0x4f, 0x79, 0x28, 0x65, 0xac, 0x2f, 0x79, 0x1f, 0xb6, 0xa7, 0x67,
	0x38, 0xff, 0x92, 0x95, 0xa1, 0x18, 0xb1, 0xda, 0x97, 0xd2, 0x52, 0xfa, 0xd8, 0xe9, 0x7d, 0x29,
	0x02, 0xb0, 0xef, 0x74, 0xe3, 0x5c, 0xeb, 0xeb, 0x4a, 0x4b, 0xca, 0xf3, 0xe0, 0xee, 0xb2, 0x27,
	0xab, 0x2d, 0x03, 0xdf, 0x41, 0xa9, 0x80, 0x43, 0x47, 0xc2, 0x6f, 0xfb, 0xd2, 0x32, 0x47, 0xe3,
	0x96, 0x35, 0x3a, 0xbd, 0x2f, 0xa4, 0x95, 0xf4, 0x51, 0x3b, 0x3b, 0x93, 0x56, 0xf9, 0xc6, 0x4a,
	0xb8, 0x48, 0x5a, 0xe3, 0x1b, 0x4b, 0xf4, 0xf6, 0x4a, 0x39, 0xe9, 0x88, 0x59, 0x46, 0xbd, 0x6b,
	0x97, 0x52, 0x31, 0x65, 0x7f, 0x71, 0xd6, 0xeb, 0x49, 0x90, 0xb2, 0xcf, 0xdb, 0x7d, 0xa9, 0x94,
	0xb2, 0x5b, 0x7c, 0x30, 0x1b, 0xfc, 0x39, 0xee, 0xe0, 0x4b, 0x59, 0x2a, 0x37, 0x6e, 0xa1, 0x3c,
	0x75, 0x12, 0xf0, 0x3d, 0xbf, 0xe0, 0x2c, 0x90, 0x96, 0xb8, 0xce, 0x63, 0x86, 0xd6, 0xe3, 0x91,
	0xa8, 0xdc, 0x96, 0x72, 0x5c, 0xc9, 0x31, 0xf5, 0x54, 0xa3, 0x27, 0x6a, 0xab, 0xa5, 0x74, 0xa5,
	0x7c, 0x16, 0x1c, 0x6d, 0xbe, 0x96, 0x54, 0x68, 0xbc, 0x86, 0xf2, 0x94, 0x59, 0xe6, 0x83, 0x4d,
	0x8c, 0xb7, 0xb4, 0xc4, 0x5f, 0x67, 0x1e, 0x29, 0xf7, 0xc5, 0xab, 0xd7, 0xd1, 0x4e, 0xd4, 0xb6,
	0x62, 0xcc, 0xbc, 0xff, 0xdb, 0x20, 0x45, 0x0c, 0xb9, 0xd7, 0x8b, 0x5a, 0x16, 0xea, 0xff, 0xe9,
	0x6b, 0x58, 0x15, 0x49, 0xce, 0xb9, 0xa4, 0xd3, 0x3e, 0x6c, 0x98, 0x96, 0x71, 0x35, 0x72, 0x07,
	0xb7, 0x06, 0x8f, 0x86, 0xb9, 0xf3, 0xb6, 0x4c, 0xc1, 0xb4, 0x4e, 0x38, 0xe9, 0x25, 0xbb, 0x23,
	0x9f, 0x01, 0x09, 0x4d, 0x7f, 0xc8, 0x42, 0x74, 0x28, 0x06, 0x37, 0xa6, 0xe3, 0x30, 0xee, 0x44,
	0x72, 0xe3, 0xb5, 0x99, 0x72, 0x9a, 0x82, 0xc1, 0x4d, 0x64, 0xe6, 0x74, 0x88, 0x4f, 0x86, 0x9d,
	0xe4, 0x3c, 0x29, 0x20, 0x39, 0x3e, 0x4b, 0x3e, 0x07, 0xc2, 0xde, 0x0d, 0x46, 0x13, 0xee, 0x72,
	0x26, 0xc7, 0x66, 0x6d, 0x39, 0x39, 0x58, 0x36, 0x63, 0x6e, 0x62, 0x84, 0xc9, 0x11, 0x6c, 0x25,
	0x1e, 0x06, 0x73, 0x2c, 0x37, 0xca, 0x14, 0xaf, 0xa6, 0x6d, 0x62, 0x27, 0x02, 0xb9, 0xa8, 0x49,
	0x17, 0xf0, 0xee, 0x8e, 0x39, 0x3c, 0xdc, 0xf2, 0x7c, 0x97, 0xbb, 0x26, 0x7e, 0x90, 0xe4, 0xa7,
	0x31, 0x2f, 0x5d, 0x3a, 0xfa, 0x6c, 0x3e, 0x29, 0xcc, 0xcf, 0x69, 0xd1, 0xac, 0x17, 0xb7, 0x8a,
	0x73, 0xd6, 0x22, 0xb0, 0x5a, 0xcc, 0x23, 0x0f, 0xa1, 0xe8, 0xb3, 0x61, 0x60, 0x0c, 0x2d, 0xcf,
	0xaf, 0x7d, 0x82, 0x3e, 0xeb, 0x3a, 0x27, 0x9c, 0x59, 0x9e, 0x4f, 0x4e, 0xe0, 0x61, 0x32, 0xe9,
	0x80, 0x39, 0x81, 0x8d, 0x07, 0x66, 0x1c, 0xe0, 0xa3, 0x77, 0x23, 0x66, 0xb2, 0x17, 0xc3, 0xfa,
	0x31, 0x2a, 0x0e, 0xf7, 0xb9, 0x8c, 0x58, 0x0b, 0x3e, 0x0b, 0x42, 0x5f, 0xe4, 0x78, 0x13, 0x19,
	0x52, 0x2a, 0x23, 0x82, 0xd1, 0x04, 0x95, 0xc8, 0xd0, 0xe1, 0xc3, 0x1f, 0x90, 0xc1, 0x4f, 0x70,
	0xc3, 0x62, 0xe6, 0x28, 0xa8, 0xed, 0x24, 0xd2, 0xde, 0xbf, 0x57, 0xda, 0xa9, 0xeb, 0xb7, 0x38,
	0x98, 0x7c, 0x02, 0xf1, 0x02, 0x24, 0x17, 0x3a, 0x41, 0xed, 0xa1, 0xb8, 0xd1, 0x89, 0x18, 0xf1,
	0x85, 0x4e, 0x40, 0xfe, 0x02, 0x92, 0x39, 0xf2, 0x75, 0xb1, 0x26, 0x83, 0x30, 0x9d, 0x44, 0x39,
	0xe9, 0x76, 0x37, 0x06, 0xf5, 0x04, 0x26, 0x99, 0x02, 0xcd, 0xec, 0x9f, 0xd8, 0x67, 0x08, 0x6a,
	0x04, 0xfd, 0xc3, 0x0f, 0x16, 0x2c, 0xa7, 0x12, 0x81, 0x63, 0x6f, 0x22, 0xdd, 0x60, 0x31, 0x25,
	0x20, 0x2f, 0x41, 0xc2, 0xeb, 0x52, 0x1e, 0xe1, 0x73, 0xdf, 0xd9, 0x0c, 0xcd, 0x5a, 0x11, 0x25,
	0xbe, 0xbf, 0x40, 0x62, 0x27, 0x82, 0xca, 0x56, 0xcb, 0x0c, 0x4d, 0x5a, 0x19, 0x4f, 0x3d, 0xff,
	0xc8, 0x7d, 0x48, 0x75, 0xbf, 0xf0, 0x43, 0xf7, 0x21, 0x1d, 0x90, 0xd8, 0x3b, 0xfe, 0xc6, 0x0d,
	0x99, 0x11, 0x5d, 0xac, 0x47, 0x77, 0x35, 0x8d, 0xc5, 0x73, 0x43, 0xe8, 0x89, 0x40, 0xd2, 0x2a,
	0x9b, 0x26, 0x90, 0xe7, 0x20, 0x59, 0xd7, 0x1e, 0x9f, 0xd3, 0xc4, 0xb1, 0xc3, 0xec, 0x1d, 0x6b,
	0xd9, 0xba, 0xf6, 0x64, 0xeb, 0xc2, 0xb1, 0x43, 0xbc, 0x66, 0x7d, 0x0d, 0x55, 0xee, 0x67, 0x1b,
	0x6f, 0xec, 0xc0, 0xbe, 0xb2, 0x47, 0x76, 0x78, 0x87, 0x21, 0x4d, 0x65, 0xa1, 0x02, 0xf8, 0x9f,
	0xcb, 0x04, 0x78, 0xbc, 0xd1, 0xd5, 0x8c, 0x96, 0xa2, 0x2b, 0x4d, 0xcc, 0x6a, 0x56, 0x82, 0x29,
	0x2e, 0x79, 0x0a, 0xa5, 0x37, 0x36, 0x7b, 0x6b, 0x46, 0x52, 0x1f, 0x60, 0xb2, 0x35, 0xff, 0xd9,
	0xe7, 0x34, 0x4b, 0x26, 0x2f, 0x80, 0x60, 0xc4, 0x67, 0x84, 0x37, 0xbe, 0x3b, 0x19, 0xde, 0x18,
	0xbe, 0x19, 0x32, 0x91, 0x83, 0x40, 0xb0, 0x84, 0x5c, 0x5d, 0x30, 0xa9, 0x19, 0x32, 0xf2, 0x15,
	0x3c, 0x10, 0xe1, 0x06, 0x77, 0xf9, 0x47, 0x0c, 0x5d, 0x31, 0x6c, 0xf4, 0x5e, 0xd2, 0x48, 0x04,
	0x89, 0xcd, 0x84, 0x8f, 0xed, 0xfe, 0x06, 0x2a, 0xf6, 0xb5, 0x6f, 0x8e, 0xf9, 0x5a, 0x07, 0x21,
	0x6f, 0xb0, 0x85, 0x13, 0xdd, 0x5f, 0x30, 0x51, 0xf5, 0x54, 0x00, 0xfb, 0x1c, 0x77, 0x9c, 0x1c,
	0x8b, 0xea, 0x29, 0x95, 0x3b, 0x8a, 0xd1, 0xd7, 0x65, 0x5d, 0xa1, 0xe5, 0x58, 0x1a, 0x82, 0xa6,
	0xc4, 0x5b, 0xcc, 0x0b, 0x6f, 0x30, 0x93, 0xf6, 0xc3, 0xe2, 0x5b, 0x1c, 0x37, 0x27, 0xbe, 0xa5,
	0xf4, 0xf4, 0xf3, 0x54, 0x3c, 0x82, 0xc8, 0xb7, 0x40, 0x1c, 0xe1, 0x6d, 0x9b, 0x96, 0x11, 0xb2,
	0xb1, 0x37, 0xe2, 0x33, 0xf8, 0xe2, 0xde, 0xdd, 0xdf, 0x45, 0xb0, 0x6c, 0xe9, 0x11, 0x94, 0x4a,
	0xce, 0x0c, 0x85, 0x8c, 0xe1, 0x41, 0x24, 0x32, 0xc9, 0x21, 0x08, 0xfb, 0xfa, 0x19, 0x0e, 0xfc,
	0xd9, 0xbd, 0x52, 0x13, 0xd7, 0x15, 0xa3, 0x8e, 0xcd, 0xc4, 0x69, 0x4d, 0x22, 0xfb, 0x2d, 0x67,
	0x1e, 0x47, 0x2e, 0x41, 0x1a, 0x33, 0xcb, 0x8e, 0x7c, 0xe7, 0xd0, 0x0c, 0x27, 0x01, 0x5e, 0x2c,
	0x57, 0x16, 0xee, 0xf0, 0x4e, 0x0c, 0xed, 0x23, 0xf2, 0x78, 0x2d, 0x96, 0x5d, 0x1d, 0x4f, 0x73,
	0x88, 0x0c, 0x1b, 0xe6, 0x24, 0x74, 0x0d, 0x9f, 0x5d, 0xfb, 0x2c, 0xb8, 0xc1, 0xb4, 0x5a, 0xe9,
	0xe8, 0xbd, 0x05, 0x32, 0xe5, 0x49, 0xe8, 0x52, 0x81, 0xa2, 0x25, 0x33, 0x7d, 0x20, 0xbf, 0x85,
	0x6a, 0x10, 0xda, 0x83, 0xdb, 0xbb, 0xf4, 0x98, 0x78, 0x82, 0x52, 0x16, 0xbe, 0x04, 0x88, 0x4c,
	0x8e, 0x86, 0x4a, 0x30, 0xf5, 0x4c, 0xc6, 0xb0, 0xeb, 0xb8, 0x8e, 0x71, 0xe5, 0xbb, 0x6f, 0x03,
	0x6e, 0x07, 0xf8, 0xcb, 0x15, 0xb8, 0x13, 0x7f, 0xc0, 0xb0, 0x78, 0xa1, 0xb2, 0x78, 0xb5, 0x5c,
	0xe7, 0x44, 0x34, 0xe8, 0x23, 0xf4, 0x78, 0xf3, 0xa2, 0xdb, 0x52, 0x9a, 0x6d, 0x99, 0x2a, 0x2d,
	0xee, 0xf3, 0xd2, 0xa6, 0x42, 0xb7, 0x9d, 0x14, 0x34, 0x72, 0x43, 0x01, 0x24, 0xbf, 0x82, 0xed,
	0xd9, 0x8c, 0x33, 0xc6, 0xcd, 0x1f, 0x64, 0x93, 0x39, 0x64, 0x3a, 0xdd, 0x8c, 0xde, 0x81, 0x0a,
	0xeb, 0x3e, 0x73, 0x2c, 0xe6, 0x33, 0xbf, 0x56, 0x9f, 0x4f, 0x3d, 0x45, 0x03, 0xa3, 0x11, 0xe4,
	0x58, 0x8a, 0x37, 0x29, 0x55, 0xba, 0x2d, 0x85, 0x2a, 0x94, 0x26, 0xcd, 0xc9, 0xbf, 0x86, 0x2d,
	0x73, 0x8c, 0xc6, 0x26, 0x4a, 0x76, 0x8b, 0x6d, 0xf4, 0xf8, 0xde, 0xe9, 0xca, 0x63, 0x4f, 0x9e,
	0xca, 0x75, 0x6c, 0x74, 0xb5, 0xae, 0x21, 0x77, 0x7a, 0x46, 0x4f, 0x3e, 0x53, 0xa8, 0x64, 0xce,
	0xf0, 0xc9, 0x31, 0x94, 0xec, 0xc0, 0xe0, 0x9d, 0x78, 0xe6, 0x90, 0xd5, 0x9e, 0xa1, 0xe4, 0xfa,
	0x62, 0xc9, 0x3d, 0x73, 0xc8, 0x68, 0xd1, 0x0e, 0xa2, 0x9f, 0xe4, 0x6f, 0x61, 0x37, 0x33, 0x3a,
	0xdb, 0xcf, 0x6c, 0xf4, 0xe7, 0x28, 0xe7, 0xf9, 0x0f, 0x8d, 0x30, 0xc2, 0xf3, 0x51, 0xd0, 0x6d,
	0x73, 0x01, 0x95, 0x3c, 0xc3, 0xb1, 0xf9, 0xec, 0xad, 0xe9, 0x5b, 0xcc, 0xaa, 0xed, 0x67, 0x15,
	0x0f, 0x76, 0x40, 0x23, 0x06, 0xe9, 0x42, 0x7c, 0x26, 0xe2, 0x2b, 0x7c, 0xe7, 0xb1, 0xa0, 0xf6,
	0x14, 0x43, 0xe6, 0x45, 0x26, 0x42, 0x16, 0x50, 0xd9, 0xe2, 0x7d, 0xe0, 0xc1, 0x58, 0x31, 0xb3,
	0xa4, 0x80, 0x3c, 0x87, 0x72, 0xc0, 0x82, 0x80, 0xbf, 0x4d, 0xc2, 0xde, 0x1c, 0x24, 0x16, 0x76,
	0x23, 0x62, 0x08, 0xd3, 0x31, 0x86, 0x47, 0x57, 0x93, 0x3b, 0xe6, 0x1b, 0x43, 0xe6, 0x30, 0x6e,
	0x29, 0xd3, 0x75, 0xc2, 0x03, 0xef, 0x23, 0x34, 0x22, 0x9f, 0x2e, 0x18, 0xc4, 0x09, 0x6f, 0x76,
	0x16, 0xb7, 0x8a, 0x98, 0x78, 0xf6, 0xed, 0x5d, 0xdd, 0xc7, 0xaa, 0x7f, 0x0b, 0xf5, 0xfb, 0x3d,
	0x29, 0xf2, 0x05, 0x6c, 0x2d, 0x70, 0xcf, 0xd0, 0x83, 0x2c, 0xe0, 0x34, 0xc9, 0xbc, 0xab, 0x55,
	0xff, 0x0b, 0x90, 0x66, 0x4f, 0x73, 0xf2, 0x31, 0x6c, 0x8a, 0x59, 0x25, 0x69, 0x88, 0x24, 0x9b,
	0x5c, 0x45, 0x46, 0x8c, 0x54, 0xad, 0xfa, 0xff, 0x58, 0x87, 0xca, 0xf4, 0xe1, 0x4d, 0xde, 0x07,
	0xb8, 0xb2, 0x47, 0xa3, 0x28, 0xb5, 0x1f, 0x77, 0xbf, 0x44, 0x8b, 0x11, 0x55, 0xb5, 0xc8, 0xa7,
	0x40, 0xc6, 0xb6, 0x63, 0x8f, 0x27, 0x63, 0x63, 0xe0, 0x8d, 0x0d, 0x4c, 0xde, 0x06, 0x98, 0x56,
	0x2b, 0x50, 0x29, 0xe2, 0x34, 0xbd, 0x71, 0x07, 0xe9, 0xe4, 0x77, 0x90, 0xc9, 0xb9, 0x18, 0x9e,
	0x6f, 0x0f, 0xb8, 0x6c, 0x7f, 0x32, 0x62, 0x51, 0x0e, 0xeb, 0xe8, 0x47, 0x3d, 0x0a, 0xa1, 0xef,
	0x9e, 0x68, 0x4a, 0x27, 0x23, 0x46, 0x1f, 0xa4, 0x22, 0x33, 0x64, 0xd2, 0x81, 0x92, 0x65, 0xfb,
	0x6c, 0x10, 0xa2, 0xd3, 0x86, 0xfe, 0xf0, 0xe2, 0x05, 0x9c, 0x91, 0xdf, 0xc2, 0x46, 0xdc, 0x77,
	0xa3, 0x60, 0x25, 0xbf, 0xeb, 0xff, 0x21, 0x0f, 0xd2, 0x6c, 0xd7, 0xe4, 0x73, 0xd8, 0xb6, 0x9d,
	0xd8, 0x5d, 0x8f, 0xae, 0x38, 0xe2, 0x72, 0x80, 0x02, 0xdd, 0x8a, 0x79, 0x72, 0xca, 0xe2, 0x4d,
	0x52, 0x0f, 0x3f, 0xd3, 0x24, 0x2f, 0x9a, 0x24, 0xfe, 0x7d, 0xa6, 0xc9, 0x27, 0xb0, 0x99, 0xf6,
	0x32, 0x64, 0xce, 0xc0, 0x66, 0x22, 0x5b, 0x52, 0xa0, 0x52, 0xd2, 0x45, 0x44, 0xe7, 0xe0, 0x54,
	0x7e, 0x0c, 0x5e, 0x16, 0xe0, 0x44, 0x78, 0x0c, 0xae, 0xc1, 0x1a, 0x86, 0x3a, 0xcc, 0xc2, 0x25,
	0x5b, 0xa7, 0xf1, 0xe3, 0x3d, 0xeb, 0xba, 0xba, 0x78, 0x5d, 0xeb, 0x7f, 0x5c, 0x06, 0x48, 0xf5,
	0x46, 0x9e, 0x42, 0x25, 0xa3, 0x7a, 0x23, 0x29, 0x09, 0xd8, 0x48, 0xf5, 0xa9, 0x5a, 0xe4, 0x00,
	0xa4, 0x6b, 0xfb, 0x1d, 0x77, 0x54, 0xd3, 0x0e, 0xf2, 0x88, 0xab, 0x20, 0x3d, 0xdd, 0x36, 0x0c,
	0x8a, 0x28, 0x28, 0x93, 0xe7, 0xfb, 0xe5, 0xcf, 0x59, 0xc8, 0x43, 0xfe, 0x47, 0x9c, 0xc3, 0xe9,
	0xbd, 0xad, 0xdc, 0x16, 0x95, 0x31, 0xeb, 0x56, 0xc4, 0x24, 0x0a, 0x3c, 0x4c, 0x7d, 0x53, 0x54,
	0x44, 0x60, 0xb8, 0x6f, 0x98, 0xef, 0xdb, 0x96, 0xc5, 0x1c, 0x4c, 0x4e, 0x27, 0x46, 0x6b, 0x2f,
	0x41, 0x62, 0x60, 0x18, 0x68, 0x09, 0x8e, 0xe8, 0xf0, 0x3c, 0xb3, 0xc9, 0x7d, 0x36, 0x36, 0x6d,
	0x07, 0x5f, 0xa1, 0xb1, 0xe7, 0x0b, 0x93, 0x13, 0x60, 0xf1, 0xc9, 0xe4, 0x2e, 0xd2, 0xe7, 0x07,
	0x29, 0x9c, 0xc6, 0x68, 0x35, 0x05, 0xeb, 0xee, 0xc9, 0xe4, 0x8e, 0x3c, 0x87, 0xca, 0x78, 0x12,
	0x84, 0xdc, 0xef, 0x35, 0x46, 0xec, 0x0d, 0x1b, 0xe1, 0x95, 0x6b, 0xee, 0x38, 0xf7, 0x39, 0xdd,
	0xe0, 0x8c, 0x13, 0xdb, 0x6a, 0x73, 0x72, 0xe3, 0xef, 0x60, 0x3d, 0x9e, 0x6e, 0x36, 0x6b, 0x96,
	0x4c, 0x58, 0xa4, 0xfc, 0x7a, 0x54, 0x39, 0x55, 0x28, 0x3f, 0x39, 0x39, 0x43, 0x64, 0x78, 0x7a,
	0x54, 0xbd, 0x94, 0x75, 0xc5, 0x90, 0x2f, 0xd0, 0x59, 0x95, 0xf2, 0xe4, 0x21, 0xec, 0xf6, 0xa8,
	0x76, 0x46, 0xe5, 0x4e, 0x47, 0xd6, 0xd5, 0xa6, 0x71, 0x76, 0x21, 0x53, 0xb9, 0xab, 0x8b, 0x74,
	0xda, 0x16, 0x54, 0x23, 0xa4, 0xd1, 0x93, 0x9b, 0x2f, 0xe5, 0x33, 0x45, 0x5a, 0xae, 0x4f, 0xa0,
	0x3a, 0xe3, 0x77, 0x93, 0x5f, 0xc0, 0x56, 0xaa, 0x56, 0xcf, 0xf4, 0xcd, 0x31, 0x0b, 0x99, 0x8f,
	0xef, 0x48, 0x91, 0x92, 0x84, 0xd5, 0x8b, 0x39, 0xd3, 0xb5, 0x5b, 0x85, 0x9f, 0x52, 0xbb, 0x55,
	0xff, 0xef, 0xeb, 0x20, 0xcd, 0x7a, 0x73, 0xe4, 0x39, 0x54, 0xa3, 0xd3, 0xcc, 0x32, 0xae, 0x6d,
	0x36, 0xb2, 0x82, 0x68, 0x1f, 0x56, 0x62, 0xf2, 0x29, 0x52, 0x79, 0x48, 0xef, 0xb3, 0x81, 0x3b,
	0x1e, 0xf3, 0xc3, 0x3a, 0xc1, 0x8a, 0xbd, 0xb8, 0x99, 0xe1, 0x44, 0xf0, 0x5f, 0x41, 0xed, 0x26,
	0x29, 0x59, 0x32, 0xdf, 0x19, 0x81, 0x79, 0xcd, 0x8c, 0x11, 0x73, 0x86, 0xe1, 0x4d, 0x74, 0x89,
	0xf5, 0x20, 0xe6, 0x77, 0xcc, 0x77, 0x7d, 0xf3, 0x9a, 0xb5, 0x91, 0x49, 0x7e, 0x01, 0xdb, 0x57,
	0xae, 0x75, 0x37, 0xd7, 0x68, 0x59, 0x5c, 0xcd, 0x70, 0xde, 0x74, 0x03, 0x19, 0xde, 0x1b, 0x98,
	0xa3, 0x11, 0xdf, 0x2e, 0xa6, 0x28, 0xa1, 0x9b, 0x6d, 0x2a, 0x2e, 0x30, 0xf6, 0x38, 0x4a, 0x77,
	0x65, 0xc4, 0x4c, 0x8b, 0xf8, 0x06, 0xea, 0xa9, 0x99, 0x99, 0x6b, 0xbe, 0x8a, 0xcd, 0x77, 0x53,
	0xc4, 0x74, 0xe3, 0x53, 0xd8, 0xcf, 0x6c, 0xe5, 0x20, 0x74, 0xfd, 0xf9, 0x19, 0x57, 0x50, 0xc4,
	0xa3, 0x14, 0xd7, 0xe7, 0xb0, 0x69, 0x39, 0x9f, 0xc3, 0x03, 0x6e, 0xec, 0xe7, 0x1b, 0x57, 0x45,
	0xb9, 0x17, 0x32, 0xa7, 0x9b, 0x3c, 0x81, 0x92, 0x3d, 0x36, 0x87, 0x2c, 0x5b, 0xe1, 0x42, 0x01,
	0x49, 0xa2, 0xba, 0xe5, 0x7d, 0xd8, 0x10, 0x80, 0x6c, 0x71, 0x0b, 0x15, 0x8d, 0xa2, 0xc2, 0x96,
	0xc7, 0x00, 0x23, 0x77, 0xe8, 0x46, 0x22, 0xb0, 0x92, 0x85, 0x16, 0x39, 0x45, 0x48, 0x78, 0x02,
	0x25, 0x64, 0x47, 0x02, 0x40, 0x74, 0xc1, 0x49, 0x51, 0xfb, 0xa7, 0x50, 0xc1, 0x02, 0x86, 0x81,
	0x1b, 0x17, 0xda, 0x94, 0x10, 0xb3, 0x61, 0x7a, 0x9e, 0x3a, 0x70, 0x93, 0x32, 0x9b, 0x6a, 0x82,
	0x8a, 0x44, 0x89, 0x0b, 0xaf, 0x72, 0x04, 0x8b, 0xa4, 0xed, 0xc1, 0x7a, 0x10, 0xde, 0x8d, 0xf0,
	0x0c, 0x96, 0x10, 0xb0, 0x86, 0xcf, 0xaa, 0x45, 0x4c, 0xd8, 0x14, 0xac, 0x91, 0x79, 0xe7, 0x4e,
	0x22, 0xc7, 0x6b, 0x13, 0x0d, 0xdd, 0xe1, 0x4f, 0x88, 0x5b, 0x0e, 0xdb, 0xd8, 0x0c, 0x2d, 0xdc,
	0x4a, 0x4f, 0x7d, 0xad, 0xb4, 0x69, 0x15, 0xe5, 0xa5, 0x74, 0xae, 0x2e, 0xd1, 0x45, 0x34, 0x44,
	0x22, 0xd4, 0x85, 0xb4, 0x68, 0x80, 0x4f, 0x40, 0x3c, 0x46, 0x73, 0xdd, 0x12, 0xfa, 0x40, 0x12,
	0xce, 0xb4, 0xf1, 0x9f, 0x73, 0xb0, 0x1a, 0xbd, 0x03, 0x65, 0x28, 0x76, 0x35, 0xe3, 0x54, 0x55,
	0xda, 0xad, 0xbe, 0x48, 0xee, 0x9e, 0x2b, 0x72, 0xab, 0xad, 0x62, 0xe1, 0xcb, 0x3a, 0x2c, 0x9f,
	0x68, 0xad, 0xef, 0xa4, 0x3c, 0xb7, 0x34, 0x4d, 0xb9, 0xdd, 0x36, 0x74, 0xcd, 0x90, 0x85, 0x51,
	0xc1, 0xdc, 0xbb, 0xdc, 0xba, 0x54, 0xa8, 0xae, 0xf6, 0x31, 0x11, 0x5b, 0x84, 0x15, 0xbc, 0x94,
	0x90, 0x24, 0xde, 0xb0, 0xad, 0x9d, 0x69, 0xd2, 0x3e, 0x17, 0x28, 0xf7, 0x7a, 0x86, 0xda, 0xd4,
	0xba, 0xd2, 0x5f, 0x11, 0x09, 0x4a, 0x7d, 0x5d, 0xa6, 0x06, 0x95, 0x75, 0xb5, 0x7b, 0x26, 0x7d,
	0x9f, 0x23, 0x00, 0x2b, 0x58, 0x21, 0x2a, 0x7d, 0x9f, 0x27, 0x0f, 0x40, 0xca, 0xec, 0xd2, 0xbe,
	0xae, 0x51, 0x45, 0xfa, 0x7e, 0x99, 0x43, 0x44, 0xc2, 0xef, 0xfb, 0xf5, 0x46, 0x03, 0x20, 0xa3,
	0x8b, 0x22, 0x08, 0x2d, 0x89, 0x24, 0xe2, 0x69, 0xfb, 0x42, 0x6d, 0x49, 0xb9, 0xfa, 0xff, 0x2c,
	0x40, 0x29, 0x13, 0xfd, 0x90, 0xbf, 0x01, 0x29, 0x0a, 0x97, 0xd2, 0x88, 0x27, 0x77, 0xaf, 0x97,
	0x92, 0x69, 0x99, 0xfd, 0x9d, 0x84, 0x40, 0x55, 0x7f, 0x9a, 0x40, 0x9e, 0x41, 0x39, 0x16, 0x8f,
	0xf5, 0xe2, 0xe2, 0x8a, 0x04, 0xab, 0xb3, 0x22, 0x3a, 0x96, 0x8b, 0xd7, 0xff, 0x31, 0x0f, 0x5b,
	0x0b, 0x04, 0x92, 0xef, 0x73, 0x10, 0x03, 0xb3, 0xd5, 0x6f, 0x27, 0x3f, 0x7f, 0x6c, 0x59, 0x1a,
	0xee, 0xa1, 0xbd, 0xf8, 0xd0, 0xc0, 0xfb, 0x0c, 0xaa, 0x9c, 0x52, 0xa5, 0x7f, 0x2e, 0x4e, 0xcb,
	0x92, 0x9f, 0xe2, 0xc8, 0x5f, 0xc2, 0xa3, 0xb1, 0xed, 0xc4, 0x41, 0xa5, 0x08, 0xb0, 0xde, 0x60,
	0x81, 0x78, 0xf6, 0xd2, 0x67, 0x6f, 0x6c, 0x3b, 0x91, 0x74, 0x35, 0x42, 0x44, 0xd7, 0x3f, 0x8d,
	0x4b, 0xa8, 0xce, 0xf4, 0x4d, 0x1e, 0xc3, 0xfd, 0xbd, 0x4b, 0x4b, 0xa4, 0x0a, 0xa5, 0x8b, 0xbe,
	0x42, 0xe3, 0xdd, 0x94, 0xe3, 0x0b, 0xa8, 0x5c, 0x2a, 0x5d, 0x5d, 0xca, 0xf3, 0xdd, 0xa3, 0xab,
	0x1d, 0x45, 0x2a, 0xd4, 0xff, 0x6b, 0x01, 0x2a, 0xd3, 0x21, 0x28, 0xf9, 0x3d, 0x6c, 0xc5, 0x25,
	0xd2, 0x06, 0x46, 0xa3, 0xb6, 0xc3, 0x82, 0x20, 0x52, 0xda, 0xa7, 0x3f, 0x1a, 0xc2, 0x8a, 0x47,
	0x6c, 0x73, 0x4c, 0xe2, 0x01, 0xf6, 0x75, 0xb5, 0xf9, 0x52, 0xed, 0x2a, 0xfd, 0x3e, 0x25, 0xb1,
	0xf0, 0x14, 0x47, 0xfe, 0x0e, 0xf6, 0x42, 0xd7, 0x33, 0x6e, 0x5c, 0xdf, 0xfe, 0x83, 0xeb, 0x84,
	0xd3, 0x1d, 0xe7, 0xff, 0x4c, 0x1d, 0xef, 0x86, 0xae, 0x77, 0x9e, 0xf4, 0x90, 0xe9, 0xfd, 0xdf,
	0xe4, 0xe0, 0xd1, 0x95, 0x1b, 0x86, 0xee, 0xf8, 0x9e, 0x11, 0x14, 0xfe, 0x4c, 0x23, 0xa8, 0x8b,
	0x5e, 0x16, 0x0d, 0xa2, 0xf1, 0x05, 0x40, 0x66, 0x48, 0x3b, 0xb0, 0xa0, 0xbd, 0xb8, 0x22, 0x51,
	0xfb, 0x82, 0xf4, 0x9d, 0x94, 0xab, 0xff, 0x43, 0x0e, 0xf6, 0xee, 0x8d, 0xaa, 0xc8, 0x2b, 0x00,
	0x91, 0x2a, 0xc0, 0xba, 0xb3, 0x1c, 0xa6, 0x20, 0xbe, 0xfa, 0x39, 0x71, 0xd9, 0xa1, 0xc8, 0x0a,
	0xc8, 0x9e, 0x77, 0xbe, 0x44, 0x8b, 0x41, 0xfc, 0x40, 0x08, 0x2c, 0x63, 0xa8, 0x27, 0x8a, 0xdd,
	0xf0, 0x77, 0xfd, 0x21, 0x14, 0x13, 0xf4, 0x6c, 0x31, 0xce, 0xc9, 0x3a, 0xac, 0x8a, 0xd6, 0x8d,
	0xdf, 0x42, 0x65, 0x3a, 0xed, 0x47, 0x24, 0x98, 0x4a, 0xfc, 0x09, 0xa7, 0x4b, 0x3e, 0xd1, 0x2e,
	0x15, 0x43, 0x3f, 0x57, 0x8c, 0x53, 0xad, 0xdd, 0x92, 0xf0, 0x3e, 0xf6, 0x44, 0x69, 0x6b, 0xaf,
	0x52, 0x5a, 0xbe, 0x61, 0x43, 0x79, 0x2a, 0xb3, 0x46, 0x6a, 0xb0, 0x30, 0xb7, 0x26, 0xf4, 0xd6,
	0xd5, 0x22, 0xa2, 0x94, 0xe3, 0xea, 0xed, 0x63, 0x6e, 0x4c, 0xeb, 0xc8, 0x6a, 0x0c, 0x96, 0xf2,
	0x64, 0x17, 0xb6, 0x9a, 0x54, 0xeb, 0xf7, 0x67, 0x18, 0x85, 0x86, 0x99, 0x76, 0x25, 0xa2, 0xe0,
	0xf9, 0xae, 0x30, 0xcf, 0x26, 0xca, 0x1b, 0xbb, 0x9a, 0x6e, 0xa4, 0xad, 0x73, 0xdc, 0x8e, 0x6b,
	0x5d, 0x25, 0xed, 0x66, 0x0b, 0xaa, 0x9d, 0x8b, 0xb6, 0xae, 0xf6, 0xda, 0x4a, 0xda, 0xc5, 0xbf,
	0xcf, 0xc1, 0xd6, 0x82, 0x84, 0x18, 0xd6, 0x43, 0xce, 0xa6, 0xc4, 0xc4, 0xf5, 0x63, 0x4a, 0x8e,
	0x6f, 0x6e, 0x73, 0x64, 0x0f, 0x1e, 0xa4, 0x64, 0x59, 0xd7, 0x3a, 0x6a, 0xd3, 0xb8, 0xe8, 0xaa,
	0x71, 0x61, 0x65, 0xc2, 0xd2, 0x2e, 0xf4, 0xbe, 0xda, 0x52, 0xa4, 0x02, 0x79, 0x04, 0xb5, 0x94,
	0x4c, 0x95, 0xa6, 0xd6, 0xe9, 0x28, 0xdd, 0x96, 0xa8, 0x89, 0x5c, 0x6e, 0x1c, 0x41, 0x75, 0x26,
	0x77, 0x46, 0x4a, 0xb0, 0x96, 0x0e, 0x83, 0x40, 0xa5, 0xa5, 0x52, 0xa5, 0xa9, 0xe3, 0x7d, 0x94,
	0xd2, 0xd7, 0xa5, 0x5c, 0xe3, 0x18, 0xa4, 0xd9, 0x0c, 0x94, 0xf0, 0xaf, 0x67, 0x72, 0x50, 0xc2,
	0x48, 0xb5, 0x94, 0xfe, 0x4b, 0x5d, 0xeb, 0x19, 0x72, 0xaf, 0x27, 0xe5, 0x1a, 0xdf, 0xc0, 0x7a,
	0x9c, 0x24, 0x22, 0xdb, 0x30, 0x97, 0x26, 0x92, 0x96, 0x08, 0xc0, 0xea, 0x99, 0xa6, 0x9d, 0xe1,
	0x65, 0x6b, 0x19, 0x8a, 0x49, 0xf5, 0xbe, 0x94, 0x6f, 0xf4, 0x40, 0x9a, 0xcd, 0x05, 0xa1, 0x19,
	0x8c, 0xad, 0x64, 0xa7, 0x27, 0x2d, 0x89, 0xfd, 0x96, 0xa6, 0x87, 0x84, 0xce, 0xe2, 0x27, 0xa3,
	0xcd, 0xdd, 0xfa, 0x78, 0x2a, 0xf9, 0xc6, 0x19, 0xac, 0xc5, 0x89, 0x9f, 0xcc, 0x68, 0x92, 0xb6,
	0x28, 0xad, 0xa5, 0xca, 0x6d, 0xae, 0x80, 0x73, 0xbd, 0xc3, 0xc3, 0x83, 0x6d, 0x90, 0xb2, 0x14,
	0xec, 0x35, 0xdf, 0xf8, 0x2f, 0x39, 0xd8, 0x5e, 0x94, 0x05, 0x22, 0x1f, 0xc0, 0x93, 0xac, 0x58,
	0xb9, 0x15, 0x5f, 0xec, 0xe1, 0x7a, 0x44, 0xb6, 0x7c, 0x07, 0x48, 0xc4, 0xe4, 0x5b, 0x0b, 0xef,
	0xa2, 0x71, 0xb5, 0x3f, 0x82, 0x0f, 0x23, 0x7a, 0x44, 0x33, 0xe4, 0xae, 0xc0, 0x28, 0x32, 0x6d,
	0x7f, 0x17, 0xab, 0xad, 0x25, 0xe5, 0xc9, 0x87, 0xf0, 0xfe, 0x02, 0xe8, 0x0c, 0x4c, 0x84, 0x2a,
	0x53, 0xc3, 0x68, 0x49, 0xcb, 0x8d, 0xff, 0x98, 0x83, 0xf2, 0x54, 0x06, 0x29, 0x5b, 0x44, 0x91,
	0x88, 0x6b, 0x89, 0xd1, 0x66, 0xee, 0x77, 0xeb, 0xb0, 0x33, 0xc3, 0x35, 0x4e, 0xe4, 0x6e, 0x17,
	0x97, 0x71, 0x01, 0xaf, 0x1b, 0x17, 0x55, 0xf0, 0x05, 0x99, 0xe1, 0x09, 0xff, 0x24, 0xbf, 0x88,
	0x25, 0x2a, 0x15, 0x0a, 0xf5, 0x7f, 0x97, 0x87, 0xad, 0x05, 0x5f, 0x55, 0x70, 0xdf, 0x36, 0x4e,
	0x50, 0x45, 0x46, 0x69, 0x83, 0x16, 0x23, 0x4a, 0xf4, 0xf5, 0x5d, 0x92, 0xf3, 0x71, 0x2c, 0xf6,
	0x2e, 0xae, 0xe9, 0x8a, 0xa9, 0x2a, 0x27, 0x92, 0x17, 0xb0, 0x9d, 0xc0, 0x44, 0xba, 0x59, 0x5c,
	0x83, 0x88, 0x30, 0x86, 0xc4, 0x3c, 0xf1, 0x8e, 0xe0, 0x5d, 0xc8, 0x63, 0x80, 0x4c, 0xbc, 0xbe,
	0x1c, 0x55, 0xa6, 0x27, 0xa1, 0xfa, 0xaf, 0xa1, 0xc6, 0xde, 0x30, 0x27, 0x34, 0x1c, 0x37, 0xb4,
	0xaf, 0xed, 0x81, 0xc8, 0x64, 0x87, 0xee, 0x2d, 0x13, 0xc5, 0x56, 0x1b, 0x74, 0x07, 0xf9, 0xdd,
	0x0c, 0x5b, 0xe7, 0xdc, 0xc5, 0xb9, 0xaa, 0xd5, 0x85, 0xb9, 0xaa, 0xc6, 0xd7, 0xb0, 0x79, 0xb1,
	0xe0, 0xf3, 0xc6, 0x7d, 0x5d, 0x3e, 0x33, 0x4e, 0x35, 0x6a, 0x34, 0xcf, 0xd5, 0x76, 0xcb, 0x10,
	0xaf, 0xb0, 0xd2, 0x32, 0x74, 0xaa, 0xc8, 0xba, 0xa8, 0x18, 0x69, 0xfc, 0x4b, 0xee, 0xe4, 0xa5,
	0xdf, 0x14, 0x65, 0x2c, 0x5e, 0x1c, 0xcc, 0xa6, 0x9e, 0xc6, 0xa9, 0x4a, 0xfb, 0xba, 0xf8, 0x12,
	0x49, 0x54, 0x97, 0x64, 0xbf, 0x4d, 0x12, 0x97, 0xf7, 0xa7, 0xea, 0x6b, 0x25, 0x26, 0x14, 0x1a,
	0x7f, 0x9f, 0x83, 0xf2, 0xd4, 0xf7, 0x38, 0xd9, 0x8a, 0x88, 0xe9, 0x2f, 0x72, 0xa4, 0x25, 0x3e,
	0x60, 0xb9, 0xf5, 0x3a, 0x43, 0xd7, 0x5e, 0x75, 0xa3, 0x1d, 0xac, 0xf5, 0x14, 0xca, 0xbd, 0x59,
	0x29, 0xc7, 0x1d, 0xa2, 0x69, 0x14, 0xe5, 0xbe, 0x6e, 0x5f, 0xe9, 0x8a, 0x02, 0x82, 0x1d, 0x20,
	0xc2, 0x70, 0x4c, 0xd1, 0x0b, 0x8d, 0x7f, 0xdc, 0x86, 0x52, 0x66, 0xdf, 0x90, 0x27, 0x90, 0x37,
	0x45, 0x0e, 0xaf, 0x74, 0x54, 0xcd, 0x7e, 0xa7, 0x73, 0x28, 0x5b, 0x34, 0x6f, 0x62, 0x65, 0xa1,
	0xc5, 0xae, 0x26, 0x43, 0x23, 0x08, 0x7d, 0xdb, 0x19, 0xe2, 0x6a, 0x15, 0x69, 0x09, 0x69, 0x7d,
	0x24, 0xe1, 0xe7, 0x86, 0xbe, 0x3b, 0x60, 0x01, 0x56, 0xfb, 0x86, 0xf6, 0x18, 0x3f, 0xd9, 0x11,
	0xd1, 0xab, 0x94, 0x72, 0x74, 0x7b, 0xcc, 0x3a, 0x41, 0xfd, 0x1f, 0xb6, 0x20, 0x2f, 0x5b, 0x3f,
	0xb8, 0x23, 0xf6, 0x7e, 0xfe, 0x8e, 0x80, 0x85, 0x3b, 0x82, 0x8f, 0xfe, 0x26, 0x1c, 0x8f, 0x8c,
	0xc0, 0xb1, 0x3d, 0x8f, 0x85, 0xd1, 0x29, 0x5d, 0xe2, 0xb4, 0xbe, 0x20, 0x91, 0x87, 0x50, 0x14,
	0x77, 0x62, 0x13, 0x7f, 0x84, 0xc1, 0x60, 0x91, 0xae, 0x23, 0xe1, 0xc2, 0xc7, 0x94, 0x95, 0x60,
	0xbe, 0x31, 0x83, 0xd0, 0x78, 0x37, 0x1e, 0x45, 0xf5, 0xbf, 0x1b, 0x48, 0xbd, 0x34, 0x83, 0xf0,
	0xf5, 0x78, 0x44, 0x1e, 0x01, 0x44, 0x69, 0x72, 0x2e, 0x63, 0x57, 0xc8, 0xc0, 0x84, 0xb7, 0x28,
	0x19, 0x2d, 0x26, 0xd7, 0x4f, 0x18, 0x5f, 0x95, 0x8e, 0x6a, 0x33, 0x9a, 0x4e, 0x42, 0x37, 0xba,
	0x1e, 0x5f, 0x35, 0xf1, 0x69, 0x4e, 0xdf, 0xee, 0x71, 0xd9, 0xcb, 0x98, 0x1d, 0xa9, 0x66, 0x2f,
	0xf6, 0x78, 0x17, 0x4f, 0xa0, 0x94, 0xbd, 0xe4, 0x5f, 0xc1, 0xe2, 0x01, 0x78, 0x93, 0xde, 0xec,
	0x3f, 0x82, 0x62, 0x5a, 0x37, 0x80, 0x35, 0x00, 0x34, 0x25, 0x90, 0x3a, 0xac, 0x4f, 0x5f, 0xab,
	0xd3, 0xe4, 0x99, 0xfc, 0x02, 0xb6, 0x16, 0xdd, 0x9c, 0x6f, 0x22, 0x8c, 0xf8, 0xf3, 0xd7, 0xe5,
	0xcf, 0xa1, 0x9a, 0xc9, 0x2c, 0x60, 0xcd, 0x74, 0x09, 0x47, 0x5d, 0x49, 0xc9, 0x58, 0x3a, 0xfd,
	0x04, 0x4a, 0x57, 0xb6, 0x65, 0xc5, 0xa0, 0x1d, 0xf1, 0x19, 0xab, 0x20, 0x21, 0x20, 0xa9, 0x91,
	0x10, 0xb9, 0x84, 0xb9, 0x1a, 0x09, 0x91, 0x25, 0x88, 0x6b, 0x24, 0x1e, 0x42, 0x11, 0x13, 0x9b,
	0x77, 0x71, 0x20, 0x5d, 0xa0, 0xeb, 0x82, 0xa0, 0x5a, 0xe4, 0x30, 0xf9, 0xb0, 0xad, 0x90, 0xfd,
	0x04, 0x2a, 0x5d, 0x80, 0x99, 0x8f, 0xdb, 0xbe, 0x82, 0xdd, 0x34, 0x2f, 0x67, 0x84, 0xbe, 0xc9,
	0x7d, 0xd5, 0x21, 0x2e, 0xc1, 0x16, 0x4e, 0xe6, 0x41, 0xca, 0xd6, 0x23, 0x2e, 0x5f, 0x08, 0x4c,
	0xab, 0x18, 0x83, 0x1b, 0xd7, 0x1e, 0xb0, 0xc0, 0xb0, 0x58, 0x10, 0xda, 0x8e, 0x99, 0x94, 0x14,
	0x8b, 0xef, 0xaa, 0x77, 0x4d, 0xab, 0x29, 0x00, 0xad, 0x94, 0xcf, 0x1b, 0x8f, 0xe0, 0xd1, 0xa2,
	0x4e, 0x7d, 0x16, 0xdd, 0x81, 0xd5, 0x71, 0xe8, 0x1f, 0xcf, 0x0e, 0x5d, 0x9d, 0x1b, 0x09, 0x8d,
	0x5a, 0xd0, 0xba, 0x7d, 0x2f, 0x8f, 0x28, 0x50, 0x0d, 0xac, 0x5b, 0x23, 0xba, 0x89, 0xb2, 0xf8,
	0xe6, 0x7c, 0x88, 0x9b, 0xf3, 0xf1, 0x6c, 0x07, 0x7d, 0xeb, 0x36, 0x72, 0x53, 0x2c, 0xd9, 0xa2,
	0xe5, 0x20, 0xfb, 0x58, 0xff, 0x6f, 0x2b, 0xb0, 0x1e, 0xef, 0x5e, 0xbe, 0x91, 0xe2, 0x14, 0x57,
	0xf4, 0xaa, 0x25, 0xcf, 0xdc, 0x8f, 0xbe, 0x72, 0xad, 0xbb, 0xd8, 0x8f, 0xe6, 0xbf, 0xf9, 0xeb,
	0x35, 0x9d, 0xc8, 0x12, 0x5f, 0x51, 0xd1, 0x8d, 0x6c, 0xe2, 0x8a, 0xbc, 0x07, 0x90, 0x6e, 0x1d,
	0xf1, 0x3d, 0x15, 0xcd, 0x50, 0xc8, 0x97, 0xb0, 0x82, 0xe9, 0x9d, 0xe8, 0x6b, 0xaa, 0xf7, 0xee,
	0x7b, 0xb9, 0x0e, 0x55, 0x8e, 0xa2, 0x02, 0x4c, 0x8e, 0x60, 0x79, 0xe4, 0x0e, 0x5d, 0x3c, 0x4b,
	0x7e, 0xbc, 0x11, 0x62, 0xc9, 0xd7, 0xe2, 0x43, 0x00, 0x7b, 0xe0, 0x3a, 0x98, 0x7a, 0xfa, 0xf1,
	0x76, 0x6b, 0x51, 0xb2, 0x67, 0xda, 0xcc, 0x94, 0x67, 0xcc, 0x0c, 0xa6, 0x58, 0x4c, 0x3f, 0xfe,
	0x8c, 0x60, 0x7d, 0x3f, 0x77, 0x90, 0xa3, 0xc0, 0x49, 0xd1, 0x77, 0x04, 0x5c, 0x51, 0x68, 0x0c,
	0x46, 0xb6, 0x73, 0x8b, 0x22, 0x2a, 0x91, 0xa2, 0x38, 0xb5, 0x6d, 0x3b, 0xb7, 0x5c, 0xcc, 0xa7,
	0x49, 0x41, 0x40, 0x76, 0xc3, 0x8a, 0x6f, 0xa1, 0xa2, 0x62, 0x80, 0xcc, 0x5e, 0x3d, 0x84, 0xad,
	0x79, 0x74, 0x80, 0xc5, 0x16, 0x45, 0xba, 0x39, 0x0b, 0xc7, 0xaa, 0x4e, 0x4c, 0xc8, 0x45, 0xb6,
	0x56, 0x3c, 0x90, 0x8f, 0xa6, 0xb2, 0x2c, 0x98, 0x0b, 0xc4, 0x3c, 0x57, 0x91, 0x56, 0x67, 0x72,
	0x7f, 0xe4, 0x25, 0x34, 0xb2, 0x75, 0xba, 0xf7, 0xbc, 0x5f, 0x45, 0xec, 0xff, 0x49, 0xa6, 0x08,
	0x77, 0xd1, 0x9b, 0x56, 0x3f, 0x83, 0x15, 0xd4, 0x70, 0xfc, 0x3d, 0x75, 0x2e, 0xfd, 0x9e, 0x3a,
	0x53, 0x5b, 0x95, 0x5b, 0x5c, 0x5b, 0x95, 0xb1, 0x1b, 0xf5, 0x7f, 0x2a, 0xdc, 0x5b, 0xf5, 0xf5,
	0x54, 0x94, 0xac, 0x4f, 0x5d, 0x44, 0xe4, 0x0f, 0x0a, 0x74, 0x63, 0x6c, 0xbe, 0x4b, 0xaf, 0x21,
	0x38, 0xca, 0x76, 0xb2, 0xa8, 0x82, 0xb8, 0xd6, 0x18, 0xdb, 0x4e, 0x8a, 0x7a, 0x3c, 0x75, 0x69,
	0x16, 0x39, 0x48, 0xe9, 0x85, 0x59, 0x1d, 0xd6, 0xe2, 0x4b, 0x11, 0xbc, 0x25, 0x3b, 0xce, 0xbd,
	0xa0, 0xab, 0x56, 0x72, 0x23, 0x92, 0xd4, 0xb7, 0xc4, 0x20, 0xe1, 0x01, 0x55, 0x62, 0x7a, 0x74,
	0x77, 0x32, 0xc0, 0x3a, 0x9f, 0x0c, 0x12, 0x8f, 0x83, 0xb5, 0xec, 0x55, 0xed, 0xac, 0xc9, 0x4b,
	0xea, 0x61, 0x92, 0xcb, 0x90, 0x0d, 0xad, 0xa7, 0x24, 0x6e, 0x0f, 0x95, 0xd8, 0x0c, 0x9f, 0xef,
	0x32, 0x71, 0xfe, 0xfa, 0xcc, 0x73, 0xfd, 0x30, 0x9a, 0xd1, 0xba, 0xd8, 0x65, 0xc8, 0xa1, 0x31,
	0x43, 0xb5, 0x1a, 0xb7, 0x78, 0xff, 0x38, 0x2d, 0x41, 0x82, 0xa9, 0x3e, 0xa4, 0xa5, 0x45, 0xd7,
	0x0c, 0xb9, 0x05, 0xf7, 0x11, 0x79, 0x1e, 0xc0, 0x29, 0xaf, 0x9b, 0xe7, 0x72, 0xf7, 0x2c, 0x41,
	0x26, 0xd7, 0x0c, 0x85, 0xfa, 0x9f, 0xf2, 0x50, 0xbf, 0xdf, 0x1c, 0xf2, 0x35, 0x10, 0x1f, 0x73,
	0x18, 0xe9, 0x8e, 0x29, 0x0a, 0x0a, 0x7f, 0x21, 0xda, 0xb0, 0x86, 0xc5, 0xe5, 0xef, 0x42, 0x74,
	0x88, 0x2a, 0x71, 0x42, 0xef, 0xa7, 0x98, 0x5a, 0x51, 0xa9, 0xfe, 0x0e, 0x3f, 0xe7, 0xc5, 0x1f,
	0xe4, 0x57, 0xb0, 0xfb, 0x86, 0xf9, 0xa9, 0x6b, 0x93, 0x5c, 0x71, 0x04, 0x91, 0x91, 0xdb, 0xc9,
	0xb2, 0x93, 0x6b, 0x0e, 0xdc, 0x29, 0xd1, 0x61, 0x7e, 0xcb, 0xee, 0x22, 0x73, 0x57, 0x14, 0x94,
	0x97, 0xec, 0xae, 0x71, 0x00, 0x6b, 0x51, 0x5f, 0x5c, 0x6b, 0x49, 0x75, 0xb7, 0xd6, 0xd5, 0x95,
	0xd7, 0xba, 0xb4, 0x44, 0xd6, 0x61, 0x59, 0xeb, 0x60, 0xe6, 0xf2, 0x14, 0xca, 0x53, 0xa6, 0x7b,
	0xee, 0xb3, 0xa1, 0x0f, 0xa1, 0x22, 0xcc, 0x3f, 0x16, 0xde, 0xa4, 0x49, 0x8e, 0x72, 0x42, 0xe5,
	0xae, 0xf4, 0x3f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x4c, 0xc0, 0x4f, 0xa5, 0xb7, 0x44, 0x00, 0x00,
}
